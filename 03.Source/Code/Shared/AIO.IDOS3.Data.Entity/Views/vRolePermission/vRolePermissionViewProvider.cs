// ===================================================================================
// Author        : System
// Created date  : 09 Aug 2020 15:54:24
// Description   : vRolePermissionViewProvider partial class.
//
// Modified by   :
// Modified date :
// Comments      :
//
// NOTE: This file is initially generated by system and can be modified following
//       the requirement.
// ===================================================================================

using System;
using System.Threading.Tasks;
using Wismapi.Data.Entity;

namespace AIO.IDOS3.Data.Entity
{

    public partial class vRolePermissionViewProvider : DataViewProvider<vRolePermission>
    {

        #region Methods
        
        protected override void OnInsertData(vRolePermission obj, bool useTransaction) { OnInsertDataAsync(obj, useTransaction).Wait(); }
        protected override void OnUpdateData(vRolePermission obj, bool useTransaction) { OnUpdateDataAsync(obj, useTransaction).Wait(); }
        protected override void OnDeleteData(vRolePermission obj, bool useTransaction) { OnDeleteDataAsync(obj, useTransaction).Wait(); }


        protected override async Task OnInsertDataAsync(vRolePermission obj, bool useTransaction)
        {
            var rolePermissionTableProvider = DbContext.GetDataTableProvider<RolePermissionTableProvider>();

            var rolePermission = new RolePermission();

            rolePermission.RoleID = obj.RoleID;
            rolePermission.PermissionObjectID = obj.PermissionObjectID;

            await rolePermissionTableProvider.InsertDataAsync(rolePermission);
        }

        protected override async Task OnUpdateDataAsync(vRolePermission obj, bool useTransaction)
        {
            var rolePermissionTableProvider = DbContext.GetDataTableProvider<RolePermissionTableProvider>();

            var rolePermission = await rolePermissionTableProvider.GetDataAsync(obj.RoleID, obj.PermissionObjectID);


            await rolePermissionTableProvider.UpdateDataAsync(rolePermission);
        }

        protected override async Task OnDeleteDataAsync(vRolePermission obj, bool useTransaction)
        {
            await Task.CompletedTask;
            throw new NotImplementedException();
        }

        #endregion

    }

}
