// ===================================================================================
// Author        : System
// Created date  : 22 Aug 2020 19:28:02
// Description   : StockOnHandCurrent partial class.
//
// NOTE: This file is generated by system. Please do not modify this file.
//       Consider regenerate or modify through partial class. If required,
//       a partial class should be created as 'StockOnHandCurrent.cs'
//       up to one level of this file location inside 'StockOnHandCurrent' folder.
// ===================================================================================

namespace AIO.IDOS3.Data.Entity
{
    
    public partial class StockOnHandCurrent : IStockOnHandCurrent
    {                
        
        #region Implements IStockOnHandCurrent

        public int ID { get; set; }            
        public System.Guid WarehouseID { get; set; }            
        public int ProductID { get; set; }            
        public int? ProductLotID { get; set; }            
        public int QtyOnHandGood { get; set; }            
        public int QtyOnHandHold { get; set; }            
        public int QtyOnHandBad { get; set; }            
        public int QtyReservedGood { get; set; }            
        public int QtyReservedHold { get; set; }            
        public int QtyReservedBad { get; set; }            
        public int QtyInTransitGood { get; set; }            
        public int QtyInTransitHold { get; set; }            
        public int QtyInTransitBad { get; set; }            

        
        
        public void CopyFrom(IStockOnHandCurrent obj)
        {
            ID = obj.ID;
            WarehouseID = obj.WarehouseID;
            ProductID = obj.ProductID;
            ProductLotID = obj.ProductLotID;
            QtyOnHandGood = obj.QtyOnHandGood;
            QtyOnHandHold = obj.QtyOnHandHold;
            QtyOnHandBad = obj.QtyOnHandBad;
            QtyReservedGood = obj.QtyReservedGood;
            QtyReservedHold = obj.QtyReservedHold;
            QtyReservedBad = obj.QtyReservedBad;
            QtyInTransitGood = obj.QtyInTransitGood;
            QtyInTransitHold = obj.QtyInTransitHold;
            QtyInTransitBad = obj.QtyInTransitBad;
        }
        
        #endregion
        
    }

}
