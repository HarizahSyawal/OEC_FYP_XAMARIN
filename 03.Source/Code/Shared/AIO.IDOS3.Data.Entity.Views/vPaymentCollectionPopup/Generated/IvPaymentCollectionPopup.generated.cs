// ===================================================================================
// Author        : System
// Created date  : 31 Aug 2020 20:36:12
// Description   : IvPaymentCollectionPopup partial interface.
//
// NOTE: This file is generated by system. Please do not modify this file.
//       Consider regenerate or modify through partial interface. If required,
//       a partial interface should be created as 'IvPaymentCollectionPopup.cs'
//       up to one level of this file location inside 'vPaymentCollectionPopup' folder.
// ===================================================================================

namespace AIO.IDOS3.Data.Entity
{

    public partial interface IvPaymentCollectionPopup
    {                
        
        #region Properties
        
        System.Guid DocumentID { get; set; }
        string DocumentCode { get; set; }
        System.DateTime TransactionDate { get; set; }
        bool? IsPaidByCustomer { get; set; }
        System.Guid? PaidByCustomerBillGroupID { get; set; }
        string PaidByCustomerBillGroup { get; set; }
        System.Guid? PaidByCustomerID { get; set; }
        string PaidByCustomer { get; set; }
        System.Guid? CollectorID { get; set; }
        string Collector { get; set; }
        bool IsCollectedByHeadOffice { get; set; }
        System.Guid? CollectedBySiteID { get; set; }
        string CollectedBySite { get; set; }
        int? CollectedByAreaID { get; set; }
        string CollectedByArea { get; set; }
        int? CollectedByRegionID { get; set; }
        string CollectedByRegion { get; set; }
        int? CollectedByTerritoryID { get; set; }
        string CollectedByTerritory { get; set; }
        int? CollectedByCompanyID { get; set; }
        string CollectedByCompany { get; set; }
        bool IsCash { get; set; }
        bool IsBalance { get; set; }
        int? MultiPaymentID { get; set; }
        string MultiPaymentCode { get; set; }
        string MultiPaymentName { get; set; }
        string MultiPayment { get; set; }
        int? MultiPaymentTypeID { get; set; }
        string MultiPaymentTypeName { get; set; }
        string BankTransferTransactionCode { get; set; }
        string BankTransferProofOfTransferPhoto { get; set; }
        System.Guid? GiroID { get; set; }
        string Giro { get; set; }
        string VirtualAccountCode { get; set; }
        string MobilePaymentTransactionCode { get; set; }
        string CurrencyID { get; set; }
        string CurrencyName { get; set; }
        double OriginAmount { get; set; }
        double RawAmount { get; set; }
        double Amount { get; set; }
        bool IsUsePartialBalance { get; set; }
        double PartialBalanceAmount { get; set; }
        double? AvailableBalanceAmount { get; set; }
        double? AdditionalCost1Amount { get; set; }
        double? AdditionalCost2Amount { get; set; }
        double? AdditionalCost3Amount { get; set; }
        double? AdditionalCost4Amount { get; set; }
        double? AdditionalCost5Amount { get; set; }
        double? AdditionalCost6Amount { get; set; }
        double? AdditionalCost7Amount { get; set; }
        double? AdditionalCost8Amount { get; set; }
        double? AdditionalCost9Amount { get; set; }
        double? AdditionalCost10Amount { get; set; }
        double RawTotalAmount { get; set; }
        double RawTotalAllocationAmount { get; set; }
        double? RawTotalDiffAmount { get; set; }
        double RawTotalAdditionalCostAllocationAmount { get; set; }
        double? RawTotalDiffAdditionalCostAmount { get; set; }
        double TotalAmount { get; set; }
        double TotalAllocationAmount { get; set; }
        double? TotalDiffAmount { get; set; }
        double TotalAdditionalCostAmount { get; set; }
        double TotalAdditionalCostAllocationAmount { get; set; }
        double? TotalDiffAdditionalCostAmount { get; set; }
        string ReferenceNumber { get; set; }
        System.Guid? PRDocumentID { get; set; }
        string PRDocumentCode { get; set; }
        System.DateTime? PRTransactionDate { get; set; }
        int PrintCount { get; set; }
        System.DateTime? LastPrintedDate { get; set; }
        int DocumentStatusID { get; set; }
        string DocumentStatusName { get; set; }
        string MobileDocumentCode { get; set; }
        System.DateTime? PostedDate { get; set; }
        System.DateTime CreatedDate { get; set; }
        int? CreatedByUserID { get; set; }
        string CreatedByUserName { get; set; }
        System.DateTime? ModifiedDate { get; set; }
        int? ModifiedByUserID { get; set; }
        string ModifiedByUserName { get; set; }

        #endregion

        #region Methods
        
        void CopyFrom(IvPaymentCollectionPopup obj);
        
        #endregion
        
    }

}
