// ===================================================================================
// Author        : System
// Created date  : 31 Aug 2020 20:35:57
// Description   : vDailySalesAndCollection partial class.
//
// NOTE: This file is generated by system. Please do not modify this file.
//       Consider regenerate or modify through partial class. If required,
//       a partial class should be created as 'vDailySalesAndCollection.cs'
//       up to one level of this file location inside 'vDailySalesAndCollection' folder.
// ===================================================================================

using Microsoft.OData.Client;

namespace AIO.IDOS3.Data.Entity
{
        
    public partial class vDailySalesAndCollection : BaseEntityType, IvDailySalesAndCollection
    {                
        
        #region Implements IvDailySalesAndCollection

        public System.Guid? CollectorID { get; set; }
        public System.Guid PRDocumentID { get; set; }
        public bool IsCollectedByHeadOffice { get; set; }
        public System.Guid? CollectedBySiteID { get; set; }
        public string CollectorCode { get; set; }
        public string CollectorName { get; set; }
        public string Collector { get; set; }
        public System.DateTime PRTransactionDate { get; set; }
        public System.Guid? CDRDocumentID { get; set; }
        public double? CashSalesAmount { get; set; }
        public double? CashInBARSAmount { get; set; }
        public double? CashOutBARSAmount { get; set; }
        public double? BalanceSalesAmount { get; set; }
        public double? BalanceInBARSAmount { get; set; }
        public double? BalanceOutBARSAmount { get; set; }
        public int? MultiPaymentBankTransferCount { get; set; }
        public double? MultiPaymentBankTransferAmount { get; set; }
        public int? MultiPaymentGiroCount { get; set; }
        public double? MultiPaymentGiroAmount { get; set; }
        public int? MultiPaymentVirtualAccountCount { get; set; }
        public double? MultiPaymentVirtualAccountAmount { get; set; }
        public int? MultiPaymentMobilePaymentCount { get; set; }
        public double? MultiPaymentMobilePaymentAmount { get; set; }
        
        
        
        public void CopyFrom(IvDailySalesAndCollection obj)
        {
            CollectorID = obj.CollectorID;
            PRDocumentID = obj.PRDocumentID;
            IsCollectedByHeadOffice = obj.IsCollectedByHeadOffice;
            CollectedBySiteID = obj.CollectedBySiteID;
            CollectorCode = obj.CollectorCode;
            CollectorName = obj.CollectorName;
            Collector = obj.Collector;
            PRTransactionDate = obj.PRTransactionDate;
            CDRDocumentID = obj.CDRDocumentID;
            CashSalesAmount = obj.CashSalesAmount;
            CashInBARSAmount = obj.CashInBARSAmount;
            CashOutBARSAmount = obj.CashOutBARSAmount;
            BalanceSalesAmount = obj.BalanceSalesAmount;
            BalanceInBARSAmount = obj.BalanceInBARSAmount;
            BalanceOutBARSAmount = obj.BalanceOutBARSAmount;
            MultiPaymentBankTransferCount = obj.MultiPaymentBankTransferCount;
            MultiPaymentBankTransferAmount = obj.MultiPaymentBankTransferAmount;
            MultiPaymentGiroCount = obj.MultiPaymentGiroCount;
            MultiPaymentGiroAmount = obj.MultiPaymentGiroAmount;
            MultiPaymentVirtualAccountCount = obj.MultiPaymentVirtualAccountCount;
            MultiPaymentVirtualAccountAmount = obj.MultiPaymentVirtualAccountAmount;
            MultiPaymentMobilePaymentCount = obj.MultiPaymentMobilePaymentCount;
            MultiPaymentMobilePaymentAmount = obj.MultiPaymentMobilePaymentAmount;
        }
        
        #endregion

    }

}
