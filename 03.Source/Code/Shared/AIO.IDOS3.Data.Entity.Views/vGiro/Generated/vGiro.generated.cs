// ===================================================================================
// Author        : System
// Created date  : 31 Aug 2020 20:36:03
// Description   : vGiro partial class.
//
// NOTE: This file is generated by system. Please do not modify this file.
//       Consider regenerate or modify through partial class. If required,
//       a partial class should be created as 'vGiro.cs'
//       up to one level of this file location inside 'vGiro' folder.
// ===================================================================================

using Microsoft.OData.Client;

namespace AIO.IDOS3.Data.Entity
{
        
    public partial class vGiro : BaseEntityType, IvGiro
    {                
        
        #region Implements IvGiro

        public System.Guid ID { get; set; }
        public int BankID { get; set; }
        public string Code { get; set; }
        public string BankCode { get; set; }
        public string BankName { get; set; }
        public string Bank { get; set; }
        public string Giro { get; set; }
        public string CurrentAccountCode { get; set; }
        public string CurrentAccountName { get; set; }
        public System.DateTime ReceivedDate { get; set; }
        public System.DateTime IssuedDate { get; set; }
        public bool? IsIssuedByCustomer { get; set; }
        public System.Guid? IssuedByCustomerBillGroupID { get; set; }
        public string IssuedByCustomerBillGroupCode { get; set; }
        public string IssuedByCustomerBillGroupName { get; set; }
        public string IssuedByCustomerBillGroup { get; set; }
        public int? IssuedByCustomerBillGroupHeadID { get; set; }
        public string IssuedByCustomerBillGroupHeadCode { get; set; }
        public string IssuedByCustomerBillGroupHeadName { get; set; }
        public string IssuedByCustomerBillGroupHead { get; set; }
        public System.Guid? IssuedByCustomerID { get; set; }
        public string IssuedByCustomerCode { get; set; }
        public string IssuedByCustomerName { get; set; }
        public string IssuedByCustomer { get; set; }
        public System.Guid? CollectorID { get; set; }
        public string CollectorCode { get; set; }
        public string CollectorName { get; set; }
        public string Collector { get; set; }
        public bool? IsCollectedByHeadOffice { get; set; }
        public System.Guid? CollectedBySiteID { get; set; }
        public string CollectedBySiteCode { get; set; }
        public string CollectedBySiteName { get; set; }
        public string CollectedBySite { get; set; }
        public int? CollectedByAreaID { get; set; }
        public string CollectedByAreaCode { get; set; }
        public string CollectedByAreaName { get; set; }
        public string CollectedByArea { get; set; }
        public int? CollectedByRegionID { get; set; }
        public string CollectedByRegionCode { get; set; }
        public string CollectedByRegionName { get; set; }
        public string CollectedByRegion { get; set; }
        public int? CollectedByTerritoryID { get; set; }
        public string CollectedByTerritoryCode { get; set; }
        public string CollectedByTerritoryName { get; set; }
        public string CollectedByTerritory { get; set; }
        public int? CollectedByCompanyID { get; set; }
        public string CollectedByCompanyCode { get; set; }
        public string CollectedByCompanyName { get; set; }
        public string CollectedByCompany { get; set; }
        public int? CollectedBySiteDistributionTypeID { get; set; }
        public string CollectedBySiteDistributionTypeName { get; set; }
        public bool? IsCollectedBySiteProductLotCodeEntryRequired { get; set; }
        public bool IsCheque { get; set; }
        public System.DateTime EffectiveDateFrom { get; set; }
        public System.DateTime EffectiveDateTo { get; set; }
        public double Amount { get; set; }
        public int IncomingAccountID { get; set; }
        public string IncomingAccountCode { get; set; }
        public string IncomingAccountName { get; set; }
        public string IncomingAccount { get; set; }
        public int? IncomingBankID { get; set; }
        public string IncomingBankCode { get; set; }
        public string IncomingBankName { get; set; }
        public string IncomingBank { get; set; }
        public string Remarks { get; set; }
        public System.Guid? PCDocumentID { get; set; }
        public string PCDocumentCode { get; set; }
        public System.DateTime? PCTransactionDate { get; set; }
        public int StatusID { get; set; }
        public string StatusName { get; set; }
        public System.DateTime? ClearingDate { get; set; }
        public string Photo { get; set; }
        public System.DateTime CreatedDate { get; set; }
        public int? CreatedByUserID { get; set; }
        public string CreatedByUserName { get; set; }
        public System.DateTime? ModifiedDate { get; set; }
        public int? ModifiedByUserID { get; set; }
        public string ModifiedByUserName { get; set; }
        public bool IsDeleted { get; set; }
        
        
        
        public void CopyFrom(IvGiro obj)
        {
            ID = obj.ID;
            BankID = obj.BankID;
            Code = obj.Code;
            BankCode = obj.BankCode;
            BankName = obj.BankName;
            Bank = obj.Bank;
            Giro = obj.Giro;
            CurrentAccountCode = obj.CurrentAccountCode;
            CurrentAccountName = obj.CurrentAccountName;
            ReceivedDate = obj.ReceivedDate;
            IssuedDate = obj.IssuedDate;
            IsIssuedByCustomer = obj.IsIssuedByCustomer;
            IssuedByCustomerBillGroupID = obj.IssuedByCustomerBillGroupID;
            IssuedByCustomerBillGroupCode = obj.IssuedByCustomerBillGroupCode;
            IssuedByCustomerBillGroupName = obj.IssuedByCustomerBillGroupName;
            IssuedByCustomerBillGroup = obj.IssuedByCustomerBillGroup;
            IssuedByCustomerBillGroupHeadID = obj.IssuedByCustomerBillGroupHeadID;
            IssuedByCustomerBillGroupHeadCode = obj.IssuedByCustomerBillGroupHeadCode;
            IssuedByCustomerBillGroupHeadName = obj.IssuedByCustomerBillGroupHeadName;
            IssuedByCustomerBillGroupHead = obj.IssuedByCustomerBillGroupHead;
            IssuedByCustomerID = obj.IssuedByCustomerID;
            IssuedByCustomerCode = obj.IssuedByCustomerCode;
            IssuedByCustomerName = obj.IssuedByCustomerName;
            IssuedByCustomer = obj.IssuedByCustomer;
            CollectorID = obj.CollectorID;
            CollectorCode = obj.CollectorCode;
            CollectorName = obj.CollectorName;
            Collector = obj.Collector;
            IsCollectedByHeadOffice = obj.IsCollectedByHeadOffice;
            CollectedBySiteID = obj.CollectedBySiteID;
            CollectedBySiteCode = obj.CollectedBySiteCode;
            CollectedBySiteName = obj.CollectedBySiteName;
            CollectedBySite = obj.CollectedBySite;
            CollectedByAreaID = obj.CollectedByAreaID;
            CollectedByAreaCode = obj.CollectedByAreaCode;
            CollectedByAreaName = obj.CollectedByAreaName;
            CollectedByArea = obj.CollectedByArea;
            CollectedByRegionID = obj.CollectedByRegionID;
            CollectedByRegionCode = obj.CollectedByRegionCode;
            CollectedByRegionName = obj.CollectedByRegionName;
            CollectedByRegion = obj.CollectedByRegion;
            CollectedByTerritoryID = obj.CollectedByTerritoryID;
            CollectedByTerritoryCode = obj.CollectedByTerritoryCode;
            CollectedByTerritoryName = obj.CollectedByTerritoryName;
            CollectedByTerritory = obj.CollectedByTerritory;
            CollectedByCompanyID = obj.CollectedByCompanyID;
            CollectedByCompanyCode = obj.CollectedByCompanyCode;
            CollectedByCompanyName = obj.CollectedByCompanyName;
            CollectedByCompany = obj.CollectedByCompany;
            CollectedBySiteDistributionTypeID = obj.CollectedBySiteDistributionTypeID;
            CollectedBySiteDistributionTypeName = obj.CollectedBySiteDistributionTypeName;
            IsCollectedBySiteProductLotCodeEntryRequired = obj.IsCollectedBySiteProductLotCodeEntryRequired;
            IsCheque = obj.IsCheque;
            EffectiveDateFrom = obj.EffectiveDateFrom;
            EffectiveDateTo = obj.EffectiveDateTo;
            Amount = obj.Amount;
            IncomingAccountID = obj.IncomingAccountID;
            IncomingAccountCode = obj.IncomingAccountCode;
            IncomingAccountName = obj.IncomingAccountName;
            IncomingAccount = obj.IncomingAccount;
            IncomingBankID = obj.IncomingBankID;
            IncomingBankCode = obj.IncomingBankCode;
            IncomingBankName = obj.IncomingBankName;
            IncomingBank = obj.IncomingBank;
            Remarks = obj.Remarks;
            PCDocumentID = obj.PCDocumentID;
            PCDocumentCode = obj.PCDocumentCode;
            PCTransactionDate = obj.PCTransactionDate;
            StatusID = obj.StatusID;
            StatusName = obj.StatusName;
            ClearingDate = obj.ClearingDate;
            Photo = obj.Photo;
            CreatedDate = obj.CreatedDate;
            CreatedByUserID = obj.CreatedByUserID;
            CreatedByUserName = obj.CreatedByUserName;
            ModifiedDate = obj.ModifiedDate;
            ModifiedByUserID = obj.ModifiedByUserID;
            ModifiedByUserName = obj.ModifiedByUserName;
            IsDeleted = obj.IsDeleted;
        }
        
        #endregion

    }

}
