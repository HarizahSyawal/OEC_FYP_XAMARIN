# ACW for AIO.IDOS3.Client.Mobile.Android
# ACW for DevExpress.Xamarin.Android.CollectionView
-keep class com.devexpress.dxlistview.AffectedIndexRange
-keepclassmembers class com.devexpress.dxlistview.AffectedIndexRange {
   <init>(...);
   *** getEnd(...);
   *** getSize(...);
   *** getStart(...);
   *** affect(...);
   *** clear(...);
   *** isAffected(...);
}

-keep class com.devexpress.dxlistview.BuildConfig
-keepclassmembers class com.devexpress.dxlistview.BuildConfig {
   <init>(...);
}

-keep class com.devexpress.dxlistview.DXHorizontalScrollView
-keepclassmembers class com.devexpress.dxlistview.DXHorizontalScrollView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getPendingScrollX(...);
   *** setPendingScrollX(...);
   *** getScrollView(...);
   *** setScrollView(...);
}

-keep class com.devexpress.dxlistview.DXListViewNative$WhenMappings
-keepclassmembers class com.devexpress.dxlistview.DXListViewNative$WhenMappings {
}

-keep class com.devexpress.dxlistview.DXListViewNative
-keepclassmembers class com.devexpress.dxlistview.DXListViewNative {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAllowCascadeUpdate(...);
   *** setAllowCascadeUpdate(...);
   *** getGroupItemSize(...);
   *** setGroupItemSize(...);
   *** getIndicatorColor(...);
   *** setIndicatorColor(...);
   *** getItemSize(...);
   *** setItemSize(...);
   *** getItemsViewProvider(...);
   *** setItemsViewProvider(...);
   *** getListener(...);
   *** setListener(...);
   *** isLoadMoreEnabled(...);
   *** setLoadMoreEnabled(...);
   *** getMaxGroupItemSize(...);
   *** setMaxGroupItemSize(...);
   *** getMaxItemSize(...);
   *** setMaxItemSize(...);
   *** getMinGroupItemSize(...);
   *** setMinGroupItemSize(...);
   *** getMinItemSize(...);
   *** setMinItemSize(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** isPullToRefreshEnabled(...);
   *** setPullToRefreshEnabled(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** isScrollBarVisible(...);
   *** setScrollBarVisible(...);
   *** moveItem(...);
   *** onLayout(...);
   *** rebuild(...);
   *** resetScrollOffset(...);
   *** scrollToItem(...);
   *** updateItems(...);
}

-keep class com.devexpress.dxlistview.DXLOrientation
-keepclassmembers class com.devexpress.dxlistview.DXLOrientation {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.dxlistview.DXVirtualScrollView
-keepclassmembers class com.devexpress.dxlistview.DXVirtualScrollView {
   *** getAllowCascadeUpdate(...);
   *** setAllowCascadeUpdate(...);
   *** getIndicatorColor(...);
   *** setIndicatorColor(...);
   *** isVertical(...);
   *** getItemsCount(...);
   *** getItemsViewProvider(...);
   *** setItemsViewProvider(...);
   *** getLayout(...);
   *** setLayout(...);
   *** getListener(...);
   *** setListener(...);
   *** isLoadMoreEnabled(...);
   *** setLoadMoreEnabled(...);
   *** getMotionDirection(...);
   *** isPullToRefreshEnabled(...);
   *** setPullToRefreshEnabled(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** isScrollBarVisible(...);
   *** setScrollBarVisible(...);
   *** getViewport(...);
   *** canLoadMore(...);
   *** canPullToRefresh(...);
   *** canScrollUp(...);
   *** layout(...);
   *** layoutSubviews(...);
   *** measure(...);
   *** measureSubviews(...);
   *** moveItem(...);
   *** overScrolledX(...);
   *** overScrolledY(...);
   *** processTouchEvent(...);
   *** scrollBy(...);
   *** scrollTo(...);
   *** scrollToItem(...);
   *** setContentOffsetX(...);
   *** setContentOffsetY(...);
   *** smoothScrollBy(...);
   *** startLoadMore(...);
   *** startPullToRefresh(...);
   *** transformPoint(...);
}

-keep class com.devexpress.dxlistview.ListViewListener
-keepclassmembers class com.devexpress.dxlistview.ListViewListener {
}

-keep class mono.com.devexpress.dxlistview.ListViewListenerImplementor
-keepclassmembers class mono.com.devexpress.dxlistview.ListViewListenerImplementor {
}

-keep class com.devexpress.dxlistview.LoadMoreActionProvider
-keepclassmembers class com.devexpress.dxlistview.LoadMoreActionProvider {
}

-keep class com.devexpress.dxlistview.IVirtualScrollView
-keepclassmembers class com.devexpress.dxlistview.IVirtualScrollView {
}

-keep class com.devexpress.dxlistview.LoadMoreAdapter
-keepclassmembers class com.devexpress.dxlistview.LoadMoreAdapter {
   <init>(...);
   *** getEnabled(...);
   *** setEnabled(...);
   *** getIndicatorColor(...);
   *** setIndicatorColor(...);
   *** isBusy(...);
   *** getItemCount(...);
   *** getView(...);
   *** getViewType(...);
   *** recycleView(...);
   *** refresh(...);
   *** startLoadMore(...);
   *** stopLoadMore(...);
   *** updateView(...);
}

-keep class com.devexpress.dxlistview.VirtualScrollPanel
-keepclassmembers class com.devexpress.dxlistview.VirtualScrollPanel {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getScrollView(...);
   *** setScrollView(...);
   *** onLayout(...);
}

-keep class com.devexpress.dxlistview.views.LoadMoreItemView
-keepclassmembers class com.devexpress.dxlistview.views.LoadMoreItemView {
   <init>(...);
   *** onLayout(...);
   *** setIndicatorColor(...);
}

-keep class com.devexpress.dxlistview.layouts.ComplexHorizontalItemsLayout
-keepclassmembers class com.devexpress.dxlistview.layouts.ComplexHorizontalItemsLayout {
   <init>(...);
   *** calculateFrameWithCurrentOffset(...);
   *** calculateLayoutContentSize(...);
   *** getEndBound(...);
   *** getMeasuredSizeForElement(...);
   *** getSize(...);
   *** getStartBound(...);
   *** makeLayoutCorrection(...);
   *** measureView(...);
   *** shouldUpdateLayoutElements(...);
}

-keep class com.devexpress.dxlistview.layouts.ComplexItemsLayout
-keepclassmembers class com.devexpress.dxlistview.layouts.ComplexItemsLayout {
   <init>(...);
   *** getAdditionalAreaSizeFromEnd(...);
   *** getAdditionalAreaSizeFromStart(...);
   *** addElementByIndex(...);
   *** addElementByIndexToCache(...);
   *** applyAdditionalLayoutAreaSize(...);
   *** calculateAnchor(...);
   *** calculateFrameWithCurrentOffset(...);
   *** calculateLayoutContentSize(...);
   *** calculateLayoutResult(...);
   *** clear(...);
   *** clearCachedElements(...);
   *** getActualViewPort(...);
   *** getEndBound(...);
   *** getItemSizeRangeByViewType(...);
   *** getMeasuredSizeForElement(...);
   *** getSize(...);
   *** getStartBound(...);
   *** layoutSubviews(...);
   *** makeLayoutCorrection(...);
   *** moveLayoutItems(...);
   *** removeInvisibleItems(...);
   *** resetAdditionalLayoutAreaSize(...);
   *** setItemSizeRangeByViewType(...);
   *** shouldUpdateLayoutElements(...);
   *** updateLayoutAnchor(...);
   *** updateLayoutElement(...);
}

-keep class com.devexpress.dxlistview.layouts.ComplexItemsLayout
-keepclassmembers class com.devexpress.dxlistview.layouts.ComplexItemsLayout {
   *** calculateFrameWithCurrentOffset(...);
   *** calculateLayoutContentSize(...);
   *** getEndBound(...);
   *** getMeasuredSizeForElement(...);
   *** getSize(...);
   *** getStartBound(...);
   *** makeLayoutCorrection(...);
   *** shouldUpdateLayoutElements(...);
   *** measureView(...);
}

-keep class com.devexpress.dxlistview.layouts.ComplexVerticalItemsLayout
-keepclassmembers class com.devexpress.dxlistview.layouts.ComplexVerticalItemsLayout {
   <init>(...);
   *** calculateFrameWithCurrentOffset(...);
   *** calculateLayoutContentSize(...);
   *** getEndBound(...);
   *** getMeasuredSizeForElement(...);
   *** getSize(...);
   *** getStartBound(...);
   *** makeLayoutCorrection(...);
   *** measureView(...);
   *** shouldUpdateLayoutElements(...);
}

-keep class com.devexpress.dxlistview.layouts.DXViewType
-keepclassmembers class com.devexpress.dxlistview.layouts.DXViewType {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.dxlistview.layouts.ItemSizeProvider
-keepclassmembers class com.devexpress.dxlistview.layouts.ItemSizeProvider {
   <init>(...);
   *** getAverageSize(...);
   *** getCount(...);
   *** getMinSize(...);
   *** getTotalSize(...);
   *** clear(...);
   *** deleteSize(...);
   *** getDesiredSize(...);
   *** getItemSizeRangeByViewType(...);
   *** getSizeBy(...);
   *** pushSize(...);
   *** setItemSizeRangeByViewType(...);
}

-keep class com.devexpress.dxlistview.layouts.ItemSizeRange
-keepclassmembers class com.devexpress.dxlistview.layouts.ItemSizeRange {
   *** create(...);
}

-keep class com.devexpress.dxlistview.layouts.LayoutAnchor
-keepclassmembers class com.devexpress.dxlistview.layouts.LayoutAnchor {
   <init>(...);
}

-keep class com.devexpress.dxlistview.layouts.LayoutElement
-keepclassmembers class com.devexpress.dxlistview.layouts.LayoutElement {
   <init>(...);
   *** getFrame(...);
   *** setFrame(...);
   *** getIndex(...);
   *** getIsVisible(...);
   *** getView(...);
   *** getViewType(...);
   *** layoutView(...);
}

-keep class com.devexpress.dxlistview.layouts.LayoutResult
-keepclassmembers class com.devexpress.dxlistview.layouts.LayoutResult {
   <init>(...);
}

-keep class com.devexpress.dxlistview.layouts.VirtualScrollLayout$RequestLayoutRunnable
-keepclassmembers class com.devexpress.dxlistview.layouts.VirtualScrollLayout$RequestLayoutRunnable {
   <init>(...);
   *** run(...);
}

-keep class com.devexpress.dxlistview.layouts.VirtualScrollLayout
-keepclassmembers class com.devexpress.dxlistview.layouts.VirtualScrollLayout {
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getLayouts(...);
   *** getOwner(...);
   *** setOwner(...);
   *** getUpdatedLayouts(...);
   *** addElementByIndex(...);
   *** clear(...);
   *** createElementByIndex(...);
   *** layoutSubviews(...);
   *** measureView(...);
   *** removeElement(...);
   *** requestLayout(...);
   *** requestLayout(...);
   *** updateItems(...);
   *** updateItems(...);
   *** viewDidUpdate(...);
}

-keep class com.devexpress.dxlistview.layouts.VirtualScrollLayout
-keepclassmembers class com.devexpress.dxlistview.layouts.VirtualScrollLayout {
   *** clear(...);
   *** layoutSubviews(...);
   *** measureView(...);
}

-keep class com.devexpress.dxlistview.helpers.MathHelper
-keepclassmembers class com.devexpress.dxlistview.helpers.MathHelper {
   *** createPoint(...);
   *** round(...);
}

-keep class com.devexpress.dxlistview.core.ActionQueueItem
-keepclassmembers class com.devexpress.dxlistview.core.ActionQueueItem {
   <init>(...);
}

-keep class com.devexpress.dxlistview.core.DragDropManager$Companion
-keepclassmembers class com.devexpress.dxlistview.core.DragDropManager$Companion {
}

-keep class com.devexpress.dxlistview.core.DragDropManager
-keepclassmembers class com.devexpress.dxlistview.core.DragDropManager {
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getAnimationEnabled(...);
   *** setAnimationEnabled(...);
   *** getAnimator(...);
   *** setAnimator(...);
   *** isInDraggingProcess(...);
   *** getLayout(...);
   *** setLayout(...);
   *** getListViewListener(...);
   *** setListViewListener(...);
   *** getMotionDirection(...);
   *** cancel(...);
   *** down(...);
   *** move(...);
   *** moveItem(...);
   *** onLongPress(...);
   *** onSingleTapUp(...);
   *** onTouchEvent(...);
   *** process(...);
   *** stopDraggingProcess(...);
   *** up(...);
}

-keep class com.devexpress.dxlistview.core.DXAsyncActionQueue
-keepclassmembers class com.devexpress.dxlistview.core.DXAsyncActionQueue {
   <init>(...);
   *** canSkip(...);
   *** pushAction(...);
   *** pushAction(...);
   *** queue(...);
   *** removeAction(...);
   *** resume(...);
   *** setCanSkipIteration(...);
   *** suspend(...);
}

-keep class com.devexpress.dxlistview.core.DXAsyncActionQueueState
-keepclassmembers class com.devexpress.dxlistview.core.DXAsyncActionQueueState {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.dxlistview.core.DXAsyncViewAdapter
-keepclassmembers class com.devexpress.dxlistview.core.DXAsyncViewAdapter {
   <init>(...);
   *** getAllowCascadeUpdate(...);
   *** setAllowCascadeUpdate(...);
   *** getItemCount(...);
   *** getItemsViewAdapterListener(...);
   *** setItemsViewAdapterListener(...);
   *** getProvider(...);
   *** checkView(...);
   *** defrostView(...);
   *** freezeView(...);
   *** getViewByIndex(...);
   *** getViewTypeByIndex(...);
   *** isItemIndexExist(...);
   *** recycleView(...);
   *** setLoadMoreProvider(...);
   *** setSyncModeOn(...);
   *** updateView(...);
   *** updateView(...);
}

-keep class com.devexpress.dxlistview.core.DXSize
-keepclassmembers class com.devexpress.dxlistview.core.DXSize {
   <init>(...);
}

-keep class com.devexpress.dxlistview.core.DXTypedViewProvider
-keepclassmembers class com.devexpress.dxlistview.core.DXTypedViewProvider {
   <init>(...);
   *** popViewFromCacheByViewType(...);
   *** pushViewToCache(...);
}

-keep class com.devexpress.dxlistview.core.DXViewCache
-keepclassmembers class com.devexpress.dxlistview.core.DXViewCache {
   <init>(...);
   *** getTotalViewsInCache(...);
   *** getViewByType(...);
   *** getViewsForTypeId(...);
   *** recycleView(...);
}

-keep class com.devexpress.dxlistview.core.GestureListener
-keepclassmembers class com.devexpress.dxlistview.core.GestureListener {
   <init>(...);
   *** onDown(...);
   *** onFling(...);
   *** onLongPress(...);
   *** onScroll(...);
   *** onShowPress(...);
   *** onSingleTapUp(...);
   *** onTouchEvent(...);
}

-keep class com.devexpress.dxlistview.core.CanSkipAction
-keepclassmembers class com.devexpress.dxlistview.core.CanSkipAction {
}

-keep class com.devexpress.dxlistview.core.DXItemViewProvider
-keepclassmembers class com.devexpress.dxlistview.core.DXItemViewProvider {
}

-keep class com.devexpress.dxlistview.core.DXListItemViewProvider
-keepclassmembers class com.devexpress.dxlistview.core.DXListItemViewProvider {
}

-keep class com.devexpress.dxlistview.core.ItemsViewAdapterListener
-keepclassmembers class com.devexpress.dxlistview.core.ItemsViewAdapterListener {
}

-keep class mono.com.devexpress.dxlistview.core.ItemsViewAdapterListenerImplementor
-keepclassmembers class mono.com.devexpress.dxlistview.core.ItemsViewAdapterListenerImplementor {
}

-keep class com.devexpress.dxlistview.core.QueueItemAction
-keepclassmembers class com.devexpress.dxlistview.core.QueueItemAction {
}

-keep class com.devexpress.dxlistview.core.QueueItemCompleteAction
-keepclassmembers class com.devexpress.dxlistview.core.QueueItemCompleteAction {
}

-keep class com.devexpress.dxlistview.core.ListViewItemHolder
-keepclassmembers class com.devexpress.dxlistview.core.ListViewItemHolder {
   <init>(...);
   *** onLayout(...);
}

-keep class com.devexpress.dxlistview.core.MotionDirection
-keepclassmembers class com.devexpress.dxlistview.core.MotionDirection {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.dxlistview.core.RangeInt
-keepclassmembers class com.devexpress.dxlistview.core.RangeInt {
   <init>(...);
}

-keep class com.devexpress.dxlistview.core.ScrollingHelper$Companion
-keepclassmembers class com.devexpress.dxlistview.core.ScrollingHelper$Companion {
}

-keep class com.devexpress.dxlistview.core.ScrollingHelper
-keepclassmembers class com.devexpress.dxlistview.core.ScrollingHelper {
   <init>(...);
   *** onPan(...);
   *** run(...);
   *** startAutoScroll(...);
   *** stopAutoScroll(...);
}

# ACW for DevExpress.Xamarin.Android.Editors
-keep class com.devexpress.editors.utils.drawablemanager.AbstractBackgroundDrawableManager$Companion
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.AbstractBackgroundDrawableManager$Companion {
   *** getInterpolator(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.AbstractBackgroundDrawableManager
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.AbstractBackgroundDrawableManager {
   <init>(...);
   *** getStyle(...);
   *** applyLabelCutOut(...);
   *** updateCornerSize(...);
   *** updateCornerTreatment(...);
   *** getDrawable(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.AbstractBackgroundDrawableManager
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.AbstractBackgroundDrawableManager {
   *** getDrawable(...);
   *** applyLabelCutOut(...);
   *** updateCornerSize(...);
   *** updateCornerTreatment(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.ButtonBackgroundFactory
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.ButtonBackgroundFactory {
   *** create(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.CheckBoxBackgroundFactory$Api21Delegate
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.CheckBoxBackgroundFactory$Api21Delegate {
   <init>(...);
   *** create(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.CheckBoxBackgroundFactory$DefaultDelegate
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.CheckBoxBackgroundFactory$DefaultDelegate {
   <init>(...);
   *** create(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.CheckBoxBackgroundFactory$Delegate
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.CheckBoxBackgroundFactory$Delegate {
}

-keep class com.devexpress.editors.utils.drawablemanager.CheckBoxBackgroundFactory
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.CheckBoxBackgroundFactory {
   *** create(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.CornerTreatmentFactory
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.CornerTreatmentFactory {
   *** createCornerTreatment(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.DrawableManagerFactory
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.DrawableManagerFactory {
   *** createDrawableManager(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.DropDownDrawableManagerFactory
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.DropDownDrawableManagerFactory {
   *** createManager(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.FilledBackgroundDrawableManager
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.FilledBackgroundDrawableManager {
   <init>(...);
   *** getDrawable(...);
   *** applyLabelCutOut(...);
   *** updateCornerSize(...);
   *** updateCornerTreatment(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.FilledDropDownDrawableManager
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.FilledDropDownDrawableManager {
   <init>(...);
   *** getDrawable(...);
   *** recreateDrawable(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.BackgroundDrawableManager
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.BackgroundDrawableManager {
}

-keep class com.devexpress.editors.utils.drawablemanager.DropDownDrawableManager
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.DropDownDrawableManager {
}

-keep class com.devexpress.editors.utils.drawablemanager.OutlineBackgroundDrawableManager
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.OutlineBackgroundDrawableManager {
   <init>(...);
   *** getDrawable(...);
   *** applyLabelCutOut(...);
   *** updateCornerSize(...);
   *** updateCornerTreatment(...);
}

-keep class com.devexpress.editors.utils.drawablemanager.OutlinedDropDownDrawableManager
-keepclassmembers class com.devexpress.editors.utils.drawablemanager.OutlinedDropDownDrawableManager {
   <init>(...);
   *** getDrawable(...);
   *** recreateDrawable(...);
}

-keep class com.devexpress.editors.style.AutoCompleteEditStyle
-keepclassmembers class com.devexpress.editors.style.AutoCompleteEditStyle {
   <init>(...);
   *** getDisabledSubmitIconColor(...);
   *** setDisabledSubmitIconColor(...);
   *** getSubmitIconColor(...);
   *** setSubmitIconColor(...);
}

-keep class com.devexpress.editors.style.CheckEditStyle
-keepclassmembers class com.devexpress.editors.style.CheckEditStyle {
   <init>(...);
   *** getActualCheckedPressedBackgroundColor(...);
   *** getActualFocusedBackgroundColor(...);
   *** getActualPressedBackgroundColor(...);
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getCheckedForegroundColor(...);
   *** setCheckedForegroundColor(...);
   *** getCheckedPressedBackgroundColor(...);
   *** setCheckedPressedBackgroundColor(...);
   *** getDisabledBackgroundColor(...);
   *** setDisabledBackgroundColor(...);
   *** getDisabledCheckedForegroundColor(...);
   *** setDisabledCheckedForegroundColor(...);
   *** getDisabledForegroundColor(...);
   *** setDisabledForegroundColor(...);
   *** getDisabledLabelColor(...);
   *** setDisabledLabelColor(...);
   *** getForegroundColor(...);
   *** setForegroundColor(...);
   *** getLabelColor(...);
   *** setLabelColor(...);
   *** getPressedBackgroundColor(...);
   *** setPressedBackgroundColor(...);
   *** createCheckBoxBackground(...);
   *** createCheckBoxTint(...);
   *** createLabelTint(...);
   *** resetToDefaults(...);
}

-keep class com.devexpress.editors.style.ComboBoxEditStyle
-keepclassmembers class com.devexpress.editors.style.ComboBoxEditStyle {
   <init>(...);
   *** getDisabledDropDownIconColor(...);
   *** setDisabledDropDownIconColor(...);
   *** getDropDownIconColor(...);
   *** setDropDownIconColor(...);
}

-keep class com.devexpress.editors.style.DateEditStyle
-keepclassmembers class com.devexpress.editors.style.DateEditStyle {
   <init>(...);
   *** getDateIconColor(...);
   *** setDateIconColor(...);
   *** getDisabledDateIconColor(...);
   *** setDisabledDateIconColor(...);
}

-keep class com.devexpress.editors.style.DropDownTextEditStyle
-keepclassmembers class com.devexpress.editors.style.DropDownTextEditStyle {
   <init>(...);
   *** getDropDownBackgroundColor(...);
   *** setDropDownBackgroundColor(...);
   *** getDropDownBorderColor(...);
   *** setDropDownBorderColor(...);
   *** getDropDownBorderThickness(...);
   *** setDropDownBorderThickness(...);
   *** createDropDownBackgroundDrawable(...);
}

-keep class com.devexpress.editors.style.NumericEditStyle
-keepclassmembers class com.devexpress.editors.style.NumericEditStyle {
   <init>(...);
   *** getDisabledDownIconColor(...);
   *** setDisabledDownIconColor(...);
   *** getDisabledUpIconColor(...);
   *** setDisabledUpIconColor(...);
   *** getDownIconColor(...);
   *** setDownIconColor(...);
   *** getUpIconColor(...);
   *** setUpIconColor(...);
}

-keep class com.devexpress.editors.style.PasswordEditStyle
-keepclassmembers class com.devexpress.editors.style.PasswordEditStyle {
   <init>(...);
   *** getDisabledPasswordIconColor(...);
   *** setDisabledPasswordIconColor(...);
   *** getPasswordIconColor(...);
   *** setPasswordIconColor(...);
}

-keep class com.devexpress.editors.style.SimpleButtonStyle$Companion
-keepclassmembers class com.devexpress.editors.style.SimpleButtonStyle$Companion {
}

-keep class com.devexpress.editors.style.SimpleButtonStyle
-keepclassmembers class com.devexpress.editors.style.SimpleButtonStyle {
   <init>(...);
   *** getAccentColor(...);
   *** getActualPressedBackgroundColor(...);
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getBorderColor(...);
   *** setBorderColor(...);
   *** getBorderThickness(...);
   *** setBorderThickness(...);
   *** getCornerMode(...);
   *** setCornerMode(...);
   *** getDisabledBackgroundColor(...);
   *** setDisabledBackgroundColor(...);
   *** getDisabledBorderColor(...);
   *** setDisabledBorderColor(...);
   *** getDisabledIconColor(...);
   *** setDisabledIconColor(...);
   *** getDisabledShadowRadius(...);
   *** setDisabledShadowRadius(...);
   *** getDisabledTextColor(...);
   *** setDisabledTextColor(...);
   *** getFocusedBackgroundColor(...);
   *** getHasShadow(...);
   *** setHasShadow(...);
   *** getIconColor(...);
   *** setIconColor(...);
   *** getPressedBackgroundColor(...);
   *** setPressedBackgroundColor(...);
   *** getPressedBorderColor(...);
   *** setPressedBorderColor(...);
   *** getPressedIconColor(...);
   *** setPressedIconColor(...);
   *** getPressedShadowRadius(...);
   *** setPressedShadowRadius(...);
   *** getPressedTextColor(...);
   *** setPressedTextColor(...);
   *** getShadowOffset(...);
   *** setShadowOffset(...);
   *** getShadowRadius(...);
   *** setShadowRadius(...);
   *** getShadowRotation(...);
   *** setShadowRotation(...);
   *** getTextColor(...);
   *** setTextColor(...);
   *** createBackgroundDrawable(...);
   *** createIconTintList(...);
   *** createTextTintList(...);
   *** resetToContainedAppearance(...);
   *** resetToOutlinedAppearance(...);
   *** resetToTextAppearance(...);
}

-keep class com.devexpress.editors.style.TextEditStyle
-keepclassmembers class com.devexpress.editors.style.TextEditStyle {
   <init>(...);
   *** getAffixColor(...);
   *** setAffixColor(...);
   *** getAffixIndent(...);
   *** setAffixIndent(...);
   *** getBorderColor(...);
   *** setBorderColor(...);
   *** getBorderMode(...);
   *** setBorderMode(...);
   *** getBorderThickness(...);
   *** setBorderThickness(...);
   *** getBottomTextTopIndent(...);
   *** setBottomTextTopIndent(...);
   *** getBoxBackgroundColor(...);
   *** setBoxBackgroundColor(...);
   *** getBoxHeight(...);
   *** setBoxHeight(...);
   *** getCharacterCounterStartIndent(...);
   *** setCharacterCounterStartIndent(...);
   *** getClearIconColor(...);
   *** setClearIconColor(...);
   *** getCornerMode(...);
   *** setCornerMode(...);
   *** getDisabledAffixColor(...);
   *** setDisabledAffixColor(...);
   *** getDisabledBorderColor(...);
   *** setDisabledBorderColor(...);
   *** getDisabledBorderThickness(...);
   *** setDisabledBorderThickness(...);
   *** getDisabledBoxBackgroundColor(...);
   *** setDisabledBoxBackgroundColor(...);
   *** getDisabledClearIconColor(...);
   *** setDisabledClearIconColor(...);
   *** getDisabledEndIconColor(...);
   *** setDisabledEndIconColor(...);
   *** getDisabledErrorIconColor(...);
   *** setDisabledErrorIconColor(...);
   *** getDisabledHelpTextColor(...);
   *** setDisabledHelpTextColor(...);
   *** getDisabledLabelColor(...);
   *** setDisabledLabelColor(...);
   *** getDisabledStartIconColor(...);
   *** setDisabledStartIconColor(...);
   *** getDisabledTextColor(...);
   *** setDisabledTextColor(...);
   *** getEndIconColor(...);
   *** setEndIconColor(...);
   *** getEndIconVerticalGravity(...);
   *** setEndIconVerticalGravity(...);
   *** getErrorColor(...);
   *** setErrorColor(...);
   *** getErrorIconColor(...);
   *** setErrorIconColor(...);
   *** getFocusedBorderColor(...);
   *** setFocusedBorderColor(...);
   *** getFocusedBorderThickness(...);
   *** setFocusedBorderThickness(...);
   *** getFocusedLabelColor(...);
   *** setFocusedLabelColor(...);
   *** getHelpTextColor(...);
   *** setHelpTextColor(...);
   *** getIconIndent(...);
   *** setIconIndent(...);
   *** getIconSpacing(...);
   *** setIconSpacing(...);
   *** getIdealBoxHeight(...);
   *** setIdealBoxHeight(...);
   *** getLabelColor(...);
   *** setLabelColor(...);
   *** getLabelShakeAmplitude(...);
   *** setLabelShakeAmplitude(...);
   *** getLabelTextBorderIndent(...);
   *** setLabelTextBorderIndent(...);
   *** getMinBoxHeight(...);
   *** setMinBoxHeight(...);
   *** getMinBoxWidth(...);
   *** setMinBoxWidth(...);
   *** getMinEditorWidth(...);
   *** setMinEditorWidth(...);
   *** getMinVerticalBoxPadding(...);
   *** setMinVerticalBoxPadding(...);
   *** getPlaceholderTextColor(...);
   *** setPlaceholderTextColor(...);
   *** getStartIconColor(...);
   *** setStartIconColor(...);
   *** getStartIconVerticalGravity(...);
   *** setStartIconVerticalGravity(...);
   *** getTextColor(...);
   *** setTextColor(...);
}

-keep class com.devexpress.editors.style.TimeEditStyle
-keepclassmembers class com.devexpress.editors.style.TimeEditStyle {
   <init>(...);
   *** getDisabledTimeIconColor(...);
   *** setDisabledTimeIconColor(...);
   *** getTimeIconColor(...);
   *** setTimeIconColor(...);
}

-keep class com.devexpress.editors.model.mask.AnyCharValidator
-keepclassmembers class com.devexpress.editors.model.mask.AnyCharValidator {
   <init>(...);
   *** getCanBeSkipped(...);
   *** isValid(...);
}

-keep class com.devexpress.editors.model.mask.DigitCharValidator
-keepclassmembers class com.devexpress.editors.model.mask.DigitCharValidator {
   <init>(...);
   *** getCanBeSkipped(...);
   *** isValid(...);
}

-keep class com.devexpress.editors.model.mask.ExactlyCharValidator
-keepclassmembers class com.devexpress.editors.model.mask.ExactlyCharValidator {
   <init>(...);
   *** getCanBeSkipped(...);
   *** isValid(...);
}

-keep class com.devexpress.editors.model.mask.CharValidator$DefaultImpls
-keepclassmembers class com.devexpress.editors.model.mask.CharValidator$DefaultImpls {
   *** getCanBeSkipped(...);
}

-keep class com.devexpress.editors.model.mask.CharValidator
-keepclassmembers class com.devexpress.editors.model.mask.CharValidator {
}

-keep class com.devexpress.editors.model.mask.LetterCharValidator
-keepclassmembers class com.devexpress.editors.model.mask.LetterCharValidator {
   <init>(...);
   *** getCanBeSkipped(...);
   *** isValid(...);
}

-keep class com.devexpress.editors.model.mask.Mask$AcceptanceResult
-keepclassmembers class com.devexpress.editors.model.mask.Mask$AcceptanceResult {
   <init>(...);
   *** getIndex(...);
   *** isAccepted(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class com.devexpress.editors.model.mask.Mask$Companion
-keepclassmembers class com.devexpress.editors.model.mask.Mask$Companion {
   *** parse(...);
}

-keep class com.devexpress.editors.model.mask.Mask
-keepclassmembers class com.devexpress.editors.model.mask.Mask {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** isReady(...);
   *** getLength(...);
   *** getNextPosition(...);
   *** getPlaceholderChar(...);
   *** setPlaceholderChar(...);
   *** getPlaceholderColor(...);
   *** setPlaceholderColor(...);
   *** getRawValue(...);
   *** addExtraAcceptedSymbolsForNumericListener(...);
   *** insert(...);
   *** parse(...);
   *** populateWithFormattedValue(...);
   *** populateWithRawValue(...);
   *** remove(...);
   *** replace(...);
}

-keep class com.devexpress.editors.model.mask.MaskRule$Companion
-keepclassmembers class com.devexpress.editors.model.mask.MaskRule$Companion {
   *** any(...);
   *** digit(...);
   *** exactly(...);
   *** letter(...);
}

-keep class com.devexpress.editors.model.mask.MaskRule
-keepclassmembers class com.devexpress.editors.model.mask.MaskRule {
   <init>(...);
   *** getCanBeSkipped(...);
   *** isEmpty(...);
   *** getValue(...);
   *** accept(...);
   *** clear(...);
}

-keep class com.devexpress.editors.model.drawables.AbstractMaterialRectDrawable$Companion
-keepclassmembers class com.devexpress.editors.model.drawables.AbstractMaterialRectDrawable$Companion {
}

-keep class com.devexpress.editors.model.drawables.AbstractMaterialRectDrawable$MaterialRectDrawableState
-keepclassmembers class com.devexpress.editors.model.drawables.AbstractMaterialRectDrawable$MaterialRectDrawableState {
   <init>(...);
   *** getChangingConfigurations(...);
}

-keep class com.devexpress.editors.model.drawables.AbstractMaterialRectDrawable$MaterialRectDrawableState
-keepclassmembers class com.devexpress.editors.model.drawables.AbstractMaterialRectDrawable$MaterialRectDrawableState {
   *** newDrawable(...);
}

-keep class com.devexpress.editors.model.drawables.AbstractMaterialRectDrawable
-keepclassmembers class com.devexpress.editors.model.drawables.AbstractMaterialRectDrawable {
   <init>(...);
   *** getBoundsAsRectF(...);
   *** getBoundsF(...);
   *** getCornerTreatment(...);
   *** setCornerTreatment(...);
   *** getDrawableState(...);
   *** setDrawableState(...);
   *** getFillColor(...);
   *** setFillColor(...);
   *** getFillPath(...);
   *** getHasShadow(...);
   *** setHasShadow(...);
   *** getHasStroke(...);
   *** getInsetBoundsAsRectF(...);
   *** getInsetBoundsF(...);
   *** getOpacity(...);
   *** getPaintStyle(...);
   *** setPaintStyle(...);
   *** getPathsNeedUpdate(...);
   *** setPathsNeedUpdate(...);
   *** getShadowBounds(...);
   *** getShadowBoundsAsRectF(...);
   *** getShadowCompatOffset(...);
   *** setShadowCompatOffset(...);
   *** getShadowCompatRadius(...);
   *** setShadowCompatRadius(...);
   *** getShadowCompatRotation(...);
   *** setShadowCompatRotation(...);
   *** getStrokeAdjustment(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
   *** getStrokePath(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** calculatePath(...);
   *** calculateStrokePath(...);
   *** draw(...);
   *** drawShadow(...);
   *** drawStroke(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setPadding(...);
   *** setPadding(...);
}

-keep class com.devexpress.editors.model.drawables.AbstractMaterialRectDrawable
-keepclassmembers class com.devexpress.editors.model.drawables.AbstractMaterialRectDrawable {
}

-keep class com.devexpress.editors.model.drawables.AnimatedMaterialRectDrawable$AnimatedMaterialRectDrawableState
-keepclassmembers class com.devexpress.editors.model.drawables.AnimatedMaterialRectDrawable$AnimatedMaterialRectDrawableState {
   <init>(...);
   <init>(...);
   *** getChangingConfigurations(...);
   *** getMaterialRectDrawable(...);
   *** setMaterialRectDrawable(...);
   *** newDrawable(...);
}

-keep class com.devexpress.editors.model.drawables.AnimatedMaterialRectDrawable
-keepclassmembers class com.devexpress.editors.model.drawables.AnimatedMaterialRectDrawable {
   <init>(...);
   *** isRunning(...);
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** start(...);
   *** stop(...);
}

-keep class com.devexpress.editors.model.drawables.AnimationManagerDrawable$Callback
-keepclassmembers class com.devexpress.editors.model.drawables.AnimationManagerDrawable$Callback {
   <init>(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** unscheduleDrawable(...);
}

-keep class com.devexpress.editors.model.drawables.AnimationManagerDrawable$Delegate
-keepclassmembers class com.devexpress.editors.model.drawables.AnimationManagerDrawable$Delegate {
}

-keep class com.devexpress.editors.model.drawables.AnimationManagerDrawable$DrawableParams
-keepclassmembers class com.devexpress.editors.model.drawables.AnimationManagerDrawable$DrawableParams {
   <init>(...);
   *** set(...);
}

-keep class com.devexpress.editors.model.drawables.AnimationManagerDrawable$ManagedAnimatedDrawableState
-keepclassmembers class com.devexpress.editors.model.drawables.AnimationManagerDrawable$ManagedAnimatedDrawableState {
   <init>(...);
   <init>(...);
   *** getChangingConfigurations(...);
   *** getDelegate(...);
   *** setDelegate(...);
   *** getManagedDrawable(...);
   *** setManagedDrawable(...);
   *** applyEndParams(...);
   *** newDrawable(...);
   *** prepareParams(...);
}

-keep class com.devexpress.editors.model.drawables.AnimationManagerDrawable
-keepclassmembers class com.devexpress.editors.model.drawables.AnimationManagerDrawable {
   <init>(...);
   <init>(...);
   *** isRunning(...);
   *** getManagedDrawable(...);
   *** getOpacity(...);
   *** applyParams(...);
   *** cancel(...);
   *** clearAnimationCallbacks(...);
   *** draw(...);
   *** registerAnimationCallback(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** start(...);
   *** stop(...);
   *** unregisterAnimationCallback(...);
}

-keep class com.devexpress.editors.model.drawables.CutCornerTreatment
-keepclassmembers class com.devexpress.editors.model.drawables.CutCornerTreatment {
   <init>(...);
   *** addCornerToPath(...);
}

-keep class com.devexpress.editors.model.drawables.CutOutMaterialRectDrawable$Companion
-keepclassmembers class com.devexpress.editors.model.drawables.CutOutMaterialRectDrawable$Companion {
}

-keep class com.devexpress.editors.model.drawables.CutOutMaterialRectDrawable$State
-keepclassmembers class com.devexpress.editors.model.drawables.CutOutMaterialRectDrawable$State {
   <init>(...);
   *** getCutOutProgress(...);
   *** setCutOutProgress(...);
   *** getCutOutRect(...);
   *** newDrawable(...);
}

-keep class com.devexpress.editors.model.drawables.CutOutMaterialRectDrawable
-keepclassmembers class com.devexpress.editors.model.drawables.CutOutMaterialRectDrawable {
   <init>(...);
   <init>(...);
   *** getActualCutOutRect(...);
   *** setActualCutOutRect(...);
   *** getCutOutProgress(...);
   *** setCutOutProgress(...);
   *** getCutOutRect(...);
   *** setCutOutRect(...);
   *** setCutOutRect(...);
}

-keep class com.devexpress.editors.model.drawables.CornerTreatment
-keepclassmembers class com.devexpress.editors.model.drawables.CornerTreatment {
}

-keep class com.devexpress.editors.model.drawables.MaterialRectDrawable$State
-keepclassmembers class com.devexpress.editors.model.drawables.MaterialRectDrawable$State {
   <init>(...);
   *** newDrawable(...);
}

-keep class com.devexpress.editors.model.drawables.MaterialRectDrawable
-keepclassmembers class com.devexpress.editors.model.drawables.MaterialRectDrawable {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.devexpress.editors.model.drawables.RoundCornerTreatment$Companion
-keepclassmembers class com.devexpress.editors.model.drawables.RoundCornerTreatment$Companion {
}

-keep class com.devexpress.editors.model.drawables.RoundCornerTreatment
-keepclassmembers class com.devexpress.editors.model.drawables.RoundCornerTreatment {
   <init>(...);
   *** addCornerToPath(...);
}

-keep class com.devexpress.editors.model.drawables.UnderlinedMaterialRectDrawable$State
-keepclassmembers class com.devexpress.editors.model.drawables.UnderlinedMaterialRectDrawable$State {
   <init>(...);
   *** newDrawable(...);
}

-keep class com.devexpress.editors.model.drawables.UnderlinedMaterialRectDrawable
-keepclassmembers class com.devexpress.editors.model.drawables.UnderlinedMaterialRectDrawable {
   <init>(...);
   <init>(...);
}

-keep class com.devexpress.editors.layout.Column
-keepclassmembers class com.devexpress.editors.layout.Column {
   *** getMeasuredHeight(...);
   *** getMeasuredWidth(...);
   *** measure(...);
}

-keep class com.devexpress.editors.layout.EditorBoxRow
-keepclassmembers class com.devexpress.editors.layout.EditorBoxRow {
   <init>(...);
   *** isAutoPadding(...);
   *** setAutoPadding(...);
   *** getHeight(...);
   *** setHeight(...);
}

-keep class com.devexpress.editors.layout.EditorContentElement
-keepclassmembers class com.devexpress.editors.layout.EditorContentElement {
   *** getMinEditorWidth(...);
   *** setMinEditorWidth(...);
   *** getParent(...);
   *** setParent(...);
   *** getSingleLineMode(...);
   *** setSingleLineMode(...);
}

-keep class com.devexpress.editors.layout.ILayoutElement
-keepclassmembers class com.devexpress.editors.layout.ILayoutElement {
}

-keep class com.devexpress.editors.layout.ILayoutManager
-keepclassmembers class com.devexpress.editors.layout.ILayoutManager {
}

-keep class com.devexpress.editors.layout.LayoutContainer
-keepclassmembers class com.devexpress.editors.layout.LayoutContainer {
   *** getAlpha(...);
   *** setAlpha(...);
   *** getBackgroundView(...);
   *** setBackgroundView(...);
   *** getBaseline(...);
   *** getChildren(...);
   *** getGravity(...);
   *** setGravity(...);
   *** getId(...);
   *** getItemSpacing(...);
   *** setItemSpacing(...);
   *** getLayoutDirection(...);
   *** setLayoutDirection(...);
   *** getLayoutHeight(...);
   *** setLayoutHeight(...);
   *** getLayoutWidth(...);
   *** setLayoutWidth(...);
   *** getMinHeight(...);
   *** setMinHeight(...);
   *** getMinWidth(...);
   *** setMinWidth(...);
   *** getOrderIndex(...);
   *** setOrderIndex(...);
   *** getPositionX(...);
   *** setPositionX(...);
   *** getPositionY(...);
   *** setPositionY(...);
   *** getTopIndent(...);
   *** setTopIndent(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getWidthSettings(...);
   *** setWidthSettings(...);
   *** layout(...);
   *** measureBackgroundView(...);
}

-keep class com.devexpress.editors.layout.LayoutContainer
-keepclassmembers class com.devexpress.editors.layout.LayoutContainer {
}

-keep class com.devexpress.editors.layout.LayoutElement
-keepclassmembers class com.devexpress.editors.layout.LayoutElement {
   <init>(...);
   *** getAlpha(...);
   *** setAlpha(...);
   *** getApplyMarginForZeroSize(...);
   *** setApplyMarginForZeroSize(...);
   *** getBaseline(...);
   *** getGravity(...);
   *** setGravity(...);
   *** getHeightSettings(...);
   *** setHeightSettings(...);
   *** getId(...);
   *** getLayoutHeight(...);
   *** setLayoutHeight(...);
   *** getLayoutWidth(...);
   *** setLayoutWidth(...);
   *** getMeasuredHeight(...);
   *** getMeasuredWidth(...);
   *** getOrderIndex(...);
   *** setOrderIndex(...);
   *** getPositionX(...);
   *** setPositionX(...);
   *** getPositionY(...);
   *** setPositionY(...);
   *** getTopIndent(...);
   *** setTopIndent(...);
   *** getView(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getWidthSettings(...);
   *** setWidthSettings(...);
   *** layout(...);
   *** measure(...);
}

-keep class com.devexpress.editors.layout.LayoutElementStub
-keepclassmembers class com.devexpress.editors.layout.LayoutElementStub {
   <init>(...);
   <init>(...);
   *** getAlpha(...);
   *** setAlpha(...);
   *** getBaseline(...);
   *** getGravity(...);
   *** setGravity(...);
   *** getId(...);
   *** getLayoutHeight(...);
   *** setLayoutHeight(...);
   *** getLayoutWidth(...);
   *** setLayoutWidth(...);
   *** getMeasuredHeight(...);
   *** getMeasuredWidth(...);
   *** getOrderIndex(...);
   *** setOrderIndex(...);
   *** getPositionX(...);
   *** setPositionX(...);
   *** getPositionY(...);
   *** setPositionY(...);
   *** getTopIndent(...);
   *** setTopIndent(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getWidthSettings(...);
   *** layout(...);
   *** measure(...);
}

-keep class com.devexpress.editors.layout.LayoutElementType
-keepclassmembers class com.devexpress.editors.layout.LayoutElementType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.editors.layout.LayoutManager$Companion
-keepclassmembers class com.devexpress.editors.layout.LayoutManager$Companion {
}

-keep class com.devexpress.editors.layout.LayoutManager
-keepclassmembers class com.devexpress.editors.layout.LayoutManager {
   *** getBorderBounds(...);
   *** getBottomRowMinHeight(...);
   *** setBottomRowMinHeight(...);
   *** isBoxAutoPadding(...);
   *** setBoxAutoPadding(...);
   *** getBoxMargin(...);
   *** getBoxRow(...);
   *** getEditorWithLabelColumn(...);
   *** getHeight(...);
   *** getLabelBounds(...);
   *** getOnBoxMarginChangedListener(...);
   *** setOnBoxMarginChangedListener(...);
   *** getStyle(...);
   *** setStyle(...);
   *** getWidth(...);
   *** applyStyle(...);
   *** layout(...);
   *** markDirty(...);
   *** measure(...);
   *** reinit(...);
}

-keep class com.devexpress.editors.layout.OnBoxMarginChangedListener
-keepclassmembers class com.devexpress.editors.layout.OnBoxMarginChangedListener {
   <init>(...);
   *** onChange(...);
}

-keep class com.devexpress.editors.layout.OnBoxMarginChangedListener
-keepclassmembers class com.devexpress.editors.layout.OnBoxMarginChangedListener {
   *** onChange(...);
}

-keep class com.devexpress.editors.layout.OutlinedLabel
-keepclassmembers class com.devexpress.editors.layout.OutlinedLabel {
}

-keep class com.devexpress.editors.layout.Row
-keepclassmembers class com.devexpress.editors.layout.Row {
   *** getMeasuredHeight(...);
   *** getMeasuredWidth(...);
   *** measure(...);
}

-keep class com.devexpress.editors.layout.factories.AbstractEditLayoutElementsFactory
-keepclassmembers class com.devexpress.editors.layout.factories.AbstractEditLayoutElementsFactory {
   <init>(...);
   *** getBottomElements(...);
   *** getContent(...);
   *** getContentElement(...);
   *** getEndImages(...);
   *** getFilledLabel(...);
   *** getStartImages(...);
   *** applyStyle(...);
}

-keep class com.devexpress.editors.layout.factories.AutoCompleteLayoutElementsFactory
-keepclassmembers class com.devexpress.editors.layout.factories.AutoCompleteLayoutElementsFactory {
   <init>(...);
}

-keep class com.devexpress.editors.layout.factories.NumericEditLayoutElementsFactory$WhenMappings
-keepclassmembers class com.devexpress.editors.layout.factories.NumericEditLayoutElementsFactory$WhenMappings {
}

-keep class com.devexpress.editors.layout.factories.NumericEditLayoutElementsFactory
-keepclassmembers class com.devexpress.editors.layout.factories.NumericEditLayoutElementsFactory {
   <init>(...);
   *** getUpDownIconPosition(...);
   *** setUpDownIconPosition(...);
}

-keep class com.devexpress.editors.layout.factories.PasswordLayoutElementsFactory
-keepclassmembers class com.devexpress.editors.layout.factories.PasswordLayoutElementsFactory {
   <init>(...);
}

-keep class com.devexpress.editors.layout.factories.PickerEditLayoutElementsFactory
-keepclassmembers class com.devexpress.editors.layout.factories.PickerEditLayoutElementsFactory {
   <init>(...);
}

-keep class com.devexpress.editors.layout.factories.TexEditLayoutElementsFactory
-keepclassmembers class com.devexpress.editors.layout.factories.TexEditLayoutElementsFactory {
   <init>(...);
}

-keep class com.devexpress.editors.dataForm.BaseLayoutManager
-keepclassmembers class com.devexpress.editors.dataForm.BaseLayoutManager {
   <init>(...);
   *** getContent(...);
   *** getHeight(...);
   *** getWidth(...);
   *** layout(...);
   *** markDirty(...);
   *** measure(...);
}

-keep class com.devexpress.editors.dataForm.DataFormColumn
-keepclassmembers class com.devexpress.editors.dataForm.DataFormColumn {
   <init>(...);
}

-keep class com.devexpress.editors.dataForm.DataFormContent
-keepclassmembers class com.devexpress.editors.dataForm.DataFormContent {
   <init>(...);
   *** getGroups(...);
   *** applySettingsToGroup(...);
   *** getExpanderIndex(...);
   *** onLayout(...);
   *** recreateGroups(...);
}

-keep class com.devexpress.editors.dataForm.DataFormEditor
-keepclassmembers class com.devexpress.editors.dataForm.DataFormEditor {
}

-keep class com.devexpress.editors.dataForm.DataFormEditor2
-keepclassmembers class com.devexpress.editors.dataForm.DataFormEditor2 {
}

-keep class com.devexpress.editors.dataForm.DataFormEditorColumn
-keepclassmembers class com.devexpress.editors.dataForm.DataFormEditorColumn {
   *** getEditor(...);
}

-keep class com.devexpress.editors.dataForm.DataFormEditorItem$WhenMappings
-keepclassmembers class com.devexpress.editors.dataForm.DataFormEditorItem$WhenMappings {
}

-keep class com.devexpress.editors.dataForm.DataFormEditorItem
-keepclassmembers class com.devexpress.editors.dataForm.DataFormEditorItem {
   <init>(...);
   *** getEditor(...);
   *** getLabel(...);
   *** setBaseline(...);
}

-keep class com.devexpress.editors.dataForm.DataFormEditorViewModel
-keepclassmembers class com.devexpress.editors.dataForm.DataFormEditorViewModel {
   <init>(...);
   *** isActive(...);
   *** setActive(...);
   *** getCommitMode(...);
   *** getDataSource(...);
   *** getEditor(...);
   *** getEditorView(...);
   *** setEditorView(...);
   *** getErrorView(...);
   *** setErrorView(...);
   *** getHelperView(...);
   *** setHelperView(...);
   *** isVisible(...);
   *** getLabelView(...);
   *** setLabelView(...);
   *** getValidationMode(...);
   *** getValue(...);
   *** applyErrorSettingsIfNeeded(...);
   *** applyHelperSettingsIfNeeded(...);
   *** applyIconLabelSettings(...);
   *** applyLabelSettingsIfNeeded(...);
   *** applySettings(...);
   *** applyTextLabelSettings(...);
   *** asDXEditor(...);
   *** commit(...);
   *** commitValue(...);
   *** currentSubEditorView(...);
   *** invalidateSettings(...);
   *** markDirty(...);
   *** onFocusChanged(...);
   *** onValueChanged(...);
   *** resetValue(...);
   *** updateError(...);
   *** validate(...);
}

-keep class com.devexpress.editors.dataForm.DataFormEditorViewProviderImpl
-keepclassmembers class com.devexpress.editors.dataForm.DataFormEditorViewProviderImpl {
   <init>(...);
   *** getActualDisplayFormat(...);
   *** getEditorDisplayText(...);
   *** getEditorId(...);
   *** setEditorId(...);
   *** getEditorInfo(...);
   *** getEditorValue(...);
   *** getGroupId(...);
   *** setGroupId(...);
   *** getPickerDataSource(...);
   *** getEditorDisplayTextFor(...);
   *** postValidate(...);
   *** postValue(...);
   *** sourceUpdated(...);
   *** validate(...);
}

-keep class com.devexpress.editors.dataForm.DataFormMultiRowEditorItemNode
-keepclassmembers class com.devexpress.editors.dataForm.DataFormMultiRowEditorItemNode {
   <init>(...);
   *** getBreakSeparator(...);
   *** setBreakSeparator(...);
   *** getRoot(...);
}

-keep class com.devexpress.editors.dataForm.DataFormMultiRowEditorItemRoot
-keepclassmembers class com.devexpress.editors.dataForm.DataFormMultiRowEditorItemRoot {
   <init>(...);
   *** getLayoutOffset(...);
   *** setLayoutOffset(...);
   *** getNodes(...);
}

-keep class com.devexpress.editors.dataForm.DataFormRow$SegmentInfo
-keepclassmembers class com.devexpress.editors.dataForm.DataFormRow$SegmentInfo {
   <init>(...);
   <init>(...);
   *** getElements(...);
   *** setElements(...);
   *** getEndPoint(...);
   *** setEndPoint(...);
   *** getOffsetToMultiRow(...);
   *** setOffsetToMultiRow(...);
   *** component1(...);
   *** component2(...);
   *** component3(...);
   *** copy(...);
}

-keep class com.devexpress.editors.dataForm.DataFormRow$SegmentProcessingResult
-keepclassmembers class com.devexpress.editors.dataForm.DataFormRow$SegmentProcessingResult {
   <init>(...);
   *** getNewStartPoint(...);
   *** getSlidingWidthDecrease(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class com.devexpress.editors.dataForm.DataFormRow
-keepclassmembers class com.devexpress.editors.dataForm.DataFormRow {
}

-keep class com.devexpress.editors.dataForm.DataFormRowWidthCalculator$Companion
-keepclassmembers class com.devexpress.editors.dataForm.DataFormRowWidthCalculator$Companion {
}

-keep class com.devexpress.editors.dataForm.DataFormRowWidthCalculator
-keepclassmembers class com.devexpress.editors.dataForm.DataFormRowWidthCalculator {
   <init>(...);
   *** getElements(...);
   *** getSpacing(...);
   *** setSpacing(...);
   *** calculateMinMainSize(...);
   *** calculateWidth(...);
   *** getHeaderItemSize(...);
   *** setViewPort(...);
}

-keep class com.devexpress.editors.dataForm.EditorPositionInfo
-keepclassmembers class com.devexpress.editors.dataForm.EditorPositionInfo {
   <init>(...);
   *** getEditorIndex(...);
   *** getGroupId(...);
   *** getInfo(...);
   *** component1(...);
   *** component2(...);
   *** component3(...);
   *** copy(...);
}

-keep class com.devexpress.editors.dataForm.ElementContainer
-keepclassmembers class com.devexpress.editors.dataForm.ElementContainer {
   <init>(...);
   *** getContainer(...);
   *** getElement(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class com.devexpress.editors.dataForm.ExpanderHeaderHolder$Companion
-keepclassmembers class com.devexpress.editors.dataForm.ExpanderHeaderHolder$Companion {
   *** getDefaultExpandCollapseIcon(...);
}

-keep class com.devexpress.editors.dataForm.ExpanderHeaderHolder
-keepclassmembers class com.devexpress.editors.dataForm.ExpanderHeaderHolder {
   *** getCustomHeader(...);
   *** setCustomHeader(...);
   *** getDefaultHeaderRow(...);
   *** setDefaultHeaderRow(...);
   *** getListener(...);
   *** setListener(...);
   *** getText(...);
   *** setText(...);
   *** applySettings(...);
   *** applySettingsToCustomHeader(...);
   *** applySettingsToDefaultHeader(...);
}

-keep class com.devexpress.editors.dataForm.ExpanderView
-keepclassmembers class com.devexpress.editors.dataForm.ExpanderView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContent(...);
   *** getGroupInfo(...);
   *** setGroupInfo(...);
   *** getListener(...);
   *** setListener(...);
   *** applySettings(...);
   *** onHeaderClicked(...);
   *** onLayout(...);
}

-keep class com.devexpress.editors.dataForm.GroupContent$Companion
-keepclassmembers class com.devexpress.editors.dataForm.GroupContent$Companion {
}

-keep class com.devexpress.editors.dataForm.GroupContent$WhenMappings
-keepclassmembers class com.devexpress.editors.dataForm.GroupContent$WhenMappings {
}

-keep class com.devexpress.editors.dataForm.GroupContent
-keepclassmembers class com.devexpress.editors.dataForm.GroupContent {
   <init>(...);
   *** getEditorModels(...);
   *** getGroupId(...);
   *** applySettings(...);
   *** getEditorModel(...);
   *** invalidateEditor(...);
   *** onLayout(...);
   *** recreate(...);
}

-keep class com.devexpress.editors.dataForm.ExpanderHeaderClickListener
-keepclassmembers class com.devexpress.editors.dataForm.ExpanderHeaderClickListener {
}

-keep class mono.com.devexpress.editors.dataForm.ExpanderHeaderClickListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.dataForm.ExpanderHeaderClickListenerImplementor {
}

-keep class com.devexpress.editors.dataForm.LabelContainer
-keepclassmembers class com.devexpress.editors.dataForm.LabelContainer {
   *** getMeasuredHeight(...);
   *** getMeasuredWidth(...);
   *** measure(...);
}

-keep class com.devexpress.editors.dataForm.MultiRowContainer
-keepclassmembers class com.devexpress.editors.dataForm.MultiRowContainer {
   <init>(...);
   *** getItem(...);
   *** getLastRowIndex(...);
   *** setLastRowIndex(...);
   *** getPositionInRow(...);
   *** setPositionInRow(...);
   *** getRowSpan(...);
   *** setRowSpan(...);
   *** component1(...);
   *** component2(...);
   *** component3(...);
   *** component4(...);
   *** copy(...);
}

-keep class com.devexpress.editors.dataForm.SeparatorView
-keepclassmembers class com.devexpress.editors.dataForm.SeparatorView {
   <init>(...);
   <init>(...);
   *** getColor(...);
   *** setColor(...);
   *** getMultiLineElements(...);
   *** getSeparatorThickness(...);
   *** setSeparatorThickness(...);
}

-keep class com.devexpress.editors.dataForm.protocols.CommitMode
-keepclassmembers class com.devexpress.editors.dataForm.protocols.CommitMode {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DataFormEditorFactory
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DataFormEditorFactory {
   <init>(...);
   *** create(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DataFormEditorFactory
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DataFormEditorFactory {
   *** create(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DataFormEditorFactoryImpl$WhenMappings
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DataFormEditorFactoryImpl$WhenMappings {
}

-keep class com.devexpress.editors.dataForm.protocols.DataFormEditorFactoryImpl
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DataFormEditorFactoryImpl {
   <init>(...);
   *** getContext(...);
   *** create(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DataFormEditorInfo
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DataFormEditorInfo {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getBottomTextSize(...);
   *** setBottomTextSize(...);
   *** getBottomTextTypeface(...);
   *** setBottomTextTypeface(...);
   *** getCommitMode(...);
   *** setCommitMode(...);
   *** getEditorHorizontalAlignment(...);
   *** setEditorHorizontalAlignment(...);
   *** getEditorWidth(...);
   *** setEditorWidth(...);
   *** getErrorFontColor(...);
   *** setErrorFontColor(...);
   *** getFieldName(...);
   *** setFieldName(...);
   *** getHelpText(...);
   *** setHelpText(...);
   *** getHelperFontColor(...);
   *** setHelperFontColor(...);
   *** getLabelFontColor(...);
   *** setLabelFontColor(...);
   *** getLabelHorizontalAlignment(...);
   *** setLabelHorizontalAlignment(...);
   *** getLabelIcon(...);
   *** setLabelIcon(...);
   *** getLabelIndent(...);
   *** setLabelIndent(...);
   *** getLabelPosition(...);
   *** setLabelPosition(...);
   *** getLabelText(...);
   *** setLabelText(...);
   *** getLabelTextSize(...);
   *** setLabelTextSize(...);
   *** getLabelTextTypeface(...);
   *** setLabelTextTypeface(...);
   *** isLabelVisible(...);
   *** setLabelVisible(...);
   *** getLabelWidth(...);
   *** setLabelWidth(...);
   *** isReadOnly(...);
   *** setReadOnly(...);
   *** getReserveBottomTextLine(...);
   *** setReserveBottomTextLine(...);
   *** getRowIndex(...);
   *** setRowIndex(...);
   *** getRowItemIndex(...);
   *** setRowItemIndex(...);
   *** getRowSpan(...);
   *** setRowSpan(...);
   *** getType(...);
   *** setType(...);
   *** getTypeSpecificEditorSettings(...);
   *** setTypeSpecificEditorSettings(...);
   *** getUniqueId(...);
   *** getValidationMode(...);
   *** setValidationMode(...);
   *** isVisible(...);
   *** setVisible(...);
   *** setPadding(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DataFormValidationError
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DataFormValidationError {
   <init>(...);
   *** getErrorText(...);
   *** setErrorText(...);
   *** getHasError(...);
   *** setHasError(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DXDataFormDataProvider
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DXDataFormDataProvider {
   <init>(...);
   *** getGroups(...);
   *** getEditor(...);
   *** getEditorDisplayFormat(...);
   *** getEditorDisplayText(...);
   *** getEditorDisplayText(...);
   *** getEditorValue(...);
   *** getEditors(...);
   *** getErrorForEditor(...);
   *** getGroup(...);
   *** getPickerDataSource(...);
   *** isLastElementInLine(...);
   *** isSourceUpdated(...);
   *** postValue(...);
   *** validateValue(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DXDataFormDataProvider
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DXDataFormDataProvider {
   *** getGroups(...);
   *** getEditor(...);
   *** getEditorDisplayFormat(...);
   *** getEditorDisplayText(...);
   *** getEditorDisplayText(...);
   *** getEditorValue(...);
   *** getEditors(...);
   *** getErrorForEditor(...);
   *** getGroup(...);
   *** getPickerDataSource(...);
   *** isLastElementInLine(...);
   *** isSourceUpdated(...);
   *** postValue(...);
   *** validateValue(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DXDataFormDataProviderImpl
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DXDataFormDataProviderImpl {
   <init>(...);
   *** getContext(...);
   *** getGroups(...);
   *** getViews(...);
   *** getEditor(...);
   *** getEditorDisplayFormat(...);
   *** getEditorDisplayText(...);
   *** getEditorDisplayText(...);
   *** getEditorValue(...);
   *** getEditors(...);
   *** getErrorForEditor(...);
   *** getGroup(...);
   *** getPickerDataSource(...);
   *** isLastElementInLine(...);
   *** isSourceUpdated(...);
   *** postValue(...);
   *** validateValue(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DXDataFormDisplayTextProvider
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DXDataFormDisplayTextProvider {
   <init>(...);
   *** getActualDisplayFormat(...);
   *** getEditorDisplayText(...);
   *** getEditorDisplayTextFor(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DXDataFormDisplayTextProvider
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DXDataFormDisplayTextProvider {
   *** getActualDisplayFormat(...);
   *** getEditorDisplayText(...);
   *** getEditorDisplayTextFor(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DXDataFormEditorItem
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DXDataFormEditorItem {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isActive(...);
   *** setActive(...);
   *** getContainerView(...);
   *** setContainerView(...);
   *** getDisplayTextProvider(...);
   *** setDisplayTextProvider(...);
   *** getEditorListener(...);
   *** setEditorListener(...);
   *** isReadOnly(...);
   *** setReadOnly(...);
   *** getValue(...);
   *** setValue(...);
   *** getView(...);
   *** setView(...);
   *** configure(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DXDataFormEditorItemListener
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DXDataFormEditorItemListener {
   <init>(...);
   *** onFocusChanged(...);
   *** onValueChanged(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DXDataFormEditorItemListener
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DXDataFormEditorItemListener {
   *** onFocusChanged(...);
   *** onValueChanged(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DXSize$Companion
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DXSize$Companion {
   *** Auto(...);
   *** Fixed(...);
   *** Star(...);
   *** Star(...);
}

-keep class com.devexpress.editors.dataForm.protocols.DXSize
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DXSize {
   <init>(...);
   <init>(...);
   *** isAuto(...);
   *** isStar(...);
   *** getMaxSize(...);
   *** getMinSize(...);
   *** getSize(...);
   *** setSize(...);
   *** component1(...);
   *** component2(...);
   *** component3(...);
   *** component4(...);
   *** component5(...);
   *** copy(...);
}

-keep class com.devexpress.editors.dataForm.protocols.EditorLabelPosition
-keepclassmembers class com.devexpress.editors.dataForm.protocols.EditorLabelPosition {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.editors.dataForm.protocols.EditorType
-keepclassmembers class com.devexpress.editors.dataForm.protocols.EditorType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.editors.dataForm.protocols.ExpanderInfo
-keepclassmembers class com.devexpress.editors.dataForm.protocols.ExpanderInfo {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isCollapsable(...);
   *** setCollapsable(...);
   *** isCollapsed(...);
   *** setCollapsed(...);
   *** getContentBackgroundColor(...);
   *** setContentBackgroundColor(...);
   *** getCustomHeader(...);
   *** setCustomHeader(...);
   *** getEditorSpacing(...);
   *** setEditorSpacing(...);
   *** getGroupName(...);
   *** getHeaderBackgroundColor(...);
   *** setHeaderBackgroundColor(...);
   *** getHeaderFont(...);
   *** setHeaderFont(...);
   *** getHeaderFontColor(...);
   *** setHeaderFontColor(...);
   *** getHeaderFontSize(...);
   *** setHeaderFontSize(...);
   *** getHeaderText(...);
   *** setHeaderText(...);
   *** isHeaderVisible(...);
   *** setHeaderVisible(...);
   *** isLastRowSeparatorVisible(...);
   *** setLastRowSeparatorVisible(...);
   *** isReadonly(...);
   *** setReadonly(...);
   *** getSeparatorColor(...);
   *** setSeparatorColor(...);
   *** getSeparatorThickness(...);
   *** setSeparatorThickness(...);
   *** isVisible(...);
   *** setVisible(...);
   *** setContentPadding(...);
   *** setHeaderPadding(...);
}

-keep class com.devexpress.editors.dataForm.protocols.IDXDataFormPickerDataProvider
-keepclassmembers class com.devexpress.editors.dataForm.protocols.IDXDataFormPickerDataProvider {
}

-keep class com.devexpress.editors.dataForm.protocols.IDXDataFormPickerItem$DefaultImpls
-keepclassmembers class com.devexpress.editors.dataForm.protocols.IDXDataFormPickerItem$DefaultImpls {
   *** setPickerDataProvider(...);
}

-keep class com.devexpress.editors.dataForm.protocols.IDXDataFormPickerItem
-keepclassmembers class com.devexpress.editors.dataForm.protocols.IDXDataFormPickerItem {
}

-keep class com.devexpress.editors.dataForm.protocols.DXErrorSupport
-keepclassmembers class com.devexpress.editors.dataForm.protocols.DXErrorSupport {
}

-keep class com.devexpress.editors.dataForm.protocols.LayoutAlignment
-keepclassmembers class com.devexpress.editors.dataForm.protocols.LayoutAlignment {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.editors.animations.BottomTextAnimator$WhenMappings
-keepclassmembers class com.devexpress.editors.animations.BottomTextAnimator$WhenMappings {
}

-keep class com.devexpress.editors.animations.BottomTextAnimator
-keepclassmembers class com.devexpress.editors.animations.BottomTextAnimator {
   <init>(...);
   *** isAnimationInProcess(...);
   *** cancel(...);
}

-keep class com.devexpress.editors.animations.LabelAnimator$Companion
-keepclassmembers class com.devexpress.editors.animations.LabelAnimator$Companion {
   *** getACCELERATE_DECELERATE_INTERPOLATOR(...);
   *** getACCELERATE_INTERPOLATOR(...);
   *** getARGB_EVALUATOR(...);
   *** getCYCLE_INTERPOLATOR(...);
   *** getDECELERATE_INTERPOLATOR(...);
   *** getHEIGHT(...);
   *** getTEXT_VIEW_FONT_SIZE(...);
   *** getWIDTH(...);
}

-keep class com.devexpress.editors.animations.LabelAnimator
-keepclassmembers class com.devexpress.editors.animations.LabelAnimator {
   *** getCanAnimate(...);
   *** setCanAnimate(...);
   *** getHasError(...);
   *** isAnimationInProcess(...);
   *** isEnabled(...);
   *** isFocused(...);
   *** jumpToCurrentState(...);
   *** onLayoutChanged(...);
   *** onStateChanged(...);
   *** setEnabled(...);
   *** setHasError(...);
   *** setIsFocused(...);
}

-keep class com.devexpress.editors.AutoCompleteEdit$Companion
-keepclassmembers class com.devexpress.editors.AutoCompleteEdit$Companion {
}

-keep class com.devexpress.editors.AutoCompleteEdit$QuerySubmittedListener
-keepclassmembers class com.devexpress.editors.AutoCompleteEdit$QuerySubmittedListener {
}

-keep class mono.com.devexpress.editors.AutoCompleteEdit_QuerySubmittedListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.AutoCompleteEdit_QuerySubmittedListenerImplementor {
}

-keep class com.devexpress.editors.AutoCompleteEdit$SuggestionChosenListener
-keepclassmembers class com.devexpress.editors.AutoCompleteEdit$SuggestionChosenListener {
}

-keep class mono.com.devexpress.editors.AutoCompleteEdit_SuggestionChosenListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.AutoCompleteEdit_SuggestionChosenListenerImplementor {
}

-keep class com.devexpress.editors.AutoCompleteEdit$TextChangedListener
-keepclassmembers class com.devexpress.editors.AutoCompleteEdit$TextChangedListener {
}

-keep class mono.com.devexpress.editors.AutoCompleteEdit_TextChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.AutoCompleteEdit_TextChangedListenerImplementor {
}

-keep class com.devexpress.editors.AutoCompleteEdit
-keepclassmembers class com.devexpress.editors.AutoCompleteEdit {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDisabledSubmitIconColor(...);
   *** setDisabledSubmitIconColor(...);
   *** getDisplayText(...);
   *** getDropDownBackgroundColor(...);
   *** setDropDownBackgroundColor(...);
   *** getDropDownStateChangedListener(...);
   *** setDropDownStateChangedListener(...);
   *** getFormatter(...);
   *** setFormatter(...);
   *** getHasValue(...);
   *** getInternalEditor(...);
   *** getKeepFocusOnItemSelection(...);
   *** setKeepFocusOnItemSelection(...);
   *** isLoadingInProcess(...);
   *** setLoadingInProcess(...);
   *** getManageLoadingAutomatically(...);
   *** setManageLoadingAutomatically(...);
   *** getNoSuggestionsText(...);
   *** setNoSuggestionsText(...);
   *** getNoSuggestionsTextSize(...);
   *** setNoSuggestionsTextSize(...);
   *** getNoSuggestionsTextTint(...);
   *** setNoSuggestionsTextTint(...);
   *** getNoSuggestionsTypeface(...);
   *** setNoSuggestionsTypeface(...);
   *** getQuerySubmittedListener(...);
   *** setQuerySubmittedListener(...);
   *** getSelectionChangedListener(...);
   *** setSelectionChangedListener(...);
   *** getStyle(...);
   *** getSubmitIcon(...);
   *** setSubmitIcon(...);
   *** getSubmitIconColor(...);
   *** setSubmitIconColor(...);
   *** getSubmitIconVisibility(...);
   *** setSubmitIconVisibility(...);
   *** getSuggestionChosenListener(...);
   *** setSuggestionChosenListener(...);
   *** getText(...);
   *** setText(...);
   *** getTextChangedListener(...);
   *** setTextChangedListener(...);
   *** getWaitIndicatorColor(...);
   *** setWaitIndicatorColor(...);
   *** changeEditorInputType(...);
   *** dismissDropDown(...);
   *** invalidateDropDownList(...);
   *** resetNoSuggestionTextPadding(...);
   *** setAdapter(...);
   *** setClearIconClickedListener(...);
   *** setNoSuggestionTextPaddingRelative(...);
   *** setNoSuggestionTextPaddingRelative(...);
   *** setNoSuggestionTextSize(...);
   *** setSelection(...);
   *** setSelection(...);
   *** showDropDown(...);
   *** showKeyboard(...);
   *** updateClearImageVisibility(...);
}

-keep class com.devexpress.editors.BuildConfig
-keepclassmembers class com.devexpress.editors.BuildConfig {
   <init>(...);
}

-keep class com.devexpress.editors.CheckEdit$Companion
-keepclassmembers class com.devexpress.editors.CheckEdit$Companion {
   *** getDefaultCheckboxDrawable(...);
   *** getDefaultCheckedCheckboxDrawable(...);
   *** getDefaultIndeterminateCheckboxDrawable(...);
   *** getDefaultUncheckedCheckboxDrawable(...);
}

-keep class com.devexpress.editors.CheckEdit$Listener
-keepclassmembers class com.devexpress.editors.CheckEdit$Listener {
}

-keep class mono.com.devexpress.editors.CheckEdit_ListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.CheckEdit_ListenerImplementor {
}

-keep class com.devexpress.editors.CheckEdit
-keepclassmembers class com.devexpress.editors.CheckEdit {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCheckBoxColor(...);
   *** setCheckBoxColor(...);
   *** getCheckboxDrawable(...);
   *** setCheckboxDrawable(...);
   *** getCheckboxGravity(...);
   *** setCheckboxGravity(...);
   *** getCheckboxIndent(...);
   *** setCheckboxIndent(...);
   *** getCheckboxPosition(...);
   *** setCheckboxPosition(...);
   *** getCheckboxTintMode(...);
   *** setCheckboxTintMode(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getCheckedCheckBoxColor(...);
   *** setCheckedCheckBoxColor(...);
   *** getDisabledCheckBoxColor(...);
   *** setDisabledCheckBoxColor(...);
   *** getDisabledCheckedCheckBoxColor(...);
   *** setDisabledCheckedCheckBoxColor(...);
   *** getDisabledLabelTextColor(...);
   *** setDisabledLabelTextColor(...);
   *** isIntermediateValueUserInputted(...);
   *** setIntermediateValueUserInputted(...);
   *** getLabel(...);
   *** setLabel(...);
   *** getLabelGravity(...);
   *** setLabelGravity(...);
   *** getLabelPaintFlags(...);
   *** setLabelPaintFlags(...);
   *** getLabelTextAlignment(...);
   *** setLabelTextAlignment(...);
   *** getLabelTextColor(...);
   *** setLabelTextColor(...);
   *** getLabelTextSize(...);
   *** setLabelTextSize(...);
   *** getLabelTypeface(...);
   *** setLabelTypeface(...);
   *** getListener(...);
   *** setListener(...);
   *** getValue(...);
   *** setValue(...);
   *** beginInit(...);
   *** endInit(...);
   *** getDefaultCheckboxDrawable(...);
   *** getDefaultCheckedCheckboxDrawable(...);
   *** getDefaultIndeterminateCheckboxDrawable(...);
   *** getDefaultUncheckedCheckboxDrawable(...);
   *** setCheckboxIndent(...);
   *** setLabelTextSize(...);
   *** setValue(...);
   *** toggle(...);
}

-keep class com.devexpress.editors.ComboBoxEdit$Companion
-keepclassmembers class com.devexpress.editors.ComboBoxEdit$Companion {
   *** getDefaultDropDownDownIcon(...);
   *** getDefaultDropDownIcon(...);
   *** getDefaultDropDownUpIcon(...);
}

-keep class com.devexpress.editors.ComboBoxEdit$EditTextStrategy
-keepclassmembers class com.devexpress.editors.ComboBoxEdit$EditTextStrategy {
}

-keep class com.devexpress.editors.ComboBoxEdit$Formatter
-keepclassmembers class com.devexpress.editors.ComboBoxEdit$Formatter {
}

-keep class com.devexpress.editors.ComboBoxEdit$OnFilterTextChangedListener
-keepclassmembers class com.devexpress.editors.ComboBoxEdit$OnFilterTextChangedListener {
}

-keep class mono.com.devexpress.editors.ComboBoxEdit_OnFilterTextChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.ComboBoxEdit_OnFilterTextChangedListenerImplementor {
}

-keep class com.devexpress.editors.ComboBoxEdit$OnSelectedItemChangedListener
-keepclassmembers class com.devexpress.editors.ComboBoxEdit$OnSelectedItemChangedListener {
}

-keep class mono.com.devexpress.editors.ComboBoxEdit_OnSelectedItemChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.ComboBoxEdit_OnSelectedItemChangedListenerImplementor {
}

-keep class com.devexpress.editors.ComboBoxEdit
-keepclassmembers class com.devexpress.editors.ComboBoxEdit {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDisabledDropDownIconColor(...);
   *** setDisabledDropDownIconColor(...);
   *** getDisplayText(...);
   *** getDropDownBackgroundColor(...);
   *** setDropDownBackgroundColor(...);
   *** getDropDownIcon(...);
   *** setDropDownIcon(...);
   *** getDropDownIconClickListener(...);
   *** setDropDownIconClickListener(...);
   *** getDropDownIconColor(...);
   *** setDropDownIconColor(...);
   *** isDropDownIconVisible(...);
   *** setDropDownIconVisible(...);
   *** getDropDownStateChangeListener(...);
   *** setDropDownStateChangeListener(...);
   *** isFilterEnabled(...);
   *** setFilterEnabled(...);
   *** getFilterTextChangedListener(...);
   *** setFilterTextChangedListener(...);
   *** getFormatter(...);
   *** setFormatter(...);
   *** getHasValue(...);
   *** getInternalEditor(...);
   *** getKeepFocusOnItemSelection(...);
   *** setKeepFocusOnItemSelection(...);
   *** getSelectedIndex(...);
   *** setSelectedIndex(...);
   *** getSelectedItem(...);
   *** setSelectedItem(...);
   *** getSelectedItemChangedListener(...);
   *** setSelectedItemChangedListener(...);
   *** getStyle(...);
   *** changeEditorInputType(...);
   *** dismissDropDown(...);
   *** getDefaultDropDownDownIcon(...);
   *** getDefaultDropDownIcon(...);
   *** getDefaultDropDownUpIcon(...);
   *** invalidateDropDownList(...);
   *** refreshDisplayText(...);
   *** setAdapter(...);
   *** setClearIconClickedListener(...);
   *** showDropDown(...);
   *** updateClearImageVisibility(...);
}

-keep class com.devexpress.editors.Constants
-keepclassmembers class com.devexpress.editors.Constants {
   *** getEMPTY_COLOR(...);
}

-keep class com.devexpress.editors.DataFormView$Companion
-keepclassmembers class com.devexpress.editors.DataFormView$Companion {
}

-keep class com.devexpress.editors.DataFormView
-keepclassmembers class com.devexpress.editors.DataFormView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getChangedListener(...);
   *** setChangedListener(...);
   *** getCommitMode(...);
   *** setCommitMode(...);
   *** getContent(...);
   *** setContent(...);
   *** getInMove(...);
   *** setInMove(...);
   *** getScrollView(...);
   *** setScrollView(...);
   *** getValidationMode(...);
   *** setValidationMode(...);
   *** commit(...);
   *** commit(...);
   *** contentSizeChanged(...);
   *** getEditor(...);
   *** getEditorValue(...);
   *** groupStructureChanged(...);
   *** groupsStructureChanged(...);
   *** initialize(...);
   *** invalidateEditor(...);
   *** invalidateGroup(...);
   *** isExpanderCollapsed(...);
   *** nativeIsVisibleOverlay(...);
   *** onLayout(...);
   *** resetEditorValue(...);
   *** validate(...);
   *** validate(...);
}

-keep class com.devexpress.editors.DateEdit$DateChangedListener
-keepclassmembers class com.devexpress.editors.DateEdit$DateChangedListener {
}

-keep class mono.com.devexpress.editors.DateEdit_DateChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.DateEdit_DateChangedListenerImplementor {
}

-keep class com.devexpress.editors.DateEdit
-keepclassmembers class com.devexpress.editors.DateEdit {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDate(...);
   *** setDate(...);
   *** getDateChangedListener(...);
   *** setDateChangedListener(...);
   *** getDateIcon(...);
   *** setDateIcon(...);
   *** getDateIconColor(...);
   *** setDateIconColor(...);
   *** isDateIconVisible(...);
   *** setDateIconVisible(...);
   *** getDateInMillis(...);
   *** setDateInMillis(...);
   *** getDialogStateChangeListener(...);
   *** setDialogStateChangeListener(...);
   *** getDialogThemeResId(...);
   *** setDialogThemeResId(...);
   *** getDisabledDateIconColor(...);
   *** setDisabledDateIconColor(...);
   *** getDisplayText(...);
   *** getFormatter(...);
   *** setFormatter(...);
   *** getFragmentManager(...);
   *** setFragmentManager(...);
   *** getHasValue(...);
   *** getInternalEditor(...);
   *** getMaxDate(...);
   *** setMaxDate(...);
   *** getMinDate(...);
   *** setMinDate(...);
   *** getStyle(...);
   *** changeEditorInputType(...);
   *** hideDateDialog(...);
   *** setClearIconClickedListener(...);
   *** setDateIconClickedListener(...);
   *** setLocale(...);
   *** setLocale(...);
   *** setMaxDate(...);
   *** setMinDate(...);
   *** showDateDialog(...);
   *** updateClearImageVisibility(...);
}

-keep class com.devexpress.editors.DisplayEdit
-keepclassmembers class com.devexpress.editors.DisplayEdit {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAffixColors(...);
   *** setAffixColors(...);
   *** getAffixGravity(...);
   *** setAffixGravity(...);
   *** getAffixIndent(...);
   *** setAffixIndent(...);
   *** getAffixTextSize(...);
   *** setAffixTextSize(...);
   *** getAffixTypeface(...);
   *** setAffixTypeface(...);
   *** getEllipsize(...);
   *** setEllipsize(...);
   *** getEndDrawables(...);
   *** getIconGravity(...);
   *** setIconGravity(...);
   *** getIconIndent(...);
   *** setIconIndent(...);
   *** getIconSpacing(...);
   *** setIconSpacing(...);
   *** getMaxLines(...);
   *** setMaxLines(...);
   *** getMinLines(...);
   *** setMinLines(...);
   *** getPaintFlags(...);
   *** setPaintFlags(...);
   *** getPrefixText(...);
   *** setPrefixText(...);
   *** isSingleLine(...);
   *** setSingleLine(...);
   *** getStartDrawables(...);
   *** getSuffixText(...);
   *** setSuffixText(...);
   *** getText(...);
   *** setText(...);
   *** getTextColors(...);
   *** setTextColors(...);
   *** getTextGravity(...);
   *** setTextGravity(...);
   *** getTextSize(...);
   *** setTextSize(...);
   *** getTypeface(...);
   *** setTypeface(...);
   *** addEndDrawable(...);
   *** addStartDrawable(...);
   *** removeEndDrawable(...);
   *** removeStartDrawable(...);
}

-keep class com.devexpress.editors.DisplayTextProvider
-keepclassmembers class com.devexpress.editors.DisplayTextProvider {
   <init>(...);
   *** getDisplayFormat(...);
   *** setDisplayFormat(...);
   *** getFormattedText(...);
   *** getText(...);
   *** setText(...);
}

-keep class com.devexpress.editors.DisplayTextProvider
-keepclassmembers class com.devexpress.editors.DisplayTextProvider {
   *** getFormattedText(...);
}

-keep class com.devexpress.editors.EditBase$Companion
-keepclassmembers class com.devexpress.editors.EditBase$Companion {
   *** getBORDER_MODE_FILLED(...);
   *** getBORDER_MODE_OUTLINED(...);
   *** getCORNER_MODE_CUT(...);
   *** getCORNER_MODE_ROUND(...);
   *** getICON_VISIBILITY_MODE_ALWAYS(...);
   *** getICON_VISIBILITY_MODE_AUTO(...);
   *** getICON_VISIBILITY_MODE_NEVER(...);
   *** getLocaleForKeyListener(...);
}

-keep class com.devexpress.editors.EditBase$GestureHandler
-keepclassmembers class com.devexpress.editors.EditBase$GestureHandler {
   <init>(...);
   *** getTargetView(...);
}

-keep class com.devexpress.editors.EditBase
-keepclassmembers class com.devexpress.editors.EditBase {
   <init>(...);
   <init>(...);
   *** getAffixColor(...);
   *** setAffixColor(...);
   *** getAffixIndent(...);
   *** setAffixIndent(...);
   *** getAffixTextSize(...);
   *** setAffixTextSize(...);
   *** getAffixTypeface(...);
   *** setAffixTypeface(...);
   *** getAllowAnimations(...);
   *** setAllowAnimations(...);
   *** getBORDER_MODE_FILLED(...);
   *** getBORDER_MODE_OUTLINED(...);
   *** getBorderColor(...);
   *** setBorderColor(...);
   *** getBorderMode(...);
   *** setBorderMode(...);
   *** getBorderThickness(...);
   *** setBorderThickness(...);
   *** getBottomLeftCornerRadius(...);
   *** setBottomLeftCornerRadius(...);
   *** getBottomRightCornerRadius(...);
   *** setBottomRightCornerRadius(...);
   *** getBottomTextSize(...);
   *** setBottomTextSize(...);
   *** getBottomTextTopIndent(...);
   *** setBottomTextTopIndent(...);
   *** getBottomTextTypeface(...);
   *** setBottomTextTypeface(...);
   *** getBoxBackgroundColor(...);
   *** setBoxBackgroundColor(...);
   *** getBoxHeight(...);
   *** setBoxHeight(...);
   *** getBoxPaddingBottom(...);
   *** setBoxPaddingBottom(...);
   *** getBoxPaddingEnd(...);
   *** setBoxPaddingEnd(...);
   *** getBoxPaddingStart(...);
   *** setBoxPaddingStart(...);
   *** getBoxPaddingTop(...);
   *** setBoxPaddingTop(...);
   *** getBoxRect(...);
   *** getCORNER_MODE_CUT(...);
   *** getCORNER_MODE_ROUND(...);
   *** getCharacterCounterStartIndent(...);
   *** setCharacterCounterStartIndent(...);
   *** getClearIcon(...);
   *** setClearIcon(...);
   *** getClearIconColor(...);
   *** setClearIconColor(...);
   *** getClearIconVisibility(...);
   *** setClearIconVisibility(...);
   *** getCornerMode(...);
   *** setCornerMode(...);
   *** getDisabledAffixColor(...);
   *** setDisabledAffixColor(...);
   *** getDisabledBorderColor(...);
   *** setDisabledBorderColor(...);
   *** getDisabledBorderThickness(...);
   *** setDisabledBorderThickness(...);
   *** getDisabledBoxBackgroundColor(...);
   *** setDisabledBoxBackgroundColor(...);
   *** getDisabledClearIconColor(...);
   *** setDisabledClearIconColor(...);
   *** getDisabledEndIconColor(...);
   *** setDisabledEndIconColor(...);
   *** getDisabledErrorIconColor(...);
   *** setDisabledErrorIconColor(...);
   *** getDisabledHelpTextColor(...);
   *** setDisabledHelpTextColor(...);
   *** getDisabledLabelColor(...);
   *** setDisabledLabelColor(...);
   *** getDisabledStartIconColor(...);
   *** setDisabledStartIconColor(...);
   *** getDisabledTextColor(...);
   *** setDisabledTextColor(...);
   *** getDisplayText(...);
   *** isEditorFocused(...);
   *** setEditorFocused(...);
   *** getEditorGestureListener(...);
   *** setEditorGestureListener(...);
   *** getEditorRawInputType(...);
   *** getEllipsize(...);
   *** setEllipsize(...);
   *** getEndIcon(...);
   *** setEndIcon(...);
   *** getEndIconColor(...);
   *** setEndIconColor(...);
   *** getEndIconVerticalGravity(...);
   *** setEndIconVerticalGravity(...);
   *** isEndIconVisible(...);
   *** setEndIconVisible(...);
   *** getErrorColor(...);
   *** setErrorColor(...);
   *** getErrorIcon(...);
   *** setErrorIcon(...);
   *** getErrorIconColor(...);
   *** setErrorIconColor(...);
   *** isErrorIconVisible(...);
   *** setErrorIconVisible(...);
   *** getErrorText(...);
   *** setErrorText(...);
   *** getFocusedBorderColor(...);
   *** setFocusedBorderColor(...);
   *** getFocusedBorderThickness(...);
   *** setFocusedBorderThickness(...);
   *** getFocusedLabelColor(...);
   *** setFocusedLabelColor(...);
   *** getHasError(...);
   *** setHasError(...);
   *** getHasValue(...);
   *** getHelpText(...);
   *** setHelpText(...);
   *** getHelpTextColor(...);
   *** setHelpTextColor(...);
   *** getICON_VISIBILITY_MODE_ALWAYS(...);
   *** getICON_VISIBILITY_MODE_AUTO(...);
   *** getICON_VISIBILITY_MODE_NEVER(...);
   *** getIconIndent(...);
   *** setIconIndent(...);
   *** getIconSpacing(...);
   *** setIconSpacing(...);
   *** getImeActionId(...);
   *** getImeActionLabel(...);
   *** getImeActionOptions(...);
   *** setImeActionOptions(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getInternalEditor(...);
   *** isAutoPadding(...);
   *** isEditEnabled(...);
   *** isMultilineEdit(...);
   *** isRefreshSuspended(...);
   *** getLabelColor(...);
   *** setLabelColor(...);
   *** isLabelFloating(...);
   *** setLabelFloating(...);
   *** getLabelText(...);
   *** setLabelText(...);
   *** getLabelTextSize(...);
   *** setLabelTextSize(...);
   *** getLabelTypeface(...);
   *** setLabelTypeface(...);
   *** getLayoutManager(...);
   *** setLayoutManager(...);
   *** getLocale(...);
   *** getMinBoxHeight(...);
   *** setMinBoxHeight(...);
   *** getMinBoxWidth(...);
   *** setMinBoxWidth(...);
   *** getOnEditActionListener(...);
   *** setOnEditActionListener(...);
   *** getPlaceholder(...);
   *** setPlaceholder(...);
   *** getPlaceholderColor(...);
   *** setPlaceholderColor(...);
   *** getPrefix(...);
   *** setPrefix(...);
   *** isReadOnly(...);
   *** setReadOnly(...);
   *** getReserveBottomTextLine(...);
   *** setReserveBottomTextLine(...);
   *** getStartIcon(...);
   *** setStartIcon(...);
   *** getStartIconColor(...);
   *** setStartIconColor(...);
   *** getStartIconVerticalGravity(...);
   *** setStartIconVerticalGravity(...);
   *** isStartIconVisible(...);
   *** setStartIconVisible(...);
   *** getStyle(...);
   *** getSuffix(...);
   *** setSuffix(...);
   *** getTextColor(...);
   *** setTextColor(...);
   *** getTextGravity(...);
   *** setTextGravity(...);
   *** getTextSize(...);
   *** setTextSize(...);
   *** getTextTypeface(...);
   *** setTextTypeface(...);
   *** getTopLeftCornerRadius(...);
   *** setTopLeftCornerRadius(...);
   *** getTopRightCornerRadius(...);
   *** setTopRightCornerRadius(...);
   *** changeEditorInputType(...);
   *** changeEditorTransformationMethod(...);
   *** finishInitialization(...);
   *** getKeyListener(...);
   *** getLocaleForKeyListener(...);
   *** onBorderModeChanged(...);
   *** onBottomTextSizeChanged(...);
   *** onBottomTextTypefaceChanged(...);
   *** onCornerModeChanged(...);
   *** onCornerRadiusChanged(...);
   *** onDoubleTap(...);
   *** onEditorAction(...);
   *** onEditorFocusChanged(...);
   *** onErrorColorChanged(...);
   *** onHelpTextColorChanged(...);
   *** onLayout(...);
   *** onLongPress(...);
   *** onPlaceholderColorChanged(...);
   *** onReadOnlyChanged(...);
   *** onReserveBottomTextLineChanged(...);
   *** onSingleTapUp(...);
   *** onValueChanged(...);
   *** resetBoxPadding(...);
   *** resumeRender(...);
   *** setAffixColors(...);
   *** setAffixIndent(...);
   *** setAffixTextSize(...);
   *** setBorderColors(...);
   *** setBorderThickness(...);
   *** setBottomLeftCornerRadius(...);
   *** setBottomRightCornerRadius(...);
   *** setBottomTextSize(...);
   *** setBottomTextTopIndent(...);
   *** setBoxBackgroundColors(...);
   *** setBoxHeight(...);
   *** setBoxPadding(...);
   *** setBoxPadding(...);
   *** setBoxPaddingBottom(...);
   *** setBoxPaddingEnd(...);
   *** setBoxPaddingStart(...);
   *** setBoxPaddingTop(...);
   *** setCharacterCounterStartIndent(...);
   *** setChildrenEnabled(...);
   *** setClearIconClickedListener(...);
   *** setCornerRadius(...);
   *** setCornerRadius(...);
   *** setDisabledBorderThickness(...);
   *** setEndIconClickedListener(...);
   *** setErrorIconClickedListener(...);
   *** setFilledCutStyle(...);
   *** setFilledStyle(...);
   *** setFocusedBorderThickness(...);
   *** setHelpTextColors(...);
   *** setIconIndent(...);
   *** setIconSpacing(...);
   *** setLabelColors(...);
   *** setLabelTextSize(...);
   *** setMinBoxHeight(...);
   *** setMinBoxWidth(...);
   *** setOnBoxMarginChangedListener(...);
   *** setOutlinedCutStyle(...);
   *** setOutlinedStyle(...);
   *** setPadding(...);
   *** setStartIconClickedListener(...);
   *** setTextColors(...);
   *** setTextSize(...);
   *** setTopLeftCornerRadius(...);
   *** setTopRightCornerRadius(...);
   *** setupCommonStyleColors(...);
   *** setupCommonStyleSizes(...);
   *** suspendRender(...);
   *** updateAll(...);
   *** updateClearImageVisibility(...);
   *** updateDrawableTintMode(...);
   *** updateDrawablesTintMode(...);
   *** updateEditorTextSettings(...);
   *** updateIconTintList(...);
   *** updateIconVisibility(...);
   *** updateLabelState(...);
}

-keep class com.devexpress.editors.EditBase
-keepclassmembers class com.devexpress.editors.EditBase {
   *** getDisplayText(...);
   *** getHasValue(...);
   *** getInternalEditor(...);
   *** getStyle(...);
   *** changeEditorInputType(...);
   *** setClearIconClickedListener(...);
   *** updateClearImageVisibility(...);
}

-keep class com.devexpress.editors.ExtensionsKt
-keepclassmembers class com.devexpress.editors.ExtensionsKt {
   *** coerceAtLeastDX(...);
   *** coerceAtMostDX(...);
   *** convertToDp(...);
   *** convertToDp(...);
   *** convertToPx(...);
   *** convertToPx(...);
}

-keep class com.devexpress.editors.ComboBoxAdapter
-keepclassmembers class com.devexpress.editors.ComboBoxAdapter {
}

-keep class com.devexpress.editors.DateTimeFormatter
-keepclassmembers class com.devexpress.editors.DateTimeFormatter {
}

-keep class com.devexpress.editors.DialogStateChangedListener
-keepclassmembers class com.devexpress.editors.DialogStateChangedListener {
}

-keep class mono.com.devexpress.editors.DialogStateChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.DialogStateChangedListenerImplementor {
}

-keep class com.devexpress.editors.DropDownStateChangedListener
-keepclassmembers class com.devexpress.editors.DropDownStateChangedListener {
}

-keep class mono.com.devexpress.editors.DropDownStateChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.DropDownStateChangedListenerImplementor {
}

-keep class com.devexpress.editors.DXEditTextChangedWatcher
-keepclassmembers class com.devexpress.editors.DXEditTextChangedWatcher {
}

-keep class com.devexpress.editors.EditorGestureListener
-keepclassmembers class com.devexpress.editors.EditorGestureListener {
}

-keep class mono.com.devexpress.editors.EditorGestureListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.EditorGestureListenerImplementor {
}

-keep class com.devexpress.editors.ExpanderListener
-keepclassmembers class com.devexpress.editors.ExpanderListener {
}

-keep class mono.com.devexpress.editors.ExpanderListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.ExpanderListenerImplementor {
}

-keep class com.devexpress.editors.OnDataFromChangedListener
-keepclassmembers class com.devexpress.editors.OnDataFromChangedListener {
}

-keep class mono.com.devexpress.editors.OnDataFromChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.OnDataFromChangedListenerImplementor {
}

-keep class com.devexpress.editors.OnEditActionListener
-keepclassmembers class com.devexpress.editors.OnEditActionListener {
}

-keep class mono.com.devexpress.editors.OnEditActionListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.OnEditActionListenerImplementor {
}

-keep class com.devexpress.editors.OnTextChangedListener
-keepclassmembers class com.devexpress.editors.OnTextChangedListener {
}

-keep class mono.com.devexpress.editors.OnTextChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.OnTextChangedListenerImplementor {
}

-keep class com.devexpress.editors.SelectionChangedListenable
-keepclassmembers class com.devexpress.editors.SelectionChangedListenable {
}

-keep class com.devexpress.editors.SelectionChangedListener
-keepclassmembers class com.devexpress.editors.SelectionChangedListener {
}

-keep class mono.com.devexpress.editors.SelectionChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.SelectionChangedListenerImplementor {
}

-keep class com.devexpress.editors.MultilineEdit
-keepclassmembers class com.devexpress.editors.MultilineEdit {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getMaxLineCount(...);
   *** setMaxLineCount(...);
   *** getMinLineCount(...);
   *** setMinLineCount(...);
   *** getStyle(...);
}

-keep class com.devexpress.editors.NumericEdit$UpDownClickListener
-keepclassmembers class com.devexpress.editors.NumericEdit$UpDownClickListener {
}

-keep class mono.com.devexpress.editors.NumericEdit_UpDownClickListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.NumericEdit_UpDownClickListenerImplementor {
}

-keep class com.devexpress.editors.NumericEdit
-keepclassmembers class com.devexpress.editors.NumericEdit {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDecimalSeparator(...);
   *** setDecimalSeparator(...);
   *** getDisabledDownIconColor(...);
   *** setDisabledDownIconColor(...);
   *** getDisabledUpIconColor(...);
   *** setDisabledUpIconColor(...);
   *** getDownIcon(...);
   *** setDownIcon(...);
   *** getDownIconColor(...);
   *** setDownIconColor(...);
   *** isDownIconVisible(...);
   *** setDownIconVisible(...);
   *** getDownImageEnabled(...);
   *** setDownImageEnabled(...);
   *** getMaxDecimalDigitCount(...);
   *** setMaxDecimalDigitCount(...);
   *** getMinusSign(...);
   *** setMinusSign(...);
   *** getStyle(...);
   *** getUpDownClickListener(...);
   *** setUpDownClickListener(...);
   *** getUpDownIconAlignment(...);
   *** setUpDownIconAlignment(...);
   *** getUpIcon(...);
   *** setUpIcon(...);
   *** getUpIconColor(...);
   *** setUpIconColor(...);
   *** isUpIconVisible(...);
   *** setUpIconVisible(...);
   *** getUpImageEnabled(...);
   *** setUpImageEnabled(...);
   *** setSelectAllOnFocus(...);
}

-keep class com.devexpress.editors.OnClickHandledListener
-keepclassmembers class com.devexpress.editors.OnClickHandledListener {
   <init>(...);
   *** getClickListener(...);
   *** setClickListener(...);
   *** onClick(...);
   *** onHandledClick(...);
}

-keep class com.devexpress.editors.OnClickHandledListener
-keepclassmembers class com.devexpress.editors.OnClickHandledListener {
   *** onHandledClick(...);
}

-keep class com.devexpress.editors.PasswordEdit$Companion
-keepclassmembers class com.devexpress.editors.PasswordEdit$Companion {
   *** getDefaultPasswordHideIcon(...);
   *** getDefaultPasswordShowIcon(...);
   *** getDefaultPasswordVisibilityIcon(...);
}

-keep class com.devexpress.editors.PasswordEdit
-keepclassmembers class com.devexpress.editors.PasswordEdit {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDisabledPasswordIconColor(...);
   *** setDisabledPasswordIconColor(...);
   *** getPasswordIconColor(...);
   *** setPasswordIconColor(...);
   *** getPasswordIconVisibility(...);
   *** setPasswordIconVisibility(...);
   *** isPasswordShown(...);
   *** setPasswordShown(...);
   *** getPasswordVisibilityIcon(...);
   *** setPasswordVisibilityIcon(...);
   *** getStyle(...);
   *** getDefaultPasswordHideIcon(...);
   *** getDefaultPasswordShowIcon(...);
   *** getDefaultPasswordVisibilityIcon(...);
}

-keep class com.devexpress.editors.SimpleButton$Companion
-keepclassmembers class com.devexpress.editors.SimpleButton$Companion {
   *** getICON_POSITION_BOTTOM(...);
   *** getICON_POSITION_END(...);
   *** getICON_POSITION_START(...);
   *** getICON_POSITION_TOP(...);
}

-keep class com.devexpress.editors.SimpleButton
-keepclassmembers class com.devexpress.editors.SimpleButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBackgroundColor(...);
   *** getBorderColor(...);
   *** setBorderColor(...);
   *** getBorderThickness(...);
   *** setBorderThickness(...);
   *** getBottomLeftCornerRadius(...);
   *** setBottomLeftCornerRadius(...);
   *** getBottomRightCornerRadius(...);
   *** setBottomRightCornerRadius(...);
   *** getContentView(...);
   *** setContentView(...);
   *** getCornerMode(...);
   *** setCornerMode(...);
   *** getDisabledBackgroundColor(...);
   *** setDisabledBackgroundColor(...);
   *** getDisabledBorderColor(...);
   *** setDisabledBorderColor(...);
   *** getDisabledIconColor(...);
   *** setDisabledIconColor(...);
   *** getDisabledTextColor(...);
   *** setDisabledTextColor(...);
   *** getICON_POSITION_BOTTOM(...);
   *** getICON_POSITION_END(...);
   *** getICON_POSITION_START(...);
   *** getICON_POSITION_TOP(...);
   *** getIcon(...);
   *** setIcon(...);
   *** getIconColor(...);
   *** setIconColor(...);
   *** getIconIndent(...);
   *** setIconIndent(...);
   *** getIconPosition(...);
   *** setIconPosition(...);
   *** getPressedBackgroundColor(...);
   *** setPressedBackgroundColor(...);
   *** getPressedBorderColor(...);
   *** setPressedBorderColor(...);
   *** getPressedIconColor(...);
   *** setPressedIconColor(...);
   *** getPressedTextColor(...);
   *** setPressedTextColor(...);
   *** getShowShadow(...);
   *** setShowShadow(...);
   *** getText(...);
   *** setText(...);
   *** getTextColor(...);
   *** setTextColor(...);
   *** getTextSize(...);
   *** setTextSize(...);
   *** getTopLeftCornerRadius(...);
   *** setTopLeftCornerRadius(...);
   *** getTopRightCornerRadius(...);
   *** setTopRightCornerRadius(...);
   *** getTypeface(...);
   *** setTypeface(...);
   *** beginInit(...);
   *** endInit(...);
   *** setBorderThickness(...);
   *** setBottomLeftCornerRadius(...);
   *** setBottomRightCornerRadius(...);
   *** setCornerRadii(...);
   *** setCornerRadii(...);
   *** setIcon(...);
   *** setIconIndent(...);
   *** setPadding(...);
   *** setPaddingRelative(...);
   *** setText(...);
   *** setText(...);
   *** setText(...);
   *** setTextSize(...);
   *** setTopLeftCornerRadius(...);
   *** setTopRightCornerRadius(...);
   *** setTypeface(...);
   *** setupContainedAppearance(...);
   *** setupOutlinedAppearance(...);
   *** setupTextAppearance(...);
}

-keep class com.devexpress.editors.SimpleComboBoxAdapter
-keepclassmembers class com.devexpress.editors.SimpleComboBoxAdapter {
   <init>(...);
   *** getHorizontalTextAlignment(...);
   *** setHorizontalTextAlignment(...);
   *** getItemTextSize(...);
   *** setItemTextSize(...);
   *** getItemTextTint(...);
   *** setItemTextTint(...);
   *** getItemTypeface(...);
   *** setItemTypeface(...);
   *** getSelectedItemBackgroundColor(...);
   *** setSelectedItemBackgroundColor(...);
   *** createItemBackground(...);
   *** getItemId(...);
   *** getText(...);
   *** getView(...);
   *** resetItemPadding(...);
   *** setItemPaddingRelative(...);
   *** setItemPaddingRelative(...);
   *** setItemTextSize(...);
   *** getPosition(...);
   *** getSourceItem(...);
   *** getSourcePosition(...);
}

-keep class com.devexpress.editors.SimpleComboBoxAdapter
-keepclassmembers class com.devexpress.editors.SimpleComboBoxAdapter {
   *** getText(...);
   *** getPosition(...);
   *** getSourceItem(...);
   *** getSourcePosition(...);
   *** getCount(...);
   *** getItem(...);
}

-keep class com.devexpress.editors.Test
-keepclassmembers class com.devexpress.editors.Test {
   <init>(...);
}

-keep class com.devexpress.editors.TextEdit$Companion
-keepclassmembers class com.devexpress.editors.TextEdit$Companion {
}

-keep class com.devexpress.editors.TextEdit
-keepclassmembers class com.devexpress.editors.TextEdit {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDisplayFormat(...);
   *** setDisplayFormat(...);
   *** getDisplayTextProvider(...);
   *** setDisplayTextProvider(...);
   *** getMask(...);
   *** setMask(...);
   *** getMaskPlaceholderChar(...);
   *** setMaskPlaceholderChar(...);
   *** getStyle(...);
}

-keep class com.devexpress.editors.TextEditBase$Companion
-keepclassmembers class com.devexpress.editors.TextEditBase$Companion {
}

-keep class com.devexpress.editors.TextEditBase
-keepclassmembers class com.devexpress.editors.TextEditBase {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCharactersCount(...);
   *** setCharactersCount(...);
   *** getDisplayText(...);
   *** getEditorTransformationMethod(...);
   *** getHasValue(...);
   *** getImeHintLocales(...);
   *** setImeHintLocales(...);
   *** getInternalEditor(...);
   *** getLimitTextByCharactersCount(...);
   *** setLimitTextByCharactersCount(...);
   *** getOnTextChangedListener(...);
   *** setOnTextChangedListener(...);
   *** getSelectionChangedListener(...);
   *** setSelectionChangedListener(...);
   *** getSelectionEnd(...);
   *** getSelectionStart(...);
   *** getText(...);
   *** setText(...);
   *** changeEditorInputType(...);
   *** changeTextStrategy(...);
   *** clearComposingText(...);
   *** doAfterTextChanged(...);
   *** doBeforeTextChanged(...);
   *** doOnTextChanged(...);
   *** requestTextStrategyChange(...);
   *** selectAll(...);
   *** setClearIconClickedListener(...);
   *** setSelection(...);
   *** setSelection(...);
   *** showKeyboard(...);
   *** updateClearImageVisibility(...);
}

-keep class com.devexpress.editors.TextEditBase
-keepclassmembers class com.devexpress.editors.TextEditBase {
   *** getStyle(...);
}

-keep class com.devexpress.editors.TimeEdit$Companion
-keepclassmembers class com.devexpress.editors.TimeEdit$Companion {
   *** getTIME_FORMAT_MODE_AUTO(...);
   *** getTIME_FORMAT_MODE_H12(...);
   *** getTIME_FORMAT_MODE_H24(...);
}

-keep class com.devexpress.editors.TimeEdit$TimeChangedListener
-keepclassmembers class com.devexpress.editors.TimeEdit$TimeChangedListener {
}

-keep class mono.com.devexpress.editors.TimeEdit_TimeChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.editors.TimeEdit_TimeChangedListenerImplementor {
}

-keep class com.devexpress.editors.TimeEdit
-keepclassmembers class com.devexpress.editors.TimeEdit {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDialogStateChangeListener(...);
   *** setDialogStateChangeListener(...);
   *** getDialogThemeResId(...);
   *** setDialogThemeResId(...);
   *** getDisabledTimeIconColor(...);
   *** setDisabledTimeIconColor(...);
   *** getDisplayText(...);
   *** getFormatter(...);
   *** setFormatter(...);
   *** getFragmentManager(...);
   *** setFragmentManager(...);
   *** getHasValue(...);
   *** getInternalEditor(...);
   *** getStyle(...);
   *** getTIME_FORMAT_MODE_AUTO(...);
   *** getTIME_FORMAT_MODE_H12(...);
   *** getTIME_FORMAT_MODE_H24(...);
   *** getTime(...);
   *** setTime(...);
   *** getTimeChangedListener(...);
   *** setTimeChangedListener(...);
   *** getTimeFormatMode(...);
   *** setTimeFormatMode(...);
   *** getTimeIcon(...);
   *** setTimeIcon(...);
   *** getTimeIconColor(...);
   *** setTimeIconColor(...);
   *** isTimeIconVisible(...);
   *** setTimeIconVisible(...);
   *** getTimeInMillis(...);
   *** setTimeInMillis(...);
   *** changeEditorInputType(...);
   *** hideTimeDialog(...);
   *** setClearIconClickedListener(...);
   *** setTimeIconClickedListener(...);
   *** showTimeDialog(...);
   *** updateClearImageVisibility(...);
}

-keep class com.devexpress.editors.UpDownIconAlignment
-keepclassmembers class com.devexpress.editors.UpDownIconAlignment {
   *** valueOf(...);
   *** values(...);
}

# ACW for DevExpress.Xamarin.Android.Grid
-keep class com.devexpress.dxgrid.BuildConfig
-keepclassmembers class com.devexpress.dxgrid.BuildConfig {
   <init>(...);
}

-keep class com.devexpress.dxgrid.providers.CheckBoxCellViewProvider
-keepclassmembers class com.devexpress.dxgrid.providers.CheckBoxCellViewProvider {
   <init>(...);
   *** requestView(...);
   *** updateAppearance(...);
   *** updateContent(...);
}

-keep class com.devexpress.dxgrid.models.ColumnSortOrder
-keepclassmembers class com.devexpress.dxgrid.models.ColumnSortOrder {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.dxgrid.models.ContentAlignment
-keepclassmembers class com.devexpress.dxgrid.models.ContentAlignment {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.dxgrid.EndlessScrollMode
-keepclassmembers class com.devexpress.dxgrid.EndlessScrollMode {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.dxgrid.models.FixedStyle
-keepclassmembers class com.devexpress.dxgrid.models.FixedStyle {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.dxgrid.GridControl
-keepclassmembers class com.devexpress.dxgrid.GridControl {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getFocusedRowIndex(...);
   *** setFocusedRowIndex(...);
   *** isInplace(...);
   *** closeInplaceEditor(...);
   *** notifyItemMoved(...);
   *** onLayout(...);
   *** openInplaceEditor(...);
   *** populateTotalSummary(...);
   *** scrollToColumn(...);
   *** scrollToRow(...);
   *** setCascadeTreeCreationEnabled(...);
   *** setCascadeUpdateEnabled(...);
   *** setFilterIconColor(...);
   *** setFilterRowHeight(...);
   *** setFilterRowVisible(...);
   *** setGridAction(...);
   *** setGridControlModel(...);
   *** setHorizontalVirtualizationEnabled(...);
   *** setLoadMoreEnabled(...);
   *** setPullToRefreshEnabled(...);
   *** setRefreshing(...);
   *** setShowFilterIcon(...);
   *** setShowFilterIcon(...);
   *** setSwipeButtons(...);
   *** setUpdateShouldRequestCustomCellStyle(...);
   *** updateColumnsLayout(...);
   *** updateRow(...);
   *** updateRows(...);
   *** updateTotalSummary(...);
}

-keep class com.devexpress.dxgrid.models.GridControlModel
-keepclassmembers class com.devexpress.dxgrid.models.GridControlModel {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAllowEndFullSwipe(...);
   *** setAllowEndFullSwipe(...);
   *** getAllowStartFullSwipe(...);
   *** setAllowStartFullSwipe(...);
   *** getBorderColor(...);
   *** setBorderColor(...);
   *** getBorderThickness(...);
   *** setBorderThickness(...);
   *** getColumnHeaderViewProvider(...);
   *** setColumnHeaderViewProvider(...);
   *** getDragPreviewTemplateProvider(...);
   *** setDragPreviewTemplateProvider(...);
   *** getFixedGroupRowHeight(...);
   *** getFixedRowHeight(...);
   *** getGridFooterHeight(...);
   *** setGridFooterHeight(...);
   *** getGridHeaderHeight(...);
   *** setGridHeaderHeight(...);
   *** getGroupHeaderAppearance(...);
   *** getGroupHeaderTextAppearance(...);
   *** getGroupRowAppearance(...);
   *** getGroupRowHeight(...);
   *** setGroupRowHeight(...);
   *** getGroupRowSummaryViewProvider(...);
   *** setGroupRowSummaryViewProvider(...);
   *** getGroupRowValueViewProvider(...);
   *** setGroupRowValueViewProvider(...);
   *** getGroupRowViewProvider(...);
   *** setGroupRowViewProvider(...);
   *** getHeaderAppearance(...);
   *** getHorizontalScrollBarVisibility(...);
   *** setHorizontalScrollBarVisibility(...);
   *** getIndicatorColor(...);
   *** setIndicatorColor(...);
   *** getIsAdvancedLayout(...);
   *** getIsCascadeTreeCreationEnabled(...);
   *** setIsCascadeTreeCreationEnabled(...);
   *** getIsCascadeUpdateEnabled(...);
   *** setIsCascadeUpdateEnabled(...);
   *** getIsGridFooterVisible(...);
   *** setIsGridFooterVisible(...);
   *** getIsGridHeaderVisible(...);
   *** setIsGridHeaderVisible(...);
   *** getIsHorizontalVirtualizationEnabled(...);
   *** setIsHorizontalVirtualizationEnabled(...);
   *** getIsLoadMoreEnabled(...);
   *** setIsLoadMoreEnabled(...);
   *** getIsPullToRefreshEnabled(...);
   *** setIsPullToRefreshEnabled(...);
   *** getRowCount(...);
   *** getRowDragPreviewShadowColor(...);
   *** setRowDragPreviewShadowColor(...);
   *** getRowHeight(...);
   *** setRowHeight(...);
   *** getTotalSummaryAppearance(...);
   *** getTotalSummaryViewProvider(...);
   *** setTotalSummaryViewProvider(...);
   *** getVerticalScrollBarVisibility(...);
   *** setVerticalScrollBarVisibility(...);
   *** getCellErrorText(...);
   *** getColumnDefinitions(...);
   *** getDisplayText(...);
   *** getDisplayText(...);
   *** getGridColumns(...);
   *** getGroupInfo(...);
   *** getRowDefinitions(...);
   *** getSwipeButtons(...);
   *** getTotalSummary(...);
   *** getValue(...);
   *** isGroupRow(...);
   *** setCellValue(...);
   *** setColumnDefinitions(...);
   *** setRowDefinitions(...);
}

-keep class com.devexpress.dxgrid.models.GridElement
-keepclassmembers class com.devexpress.dxgrid.models.GridElement {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.dxgrid.models.GridLength
-keepclassmembers class com.devexpress.dxgrid.models.GridLength {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAuto(...);
   *** setAuto(...);
   *** getMaxWidth(...);
   *** getMinWidth(...);
   *** getStar(...);
   *** setStar(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class com.devexpress.dxgrid.models.GroupInfo
-keepclassmembers class com.devexpress.dxgrid.models.GroupInfo {
   <init>(...);
   *** getIsCollapsed(...);
   *** getSummary(...);
   *** getValue(...);
}

-keep class com.devexpress.dxgrid.providers.ColumnHeaderViewProvider
-keepclassmembers class com.devexpress.dxgrid.providers.ColumnHeaderViewProvider {
}

-keep class com.devexpress.dxgrid.providers.DataProvider
-keepclassmembers class com.devexpress.dxgrid.providers.DataProvider {
}

-keep class com.devexpress.dxgrid.providers.DragPreviewTemplateProvider
-keepclassmembers class com.devexpress.dxgrid.providers.DragPreviewTemplateProvider {
}

-keep class com.devexpress.dxgrid.providers.EditViewProvider
-keepclassmembers class com.devexpress.dxgrid.providers.EditViewProvider {
}

-keep class com.devexpress.dxgrid.providers.FilterProvider
-keepclassmembers class com.devexpress.dxgrid.providers.FilterProvider {
}

-keep class com.devexpress.dxgrid.providers.GridAction
-keepclassmembers class com.devexpress.dxgrid.providers.GridAction {
}

-keep class com.devexpress.dxgrid.providers.GroupRowValueViewProvider
-keepclassmembers class com.devexpress.dxgrid.providers.GroupRowValueViewProvider {
}

-keep class com.devexpress.dxgrid.providers.GroupRowValueViewProviderBase
-keepclassmembers class com.devexpress.dxgrid.providers.GroupRowValueViewProviderBase {
}

-keep class com.devexpress.dxgrid.providers.GroupRowViewProvider
-keepclassmembers class com.devexpress.dxgrid.providers.GroupRowViewProvider {
}

-keep class com.devexpress.dxgrid.providers.GroupRowViewProviderBase
-keepclassmembers class com.devexpress.dxgrid.providers.GroupRowViewProviderBase {
}

-keep class com.devexpress.dxgrid.providers.ImageCellViewProvider
-keepclassmembers class com.devexpress.dxgrid.providers.ImageCellViewProvider {
   <init>(...);
   *** requestView(...);
   *** updateAppearance(...);
   *** updateContent(...);
}

-keep class com.devexpress.dxgrid.providers.PickerDataProvider
-keepclassmembers class com.devexpress.dxgrid.providers.PickerDataProvider {
}

-keep class com.devexpress.dxgrid.providers.SwipeButtonAction
-keepclassmembers class com.devexpress.dxgrid.providers.SwipeButtonAction {
}

-keep class com.devexpress.dxgrid.providers.SwipeButtonViewProvider
-keepclassmembers class com.devexpress.dxgrid.providers.SwipeButtonViewProvider {
}

-keep class com.devexpress.dxgrid.providers.TotalSummaryViewProvider
-keepclassmembers class com.devexpress.dxgrid.providers.TotalSummaryViewProvider {
}

-keep class com.devexpress.dxgrid.providers.TotalSummaryViewProviderBase
-keepclassmembers class com.devexpress.dxgrid.providers.TotalSummaryViewProviderBase {
}

-keep class com.devexpress.dxgrid.providers.UpdateProvider
-keepclassmembers class com.devexpress.dxgrid.providers.UpdateProvider {
}

-keep class com.devexpress.dxgrid.providers.ViewProvider
-keepclassmembers class com.devexpress.dxgrid.providers.ViewProvider {
}

-keep class com.devexpress.dxgrid.models.LineBreakMode
-keepclassmembers class com.devexpress.dxgrid.models.LineBreakMode {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.dxgrid.providers.NativeViewProviderBase
-keepclassmembers class com.devexpress.dxgrid.providers.NativeViewProviderBase {
   <init>(...);
   *** storeAsFree(...);
   *** requestView(...);
   *** updateAppearance(...);
   *** updateContent(...);
}

-keep class com.devexpress.dxgrid.providers.NativeViewProviderBase
-keepclassmembers class com.devexpress.dxgrid.providers.NativeViewProviderBase {
   *** requestView(...);
   *** updateAppearance(...);
   *** updateContent(...);
}

-keep class com.devexpress.dxgrid.models.SwipeButtonModel$Location
-keepclassmembers class com.devexpress.dxgrid.models.SwipeButtonModel$Location {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.dxgrid.models.SwipeButtonModel
-keepclassmembers class com.devexpress.dxgrid.models.SwipeButtonModel {
   <init>(...);
   *** getAction(...);
   *** getAppearance(...);
   *** getImage(...);
   *** getText(...);
   *** getViewProvider(...);
   *** getLocation(...);
}

-keep class com.devexpress.dxgrid.providers.TextCellViewProvider$Companion
-keepclassmembers class com.devexpress.dxgrid.providers.TextCellViewProvider$Companion {
}

-keep class com.devexpress.dxgrid.providers.TextCellViewProvider
-keepclassmembers class com.devexpress.dxgrid.providers.TextCellViewProvider {
   <init>(...);
   *** requestView(...);
   *** updateAppearance(...);
   *** updateContent(...);
}

-keep class com.devexpress.dxgrid.models.appearance.AppearanceBase
-keepclassmembers class com.devexpress.dxgrid.models.appearance.AppearanceBase {
   <init>(...);
   *** getAffixColor(...);
   *** setAffixColor(...);
   *** getAffixIndent(...);
   *** setAffixIndent(...);
   *** getAffixIsStrikethrough(...);
   *** setAffixIsStrikethrough(...);
   *** getAffixIsUnderlined(...);
   *** setAffixIsUnderlined(...);
   *** getAffixTextSize(...);
   *** setAffixTextSize(...);
   *** getAffixTypeface(...);
   *** setAffixTypeface(...);
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getBorderColor(...);
   *** setBorderColor(...);
   *** getBottomBorderColor(...);
   *** setBottomBorderColor(...);
   *** getCheckBoxColor(...);
   *** setCheckBoxColor(...);
   *** getCheckedCheckBoxColor(...);
   *** setCheckedCheckBoxColor(...);
   *** getErrorMinBottomOffset(...);
   *** setErrorMinBottomOffset(...);
   *** getErrorTextColor(...);
   *** setErrorTextColor(...);
   *** getErrorTextSize(...);
   *** setErrorTextSize(...);
   *** getErrorTopOffset(...);
   *** setErrorTopOffset(...);
   *** getErrorTypeface(...);
   *** setErrorTypeface(...);
   *** getFixedColumnSeparatorWidth(...);
   *** getHorizontalLineThickness(...);
   *** setHorizontalLineThickness(...);
   *** getMask(...);
   *** setMask(...);
   *** getMaskPlaceholderChar(...);
   *** setMaskPlaceholderChar(...);
   *** getPadding(...);
   *** setPadding(...);
   *** getPrefixText(...);
   *** setPrefixText(...);
   *** getSelectionColor(...);
   *** setSelectionColor(...);
   *** getSelectionTextColor(...);
   *** setSelectionTextColor(...);
   *** getSuffixText(...);
   *** setSuffixText(...);
   *** getTextColor(...);
   *** setTextColor(...);
   *** getTextIsStrikethrough(...);
   *** setTextIsStrikethrough(...);
   *** getTextIsUnderlined(...);
   *** setTextIsUnderlined(...);
   *** getTextSize(...);
   *** setTextSize(...);
   *** getTypeface(...);
   *** setTypeface(...);
   *** getVerticalLineThickness(...);
}

-keep class com.devexpress.dxgrid.models.appearance.CellAppearance
-keepclassmembers class com.devexpress.dxgrid.models.appearance.CellAppearance {
   <init>(...);
   *** getImagePadding(...);
   *** setImagePadding(...);
   *** getSwitchPadding(...);
   *** setSwitchPadding(...);
}

-keep class com.devexpress.dxgrid.models.appearance.CellAppearanceBase
-keepclassmembers class com.devexpress.dxgrid.models.appearance.CellAppearanceBase {
   <init>(...);
   *** setFixedColumnSeparatorWidth(...);
   *** setVerticalLineThickness(...);
}

-keep class com.devexpress.dxgrid.models.appearance.SwipeAppearance
-keepclassmembers class com.devexpress.dxgrid.models.appearance.SwipeAppearance {
   <init>(...);
   *** getContentAlignment(...);
   *** setContentAlignment(...);
   *** getWidth(...);
   *** setWidth(...);
}

-keep class com.devexpress.dxgrid.utils.providers.ColumnHeaderViewProviderNative
-keepclassmembers class com.devexpress.dxgrid.utils.providers.ColumnHeaderViewProviderNative {
   *** getColumnHeaderView(...);
   *** getImageSize(...);
   *** getTextGravity(...);
}

-keep class com.devexpress.dxgrid.utils.providers.GroupRowSummaryViewProviderNative
-keepclassmembers class com.devexpress.dxgrid.utils.providers.GroupRowSummaryViewProviderNative {
   <init>(...);
   *** getView(...);
   *** updateView(...);
}

-keep class com.devexpress.dxgrid.utils.providers.GroupRowValueViewProviderNative
-keepclassmembers class com.devexpress.dxgrid.utils.providers.GroupRowValueViewProviderNative {
   <init>(...);
   *** getView(...);
   *** updateView(...);
}

-keep class com.devexpress.dxgrid.utils.providers.GroupRowViewProviderBase
-keepclassmembers class com.devexpress.dxgrid.utils.providers.GroupRowViewProviderBase {
   <init>(...);
   *** getView(...);
   *** updateView(...);
}

-keep class com.devexpress.dxgrid.utils.providers.CellAppearanceProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.CellAppearanceProvider {
}

-keep class com.devexpress.dxgrid.utils.providers.GridFooterHeightProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.GridFooterHeightProvider {
}

-keep class com.devexpress.dxgrid.utils.providers.GridHeaderHeightProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.GridHeaderHeightProvider {
}

-keep class com.devexpress.dxgrid.utils.providers.GroupRowHeightProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.GroupRowHeightProvider {
}

-keep class com.devexpress.dxgrid.utils.providers.ItemHeightProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.ItemHeightProvider {
}

-keep class com.devexpress.dxgrid.utils.providers.LayoutProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.LayoutProvider {
}

-keep class com.devexpress.dxgrid.utils.providers.LoadMoreActionProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.LoadMoreActionProvider {
}

-keep class com.devexpress.dxgrid.utils.providers.OffsetProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.OffsetProvider {
}

-keep class com.devexpress.dxgrid.utils.providers.RowHeightProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.RowHeightProvider {
}

-keep class com.devexpress.dxgrid.utils.providers.SelectionProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.SelectionProvider {
}

-keep class com.devexpress.dxgrid.utils.providers.SwipeProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.SwipeProvider {
}

-keep class com.devexpress.dxgrid.utils.providers.ViewPortWidthProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.ViewPortWidthProvider {
}

-keep class com.devexpress.dxgrid.utils.providers.ServiceProvider
-keepclassmembers class com.devexpress.dxgrid.utils.providers.ServiceProvider {
   *** getAbsoluteWidth(...);
   *** getAllowEndFullSwipe(...);
   *** getAllowStartFullSwipe(...);
   *** getColumnCount(...);
   *** getFilterRowHeight(...);
   *** getFixedFooterHeight(...);
   *** getFixedGroupRowHeight(...);
   *** getFixedHeaderHeight(...);
   *** getFixedRowHeight(...);
   *** getFooterHeight(...);
   *** getGroupHeaderAppearance(...);
   *** getGroupHeaderTextAppearance(...);
   *** getGroupRowHeight(...);
   *** getHeaderAppearance(...);
   *** getHeaderHeight(...);
   *** getIndicatorColor(...);
   *** getInplaceEditingColumnIndex(...);
   *** getInplaceEditingRowIndex(...);
   *** isAutoFilterPanelVisible(...);
   *** isLocked(...);
   *** getIsRefreshing(...);
   *** isUpdateShouldRequestCustomCellStyle(...);
   *** getLeft(...);
   *** getNativeGroupHeaderAppearanceProvider(...);
   *** getRight(...);
   *** getRowCount(...);
   *** getRowHeight(...);
   *** getRowWidth(...);
   *** getRowsDefinitionsCount(...);
   *** getSwipeEnabled(...);
   *** beginUpdate(...);
   *** endUpdate(...);
   *** finishInplaceEditing(...);
   *** getCellAppearance(...);
   *** getCellErrorText(...);
   *** getCellTextAppearance(...);
   *** getColumnHeaderView(...);
   *** getDisplayText(...);
   *** getDisplayText(...);
   *** getDragPreview(...);
   *** getGridHeaderTextAppearance(...);
   *** getGroupInfo(...);
   *** getGroupRowProvider(...);
   *** getLeftSwipeButtons(...);
   *** getRightSwipeButtons(...);
   *** getSummaryAppearance(...);
   *** getSummaryTextAppearance(...);
   *** getTotalSummary(...);
   *** getTotalSummaryView(...);
   *** getValue(...);
   *** hasGroupRowSummaryTemplate(...);
   *** hasGroupRowTemplate(...);
   *** hasGroupRowValueTemplate(...);
   *** isGroupRow(...);
   *** setCellValue(...);
   *** setGridDataModel(...);
   *** setViewPortWidth(...);
   *** tap(...);
   *** updateSwipeButtons(...);
}

-keep class com.devexpress.dxgrid.models.columns.CheckBoxColumnModel
-keepclassmembers class com.devexpress.dxgrid.models.columns.CheckBoxColumnModel {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** createEditViewProvider(...);
   *** createViewProvider(...);
}

-keep class com.devexpress.dxgrid.models.columns.GridColumnModel
-keepclassmembers class com.devexpress.dxgrid.models.columns.GridColumnModel {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isAllowAutoFilter(...);
   *** setAllowAutoFilter(...);
   *** getBaseHorizontalContentAlignment(...);
   *** getCaption(...);
   *** getCellAppearance(...);
   *** setCellAppearance(...);
   *** getColumnIndex(...);
   *** setColumnIndex(...);
   *** getColumnSpan(...);
   *** setColumnSpan(...);
   *** getCustomAppearanceProvider(...);
   *** setCustomAppearanceProvider(...);
   *** getEditViewProvider(...);
   *** setEditViewProvider(...);
   *** getFieldName(...);
   *** getFixedStyle(...);
   *** getGravity(...);
   *** getGridColumnWidth(...);
   *** getHeaderCaptionLineBreakMode(...);
   *** setHeaderCaptionLineBreakMode(...);
   *** getHorizontalContentAlignment(...);
   *** setHorizontalContentAlignment(...);
   *** getRowIndex(...);
   *** setRowIndex(...);
   *** getRowSpan(...);
   *** setRowSpan(...);
   *** getSortOrder(...);
   *** getVerticalContentAlignment(...);
   *** setVerticalContentAlignment(...);
   *** getViewProvider(...);
   *** createEditViewProvider(...);
   *** createViewProvider(...);
   *** isShowFilterIcon(...);
   *** setShowFilterIcon(...);
}

-keep class com.devexpress.dxgrid.models.columns.GridColumnModel
-keepclassmembers class com.devexpress.dxgrid.models.columns.GridColumnModel {
   *** createEditViewProvider(...);
   *** createViewProvider(...);
}

-keep class com.devexpress.dxgrid.models.columns.CustomAppearanceProvider
-keepclassmembers class com.devexpress.dxgrid.models.columns.CustomAppearanceProvider {
}

-keep class com.devexpress.dxgrid.models.columns.ImageColumnModel
-keepclassmembers class com.devexpress.dxgrid.models.columns.ImageColumnModel {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** createEditViewProvider(...);
   *** createViewProvider(...);
}

-keep class com.devexpress.dxgrid.models.columns.PickerColumnModel
-keepclassmembers class com.devexpress.dxgrid.models.columns.PickerColumnModel {
   <init>(...);
   *** createEditViewProvider(...);
   *** createViewProvider(...);
}

-keep class com.devexpress.dxgrid.models.columns.TemplateColumnModel
-keepclassmembers class com.devexpress.dxgrid.models.columns.TemplateColumnModel {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isHasDisplayTemplate(...);
   *** createEditViewProvider(...);
   *** createViewProvider(...);
}

-keep class com.devexpress.dxgrid.models.columns.TextColumnModel
-keepclassmembers class com.devexpress.dxgrid.models.columns.TextColumnModel {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** createEditViewProvider(...);
   *** createViewProvider(...);
}

-keep class com.devexpress.dxgrid.models.columns.TextColumnModelBase
-keepclassmembers class com.devexpress.dxgrid.models.columns.TextColumnModelBase {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLineBreakMode(...);
   *** setLineBreakMode(...);
}

-keep class com.devexpress.dxgrid.models.columns.TextColumnModelBase
-keepclassmembers class com.devexpress.dxgrid.models.columns.TextColumnModelBase {
   *** createEditViewProvider(...);
   *** createViewProvider(...);
}

-keep class com.devexpress.dxgrid.editform.GridEditFormItemView
-keepclassmembers class com.devexpress.dxgrid.editform.GridEditFormItemView {
   <init>(...);
   *** getValue(...);
   *** applyChanges(...);
   *** onLayout(...);
   *** updateValidation(...);
}

-keep class com.devexpress.dxgrid.editform.GridEditFormView
-keepclassmembers class com.devexpress.dxgrid.editform.GridEditFormView {
   <init>(...);
   *** commit(...);
   *** updateValidation(...);
}

-keep class com.devexpress.dxgrid.editform.GridEditFormViewInfo
-keepclassmembers class com.devexpress.dxgrid.editform.GridEditFormViewInfo {
   <init>(...);
   *** getFieldCaption(...);
   *** getGridColumnModel(...);
   *** isReadonly(...);
}

-keep class com.devexpress.dxgrid.editform.TouchCallback
-keepclassmembers class com.devexpress.dxgrid.editform.TouchCallback {
}

-keep class com.devexpress.dxgrid.appearance.GridHeaderTextAppearance
-keepclassmembers class com.devexpress.dxgrid.appearance.GridHeaderTextAppearance {
   <init>(...);
   *** getAffixColor(...);
   *** getAffixIndent(...);
   *** getAffixIsStrikethrough(...);
   *** getAffixIsUnderlined(...);
   *** getAffixTextSize(...);
   *** getAffixTypeface(...);
   *** getMask(...);
   *** getMaskPlaceholderChar(...);
   *** getPrefixText(...);
   *** getSelectionTextColor(...);
   *** getSuffixText(...);
   *** getTextColor(...);
   *** getTextIsStrikethrough(...);
   *** getTextIsUnderlined(...);
   *** getTextSize(...);
   *** getTypeface(...);
   *** initialize(...);
}

-keep class com.devexpress.dxgrid.appearance.GridTextColumnTextAppearance
-keepclassmembers class com.devexpress.dxgrid.appearance.GridTextColumnTextAppearance {
   <init>(...);
   *** getAffixColor(...);
   *** getAffixIndent(...);
   *** getAffixIsStrikethrough(...);
   *** getAffixIsUnderlined(...);
   *** getAffixTextSize(...);
   *** getAffixTypeface(...);
   *** getMask(...);
   *** getMaskPlaceholderChar(...);
   *** getPrefixText(...);
   *** getSelectionTextColor(...);
   *** getSuffixText(...);
   *** getTextColor(...);
   *** getTextIsStrikethrough(...);
   *** getTextIsUnderlined(...);
   *** getTextSize(...);
   *** getTypeface(...);
   *** initialize(...);
}

-keep class com.devexpress.dxgrid.appearance.GroupRowCellContainerAppearance
-keepclassmembers class com.devexpress.dxgrid.appearance.GroupRowCellContainerAppearance {
   <init>(...);
   *** getPadding(...);
}

-keep class com.devexpress.dxgrid.appearance.GridCellContainerAppearance
-keepclassmembers class com.devexpress.dxgrid.appearance.GridCellContainerAppearance {
}

-keep class com.devexpress.dxgrid.appearance.GridTextAppearance
-keepclassmembers class com.devexpress.dxgrid.appearance.GridTextAppearance {
}

-keep class com.devexpress.dxgrid.appearance.ImageCellContainerAppearance
-keepclassmembers class com.devexpress.dxgrid.appearance.ImageCellContainerAppearance {
   <init>(...);
   *** getPadding(...);
}

-keep class com.devexpress.dxgrid.appearance.PaddingCellContainerAppearance
-keepclassmembers class com.devexpress.dxgrid.appearance.PaddingCellContainerAppearance {
   <init>(...);
   *** getBackgroundColor(...);
   *** getBorderColor(...);
   *** getBottomBorderColor(...);
   *** getFixedColumnSeparatorWidth(...);
   *** getHorizontalLineThickness(...);
   *** getSelectionColor(...);
   *** getVerticalLineThickness(...);
   *** setCellAppearance(...);
   *** getPadding(...);
}

-keep class com.devexpress.dxgrid.appearance.PaddingCellContainerAppearance
-keepclassmembers class com.devexpress.dxgrid.appearance.PaddingCellContainerAppearance {
   *** getPadding(...);
}

-keep class com.devexpress.dxgrid.appearance.SwitchCellContainerAppearance
-keepclassmembers class com.devexpress.dxgrid.appearance.SwitchCellContainerAppearance {
   <init>(...);
   *** getPadding(...);
}

-keep class com.devexpress.dxgrid.appearance.TemplateCellContainerAppearance
-keepclassmembers class com.devexpress.dxgrid.appearance.TemplateCellContainerAppearance {
   <init>(...);
   *** getPadding(...);
}

-keep class com.devexpress.dxgrid.appearance.wrappers.CustomGridCellContainerAppearanceWrapper
-keepclassmembers class com.devexpress.dxgrid.appearance.wrappers.CustomGridCellContainerAppearanceWrapper {
   <init>(...);
   *** getBackgroundColor(...);
   *** getBorderColor(...);
   *** getBottomBorderColor(...);
   *** getFixedColumnSeparatorWidth(...);
   *** getHorizontalLineThickness(...);
   *** getPadding(...);
   *** getSelectionColor(...);
   *** getVerticalLineThickness(...);
}

-keep class com.devexpress.dxgrid.appearance.wrappers.CustomGridTextAppearanceWrapper
-keepclassmembers class com.devexpress.dxgrid.appearance.wrappers.CustomGridTextAppearanceWrapper {
   <init>(...);
   *** getAffixColor(...);
   *** getAffixIndent(...);
   *** getAffixIsStrikethrough(...);
   *** getAffixIsUnderlined(...);
   *** getAffixTextSize(...);
   *** getAffixTypeface(...);
   *** getMask(...);
   *** getMaskPlaceholderChar(...);
   *** getPrefixText(...);
   *** getSelectionTextColor(...);
   *** getSuffixText(...);
   *** getTextColor(...);
   *** getTextIsStrikethrough(...);
   *** getTextIsUnderlined(...);
   *** getTextSize(...);
   *** getTypeface(...);
}

-keep class com.devexpress.dxgrid.appearance.visitors.GridCellContainerAppearanceVisitor
-keepclassmembers class com.devexpress.dxgrid.appearance.visitors.GridCellContainerAppearanceVisitor {
   <init>(...);
   *** getAppearance(...);
   *** setAppearanceBase(...);
   *** visit(...);
   *** visit(...);
   *** visit(...);
   *** visit(...);
   *** visit(...);
}

-keep class com.devexpress.dxgrid.appearance.visitors.GridTextAppearanceVisitor
-keepclassmembers class com.devexpress.dxgrid.appearance.visitors.GridTextAppearanceVisitor {
   <init>(...);
   *** getTextAppearance(...);
   *** setTextAppearance(...);
   *** visit(...);
   *** visit(...);
   *** visit(...);
   *** visit(...);
   *** visit(...);
}

-keep class com.devexpress.dxgrid.appearance.providers.GroupHeaderAppearanceProvider
-keepclassmembers class com.devexpress.dxgrid.appearance.providers.GroupHeaderAppearanceProvider {
}

-keep class com.devexpress.dxgrid.appearance.providers.HeaderAppearanceProvider
-keepclassmembers class com.devexpress.dxgrid.appearance.providers.HeaderAppearanceProvider {
}

-keep class com.devexpress.dxgrid.appearance.providers.IndicatorAppearanceProvider
-keepclassmembers class com.devexpress.dxgrid.appearance.providers.IndicatorAppearanceProvider {
}

-keep class com.devexpress.dxgrid.appearance.providers.TotalSummaryAppearanceProvider
-keepclassmembers class com.devexpress.dxgrid.appearance.providers.TotalSummaryAppearanceProvider {
}

# ACW for DevExpress.Xamarin.Android.Navigation
-keep class com.devexpress.navigation.BuildConfig
-keepclassmembers class com.devexpress.navigation.BuildConfig {
   <init>(...);
}

-keep class com.devexpress.navigation.DrawerView$OnDrawerStateChangedListener
-keepclassmembers class com.devexpress.navigation.DrawerView$OnDrawerStateChangedListener {
}

-keep class mono.com.devexpress.navigation.DrawerView_OnDrawerStateChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.navigation.DrawerView_OnDrawerStateChangedListenerImplementor {
}

-keep class com.devexpress.navigation.DrawerView
-keepclassmembers class com.devexpress.navigation.DrawerView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getAnimationEnabled(...);
   *** setAnimationEnabled(...);
   *** getAreGesturesEnabled(...);
   *** setAreGesturesEnabled(...);
   *** getDrawerBackgroundColor(...);
   *** setDrawerBackgroundColor(...);
   *** getDrawerContentHeight(...);
   *** setDrawerContentHeight(...);
   *** getDrawerFooterContentHeight(...);
   *** setDrawerFooterContentHeight(...);
   *** getDrawerHeaderContentHeight(...);
   *** setDrawerHeaderContentHeight(...);
   *** getDrawerHeight(...);
   *** setDrawerHeight(...);
   *** getDrawerPosition(...);
   *** setDrawerPosition(...);
   *** getDrawerShadowColor(...);
   *** setDrawerShadowColor(...);
   *** getDrawerShadowHeight(...);
   *** setDrawerShadowHeight(...);
   *** getDrawerShadowRadius(...);
   *** setDrawerShadowRadius(...);
   *** getDrawerTransition(...);
   *** setDrawerTransition(...);
   *** getDrawerWidth(...);
   *** setDrawerWidth(...);
   *** getIsDrawerShadowVisible(...);
   *** setIsDrawerShadowVisible(...);
   *** getIsOpened(...);
   *** setIsOpened(...);
   *** getIsScrimEnabled(...);
   *** setIsScrimEnabled(...);
   *** getScrimColor(...);
   *** setScrimColor(...);
   *** getScrimOpacity(...);
   *** setScrimOpacity(...);
   *** addOnDrawerStateChangedListener(...);
   *** clearOnDrawerStateChangedListener(...);
   *** onLayout(...);
   *** removeOnDrawerStateChangedListener(...);
}

-keep class com.devexpress.navigation.PagerControl
-keepclassmembers class com.devexpress.navigation.PagerControl {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getAnimateScrollEnabled(...);
   *** setAnimateScrollEnabled(...);
   *** getLoopEnabled(...);
   *** setLoopEnabled(...);
   *** getPagerOrientation(...);
   *** setPagerOrientation(...);
   *** getSelectedPage(...);
   *** setSelectedPage(...);
   *** getSwipeEnabled(...);
   *** setSwipeEnabled(...);
   *** clear(...);
   *** onLayout(...);
}

-keep class com.devexpress.navigation.TabControl$OnTabItemSelectedListener
-keepclassmembers class com.devexpress.navigation.TabControl$OnTabItemSelectedListener {
}

-keep class mono.com.devexpress.navigation.TabControl_OnTabItemSelectedListenerImplementor
-keepclassmembers class mono.com.devexpress.navigation.TabControl_OnTabItemSelectedListenerImplementor {
}

-keep class com.devexpress.navigation.TabControl$OnTabItemTappedListener
-keepclassmembers class com.devexpress.navigation.TabControl$OnTabItemTappedListener {
}

-keep class mono.com.devexpress.navigation.TabControl_OnTabItemTappedListenerImplementor
-keepclassmembers class mono.com.devexpress.navigation.TabControl_OnTabItemTappedListenerImplementor {
}

-keep class com.devexpress.navigation.TabControl
-keepclassmembers class com.devexpress.navigation.TabControl {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getAppearance(...);
   *** setAppearance(...);
   *** getHeaderPanelContentAlignment(...);
   *** setHeaderPanelContentAlignment(...);
   *** getHeaderPanelHeight(...);
   *** setHeaderPanelHeight(...);
   *** getHeaderPanelMaxHeight(...);
   *** setHeaderPanelMaxHeight(...);
   *** getHeaderPanelMaxWidth(...);
   *** setHeaderPanelMaxWidth(...);
   *** getHeaderPanelMinHeight(...);
   *** setHeaderPanelMinHeight(...);
   *** getHeaderPanelMinWidth(...);
   *** setHeaderPanelMinWidth(...);
   *** getHeaderPanelPosition(...);
   *** setHeaderPanelPosition(...);
   *** getHeaderPanelWidth(...);
   *** setHeaderPanelWidth(...);
   *** getHeaderSettings(...);
   *** getIndicatorScrollAlignment(...);
   *** setIndicatorScrollAlignment(...);
   *** getItemsCount(...);
   *** getLoopEnabled(...);
   *** setLoopEnabled(...);
   *** getScrollAnimationEnabled(...);
   *** setScrollAnimationEnabled(...);
   *** getScrollDirection(...);
   *** setScrollDirection(...);
   *** getSelectedItem(...);
   *** setSelectedItem(...);
   *** getSelectedItemIndex(...);
   *** setSelectedItemIndex(...);
   *** getSwipeEnabled(...);
   *** setSwipeEnabled(...);
   *** addOnTabItemSelectedListener(...);
   *** addOnTabItemTappedListener(...);
   *** clearOnTabItemSelectedListener(...);
   *** clearOnTabItemTappedListener(...);
   *** onLayout(...);
   *** removeOnTabItemSelectedListener(...);
   *** removeOnTabItemTappedListener(...);
}

-keep class com.devexpress.navigation.TabsView$OnTabSelectedListener
-keepclassmembers class com.devexpress.navigation.TabsView$OnTabSelectedListener {
}

-keep class mono.com.devexpress.navigation.TabsView_OnTabSelectedListenerImplementor
-keepclassmembers class mono.com.devexpress.navigation.TabsView_OnTabSelectedListenerImplementor {
}

-keep class com.devexpress.navigation.TabsView$OnTabTappedListener
-keepclassmembers class com.devexpress.navigation.TabsView$OnTabTappedListener {
}

-keep class mono.com.devexpress.navigation.TabsView_OnTabTappedListenerImplementor
-keepclassmembers class mono.com.devexpress.navigation.TabsView_OnTabTappedListenerImplementor {
}

-keep class com.devexpress.navigation.TabsView$TabsLayout
-keepclassmembers class com.devexpress.navigation.TabsView$TabsLayout {
   <init>(...);
   *** createLayout(...);
   *** onLayout(...);
}

-keep class com.devexpress.navigation.TabsView
-keepclassmembers class com.devexpress.navigation.TabsView {
   <init>(...);
   *** getAnimateIndicatorEnabled(...);
   *** setAnimateIndicatorEnabled(...);
   *** getElementSpacing(...);
   *** getHeaderSettings(...);
   *** getHorizontalLayoutHeight(...);
   *** setHorizontalLayoutHeight(...);
   *** getIndicatorScrollAlignment(...);
   *** setIndicatorScrollAlignment(...);
   *** isHorizontal(...);
   *** getMaxHeight(...);
   *** setMaxHeight(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** getMinHeight(...);
   *** setMinHeight(...);
   *** getMinWidth(...);
   *** setMinWidth(...);
   *** getPanelCrossSize(...);
   *** getPosition(...);
   *** setPosition(...);
   *** getScrollView(...);
   *** getScrollViewPosition(...);
   *** getSelectedItemIndex(...);
   *** setSelectedItemIndex(...);
   *** getTabItemModels(...);
   *** getTabItems(...);
   *** getTabsAlignment(...);
   *** setTabsAlignment(...);
   *** getTabsCount(...);
   *** getVerticalLayoutWidth(...);
   *** setVerticalLayoutWidth(...);
   *** addOnTabSelectedListener(...);
   *** addOnTabTappedListener(...);
   *** clearOnTabSelectedListener(...);
   *** clearOnTabTappedListener(...);
   *** getLayoutRect(...);
   *** getLengthForIndicator(...);
   *** getSelectedItem(...);
   *** getTabsLayout(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** removeOnTabSelectedListener(...);
   *** removeOnTabTappedListener(...);
   *** scrollToSelectedItem(...);
   *** setAdapter(...);
   *** setAppearance(...);
   *** setSelectedItem(...);
   *** setViewPort(...);
}

-keep class com.devexpress.navigation.tabs.views.TabItemView
-keepclassmembers class com.devexpress.navigation.tabs.views.TabItemView {
   <init>(...);
   *** getHeaderItemAppearance(...);
   *** setHeaderItemAppearance(...);
   *** getModel(...);
   *** deselect(...);
   *** initOwnAppearance(...);
   *** select(...);
   *** setModel(...);
}

-keep class com.devexpress.navigation.tabs.views.TextViewContainer
-keepclassmembers class com.devexpress.navigation.tabs.views.TextViewContainer {
   <init>(...);
   *** getText(...);
   *** setText(...);
   *** getTextColors(...);
   *** getTypeface(...);
   *** setTypeface(...);
   *** setBounds(...);
   *** setTextColor(...);
   *** setTextSize(...);
}

-keep class com.devexpress.navigation.tabs.utils.MeasuredSize
-keepclassmembers class com.devexpress.navigation.tabs.utils.MeasuredSize {
   <init>(...);
   *** getHeight(...);
   *** getWidth(...);
   *** setSize(...);
}

-keep class com.devexpress.navigation.tabs.utils.PositionHelper
-keepclassmembers class com.devexpress.navigation.tabs.utils.PositionHelper {
   <init>(...);
   *** getOrientationByDirection(...);
   *** isLeftOrRightPosition(...);
   *** isReverseDirection(...);
   *** needChangeViewsOrder(...);
}

-keep class com.devexpress.navigation.tabs.utils.SizeConverter
-keepclassmembers class com.devexpress.navigation.tabs.utils.SizeConverter {
   <init>(...);
   *** convertDpToPx(...);
   *** convertDpToPx(...);
   *** convertPxToDp(...);
   *** convertPxToDp(...);
   *** convertSize(...);
   *** convertSpToPx(...);
}

-keep class com.devexpress.navigation.tabs.utils.calculators.ActiveIndicatorScrollingCalculator
-keepclassmembers class com.devexpress.navigation.tabs.utils.calculators.ActiveIndicatorScrollingCalculator {
   <init>(...);
   *** getIndicatorOffset(...);
   *** getIndicatorLength(...);
   *** update(...);
}

-keep class com.devexpress.navigation.tabs.utils.calculators.HeaderItemSizeCalculator
-keepclassmembers class com.devexpress.navigation.tabs.utils.calculators.HeaderItemSizeCalculator {
   <init>(...);
   *** getActualViewPortHeight(...);
   *** getActualViewPortWidth(...);
   *** getHeaderPanelMainSize(...);
   *** isMainSizeFitToViewPort(...);
   *** getViewPortHeight(...);
   *** getViewPortWidth(...);
   *** calculateCrossSize(...);
   *** calculateHeaderItemMainSizes(...);
   *** checkSizeChanged(...);
   *** getHeaderItemSize(...);
   *** headerItemsUpdated(...);
   *** needRecalculate(...);
   *** setCrossHeight(...);
   *** setCrossWidth(...);
   *** setOrientation(...);
   *** setSpacing(...);
   *** setViewPort(...);
}

-keep class com.devexpress.navigation.tabs.utils.calculators.TabPanelScrollingCalculator
-keepclassmembers class com.devexpress.navigation.tabs.utils.calculators.TabPanelScrollingCalculator {
   <init>(...);
   *** getCenterTargetScroll(...);
   *** getEdgeTargetScroll(...);
   *** update(...);
}

-keep class com.devexpress.navigation.tabs.models.CancelEventArgs
-keepclassmembers class com.devexpress.navigation.tabs.models.CancelEventArgs {
   <init>(...);
   <init>(...);
   *** getCancel(...);
   *** setCancel(...);
}

-keep class com.devexpress.navigation.tabs.models.HeaderItemAppearance
-keepclassmembers class com.devexpress.navigation.tabs.models.HeaderItemAppearance {
   <init>(...);
   *** getActualPadding(...);
   *** getIconColor(...);
   *** setIconColor(...);
   *** getItemHeaderColor(...);
   *** setItemHeaderColor(...);
   *** getItemHeaderFont(...);
   *** setItemHeaderFont(...);
   *** getItemHeaderFontSize(...);
   *** setItemHeaderFontSize(...);
   *** getItemHeaderIconSpacing(...);
   *** setItemHeaderIconSpacing(...);
   *** getItemHeaderPadding(...);
   *** setItemHeaderPadding(...);
   *** getSelectedIconColor(...);
   *** setSelectedIconColor(...);
   *** getSelectedItemHeaderBackgroundColor(...);
   *** setSelectedItemHeaderBackgroundColor(...);
   *** getSelectedItemHeaderColor(...);
   *** setSelectedItemHeaderColor(...);
   *** addOnAppearanceProperyChangeListener(...);
   *** clearOnAppearanceProperyChangeListener(...);
   *** createDefaultPadding(...);
   *** raiseOnItemPaddingPropertyChanged(...);
   *** raiseOnItemSelectedPropertyChanged(...);
   *** raiseOnItemSpacingPropertyChanged(...);
   *** raiseOnItemStylePropertyChanged(...);
   *** removeOnAppearanceProperyChangeListener(...);
}

-keep class com.devexpress.navigation.tabs.models.HeaderItemModel$OnHeaderChangeListener
-keepclassmembers class com.devexpress.navigation.tabs.models.HeaderItemModel$OnHeaderChangeListener {
}

-keep class com.devexpress.navigation.tabs.models.HeaderItemModel
-keepclassmembers class com.devexpress.navigation.tabs.models.HeaderItemModel {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getActualHeaderVisibleElements(...);
   *** getActualHeight(...);
   *** getActualIconPosition(...);
   *** getActualWidth(...);
   *** getCommonSettings(...);
   *** setCommonSettings(...);
   *** getHeaderIconPosition(...);
   *** setHeaderIconPosition(...);
   *** getHeaderItemAppearance(...);
   *** setHeaderItemAppearance(...);
   *** getHeaderVisibleElements(...);
   *** setHeaderVisibleElements(...);
   *** getIcon(...);
   *** setIcon(...);
   *** getText(...);
   *** setText(...);
   *** getView(...);
   *** setView(...);
   *** addListener(...);
   *** changeTabControlAppearance(...);
   *** clearListeners(...);
   *** isIconVisible(...);
   *** isTextVisible(...);
   *** removeListener(...);
   *** setHeaderHeight(...);
   *** setHeaderWidth(...);
}

-keep class com.devexpress.navigation.tabs.models.HeaderSingleItemAppearance
-keepclassmembers class com.devexpress.navigation.tabs.models.HeaderSingleItemAppearance {
   <init>(...);
   *** getCommonAppearance(...);
   *** setCommonAppearance(...);
   *** needPaintIcon(...);
   *** resetIconColor(...);
   *** resetItemHeaderColor(...);
   *** resetItemHeaderFont(...);
   *** resetItemHeaderFontSize(...);
   *** resetItemHeaderIconSpacing(...);
   *** resetSelectedIconColor(...);
   *** resetSelectedItemHeaderBackgroundColor(...);
   *** resetSelectedItemHeaderColor(...);
}

-keep class com.devexpress.navigation.tabs.models.IReadonlyHeaderItemModel
-keepclassmembers class com.devexpress.navigation.tabs.models.IReadonlyHeaderItemModel {
}

-keep class com.devexpress.navigation.tabs.models.Padding$OnPaddingChangeListener
-keepclassmembers class com.devexpress.navigation.tabs.models.Padding$OnPaddingChangeListener {
}

-keep class mono.com.devexpress.navigation.tabs.models.Padding_OnPaddingChangeListenerImplementor
-keepclassmembers class mono.com.devexpress.navigation.tabs.models.Padding_OnPaddingChangeListenerImplementor {
}

-keep class com.devexpress.navigation.tabs.models.Padding
-keepclassmembers class com.devexpress.navigation.tabs.models.Padding {
   <init>(...);
   <init>(...);
   *** getBottom(...);
   *** setBottom(...);
   *** getLeft(...);
   *** setLeft(...);
   *** getRight(...);
   *** setRight(...);
   *** getTop(...);
   *** setTop(...);
   *** setHorizontal(...);
   *** setPadding(...);
   *** setPaddingChangeListener(...);
   *** setVertical(...);
}

-keep class com.devexpress.navigation.tabs.models.SelectedStyleProperty
-keepclassmembers class com.devexpress.navigation.tabs.models.SelectedStyleProperty {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.navigation.tabs.models.StyleProperty
-keepclassmembers class com.devexpress.navigation.tabs.models.StyleProperty {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.navigation.tabs.models.TabItemSettings$OnSettingsChangeListener
-keepclassmembers class com.devexpress.navigation.tabs.models.TabItemSettings$OnSettingsChangeListener {
}

-keep class mono.com.devexpress.navigation.tabs.models.TabItemSettings_OnSettingsChangeListenerImplementor
-keepclassmembers class mono.com.devexpress.navigation.tabs.models.TabItemSettings_OnSettingsChangeListenerImplementor {
}

-keep class com.devexpress.navigation.tabs.models.TabItemSettings
-keepclassmembers class com.devexpress.navigation.tabs.models.TabItemSettings {
   <init>(...);
   *** getItemHeaderHeight(...);
   *** setItemHeaderHeight(...);
   *** getItemHeaderIconPosition(...);
   *** setItemHeaderIconPosition(...);
   *** getItemHeaderVisibleElements(...);
   *** setItemHeaderVisibleElements(...);
   *** getItemHeaderWidth(...);
   *** setItemHeaderWidth(...);
   *** addListener(...);
   *** clearListeners(...);
   *** removeListener(...);
}

-keep class com.devexpress.navigation.tabs.models.TabSize$Companion
-keepclassmembers class com.devexpress.navigation.tabs.models.TabSize$Companion {
   *** Auto(...);
   *** Auto(...);
   *** Fixed(...);
   *** Fixed(...);
   *** Star(...);
   *** Star(...);
   *** Star(...);
   *** Star(...);
   *** createDefaultHorizontalTabSize(...);
   *** createDefaultVerticalTabSize(...);
}

-keep class com.devexpress.navigation.tabs.models.TabSize
-keepclassmembers class com.devexpress.navigation.tabs.models.TabSize {
   <init>(...);
   <init>(...);
   *** isAuto(...);
   *** isStar(...);
   *** getMaxSize(...);
   *** getMinSize(...);
   *** getSize(...);
   *** setSize(...);
   *** Auto(...);
   *** Auto(...);
   *** Fixed(...);
   *** Fixed(...);
   *** Star(...);
   *** Star(...);
   *** Star(...);
   *** Star(...);
   *** createDefaultHorizontalTabSize(...);
   *** createDefaultVerticalTabSize(...);
}

-keep class com.devexpress.navigation.tabs.models.TabSizeInPixels
-keepclassmembers class com.devexpress.navigation.tabs.models.TabSizeInPixels {
   <init>(...);
   *** isAuto(...);
   *** isStar(...);
   *** getMaxSize(...);
   *** getMinSize(...);
   *** getSize(...);
   *** setSize(...);
}

-keep class com.devexpress.navigation.tabcontrol.ITabControlAdapter$ItemsChangedListener
-keepclassmembers class com.devexpress.navigation.tabcontrol.ITabControlAdapter$ItemsChangedListener {
}

-keep class mono.com.devexpress.navigation.tabcontrol.ITabControlAdapter_ItemsChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.navigation.tabcontrol.ITabControlAdapter_ItemsChangedListenerImplementor {
}

-keep class com.devexpress.navigation.tabcontrol.ITabControlAdapter
-keepclassmembers class com.devexpress.navigation.tabcontrol.ITabControlAdapter {
}

-keep class com.devexpress.navigation.tabcontrol.TabControlAppearance$OnAppearancePropertyChangeListener
-keepclassmembers class com.devexpress.navigation.tabcontrol.TabControlAppearance$OnAppearancePropertyChangeListener {
}

-keep class mono.com.devexpress.navigation.tabcontrol.TabControlAppearance_OnAppearancePropertyChangeListenerImplementor
-keepclassmembers class mono.com.devexpress.navigation.tabcontrol.TabControlAppearance_OnAppearancePropertyChangeListenerImplementor {
}

-keep class com.devexpress.navigation.tabcontrol.TabControlAppearance
-keepclassmembers class com.devexpress.navigation.tabcontrol.TabControlAppearance {
   <init>(...);
   *** getHeaderIndicatorColor(...);
   *** setHeaderIndicatorColor(...);
   *** getHeaderIndicatorHeight(...);
   *** setHeaderIndicatorHeight(...);
   *** getHeaderIndicatorVisibility(...);
   *** setHeaderIndicatorVisibility(...);
   *** getHeaderItemAppearance(...);
   *** setHeaderItemAppearance(...);
   *** getHeaderPanelBackgroundColor(...);
   *** setHeaderPanelBackgroundColor(...);
   *** getHeaderPanelBorderColor(...);
   *** setHeaderPanelBorderColor(...);
   *** getHeaderPanelBorderHeight(...);
   *** setHeaderPanelBorderHeight(...);
   *** getHeaderPanelBorderVisibility(...);
   *** setHeaderPanelBorderVisibility(...);
   *** getHeaderPanelIndent(...);
   *** setHeaderPanelIndent(...);
   *** getHeaderPanelItemSpacing(...);
   *** setHeaderPanelItemSpacing(...);
   *** getHeaderPanelShadowColorStart(...);
   *** setHeaderPanelShadowColorStart(...);
   *** getHeaderPanelShadowHeight(...);
   *** setHeaderPanelShadowHeight(...);
   *** getHeaderPanelShadowRadius(...);
   *** setHeaderPanelShadowRadius(...);
   *** getHeaderPanelShadowVisibility(...);
   *** setHeaderPanelShadowVisibility(...);
   *** addOnAppearanceProperyChangeListener(...);
   *** clearOnAppearanceProperyChangeListener(...);
   *** removeOnAppearanceProperyChangeListener(...);
}

-keep class com.devexpress.navigation.pagercontrol.MyPagerControl
-keepclassmembers class com.devexpress.navigation.pagercontrol.MyPagerControl {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** moveToNextPage(...);
   *** moveToPrevPage(...);
   *** recreateLayout(...);
}

-keep class com.devexpress.navigation.pagercontrol.OnSwipeTouchListener
-keepclassmembers class com.devexpress.navigation.pagercontrol.OnSwipeTouchListener {
   <init>(...);
   *** onSwipeBottom(...);
   *** onSwipeLeft(...);
   *** onSwipeRight(...);
   *** onSwipeTop(...);
   *** onTouch(...);
}

-keep class com.devexpress.navigation.pagercontrol.PagerControlGestureListener
-keepclassmembers class com.devexpress.navigation.pagercontrol.PagerControlGestureListener {
   <init>(...);
}

-keep class com.devexpress.navigation.navigationdrawer.ContentView
-keepclassmembers class com.devexpress.navigation.navigationdrawer.ContentView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** onLayout(...);
   *** setContent(...);
}

-keep class com.devexpress.navigation.navigationdrawer.DrawerInnerContainer$IOnDrawListener
-keepclassmembers class com.devexpress.navigation.navigationdrawer.DrawerInnerContainer$IOnDrawListener {
}

-keep class mono.com.devexpress.navigation.navigationdrawer.DrawerInnerContainer_IOnDrawListenerImplementor
-keepclassmembers class mono.com.devexpress.navigation.navigationdrawer.DrawerInnerContainer_IOnDrawListenerImplementor {
}

-keep class com.devexpress.navigation.navigationdrawer.DrawerInnerContainer
-keepclassmembers class com.devexpress.navigation.navigationdrawer.DrawerInnerContainer {
   <init>(...);
   <init>(...);
   <init>(...);
   *** setOnDrawListener(...);
}

-keep class com.devexpress.navigation.navigationdrawer.DrawerSizeCalculator
-keepclassmembers class com.devexpress.navigation.navigationdrawer.DrawerSizeCalculator {
   <init>(...);
   *** calculateMaxSize(...);
   *** calculateSize(...);
   *** correctItemSize(...);
   *** correctItemSize(...);
   *** setSize(...);
}

-keep class com.devexpress.navigation.navigationdrawer.DrawerState
-keepclassmembers class com.devexpress.navigation.navigationdrawer.DrawerState {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.navigation.navigationdrawer.DrawerViewAdapter
-keepclassmembers class com.devexpress.navigation.navigationdrawer.DrawerViewAdapter {
   <init>(...);
   *** addContentChangedListener(...);
   *** clearContentChangedListener(...);
   *** getDrawerContent(...);
   *** getDrawerFooterContent(...);
   *** getDrawerHeaderContent(...);
   *** getMainContent(...);
   *** removeContentChangedListener(...);
   *** setDrawerContent(...);
   *** setDrawerFooterContent(...);
   *** setDrawerHeaderContent(...);
   *** setMainContent(...);
   *** setMainContentPage(...);
}

-keep class com.devexpress.navigation.navigationdrawer.DXDrawer
-keepclassmembers class com.devexpress.navigation.navigationdrawer.DXDrawer {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerContentHeight(...);
   *** setDrawerContentHeight(...);
   *** getDrawerFooterContentHeight(...);
   *** setDrawerFooterContentHeight(...);
   *** getDrawerHeaderContentHeight(...);
   *** setDrawerHeaderContentHeight(...);
   *** getDrawerSize(...);
   *** setDrawerSize(...);
   *** getRealHeight(...);
   *** getRealWidth(...);
   *** getChildScrollableView(...);
   *** onLayout(...);
   *** refill(...);
   *** refreshChildScrollableView(...);
   *** setPosition(...);
   *** setSizeCalculator(...);
   *** setViewPort(...);
}

-keep class com.devexpress.navigation.navigationdrawer.IDrawerViewAdapter$ContentChangedListener
-keepclassmembers class com.devexpress.navigation.navigationdrawer.IDrawerViewAdapter$ContentChangedListener {
}

-keep class mono.com.devexpress.navigation.navigationdrawer.IDrawerViewAdapter_ContentChangedListenerImplementor
-keepclassmembers class mono.com.devexpress.navigation.navigationdrawer.IDrawerViewAdapter_ContentChangedListenerImplementor {
}

-keep class com.devexpress.navigation.navigationdrawer.IDrawerViewAdapter
-keepclassmembers class com.devexpress.navigation.navigationdrawer.IDrawerViewAdapter {
}

-keep class com.devexpress.navigation.navigationdrawer.StarSizeCalculator
-keepclassmembers class com.devexpress.navigation.navigationdrawer.StarSizeCalculator {
   <init>(...);
}

-keep class com.devexpress.navigation.navigationdrawer.Transition
-keepclassmembers class com.devexpress.navigation.navigationdrawer.Transition {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.navigation.navigationdrawer.YViewCache
-keepclassmembers class com.devexpress.navigation.navigationdrawer.YViewCache {
   <init>(...);
   *** Add(...);
   *** Clear(...);
   *** Empty(...);
   *** getView(...);
   *** refreshY(...);
}

-keep class com.devexpress.navigation.navigationdrawer.transitionstrategy.BaseTransitionStrategy
-keepclassmembers class com.devexpress.navigation.navigationdrawer.transitionstrategy.BaseTransitionStrategy {
   *** getAnimationEnabled(...);
   *** setAnimationEnabled(...);
   *** getClosedRect(...);
   *** getDraggableView(...);
   *** getDraggableViewRect(...);
   *** getDrawerVisibleRegion(...);
   *** getIsOpened(...);
   *** setIsOpened(...);
   *** isStateChanged(...);
   *** getOpenedRect(...);
   *** RaiseDrawerStateChanged(...);
   *** changeDrawerState(...);
   *** clampViewPositionHorizontal(...);
   *** clampViewPositionVertical(...);
   *** createParentContentRect(...);
   *** createSidePanelRect(...);
   *** createSlider(...);
   *** layout(...);
   *** onViewPositionChanged(...);
   *** onViewReleased(...);
   *** updatePosition(...);
}

-keep class com.devexpress.navigation.navigationdrawer.transitionstrategy.BaseTransitionStrategy
-keepclassmembers class com.devexpress.navigation.navigationdrawer.transitionstrategy.BaseTransitionStrategy {
   *** getClosedRect(...);
   *** getDraggableView(...);
   *** getDrawerVisibleRegion(...);
   *** getOpenedRect(...);
   *** createParentContentRect(...);
   *** createSidePanelRect(...);
}

-keep class com.devexpress.navigation.navigationdrawer.transitionstrategy.PushStrategy
-keepclassmembers class com.devexpress.navigation.navigationdrawer.transitionstrategy.PushStrategy {
}

-keep class com.devexpress.navigation.navigationdrawer.transitionstrategy.RevealStrategy
-keepclassmembers class com.devexpress.navigation.navigationdrawer.transitionstrategy.RevealStrategy {
   *** getClosedRect(...);
   *** getDraggableView(...);
   *** getDrawerVisibleRegion(...);
   *** getOpenedRect(...);
   *** createParentContentRect(...);
   *** createSidePanelRect(...);
}

-keep class com.devexpress.navigation.navigationdrawer.transitionstrategy.SlideOnTopStrategy
-keepclassmembers class com.devexpress.navigation.navigationdrawer.transitionstrategy.SlideOnTopStrategy {
   *** getClosedRect(...);
   *** getDraggableView(...);
   *** getDrawerVisibleRegion(...);
   *** getOpenedRect(...);
   *** createParentContentRect(...);
   *** createSidePanelRect(...);
}

-keep class com.devexpress.navigation.navigationdrawer.transitionstrategy.SplitStrategy
-keepclassmembers class com.devexpress.navigation.navigationdrawer.transitionstrategy.SplitStrategy {
   *** getClosedRect(...);
   *** getDraggableView(...);
   *** getDrawerVisibleRegion(...);
   *** getOpenedRect(...);
   *** createParentContentRect(...);
   *** createSidePanelRect(...);
}

-keep class com.devexpress.navigation.navigationdrawer.transitionCalculators.BaseTransitionController
-keepclassmembers class com.devexpress.navigation.navigationdrawer.transitionCalculators.BaseTransitionController {
   *** getClosedRect(...);
   *** isHorizontal(...);
   *** getOpenedRect(...);
   *** getViewSize(...);
   *** getVisiblePercents(...);
   *** clampViewPositionHorizontal(...);
   *** clampViewPositionVertical(...);
   *** isOpened(...);
}

-keep class com.devexpress.navigation.navigationdrawer.transitionCalculators.BaseTransitionController
-keepclassmembers class com.devexpress.navigation.navigationdrawer.transitionCalculators.BaseTransitionController {
   *** isHorizontal(...);
   *** getVisiblePercents(...);
   *** isOpened(...);
}

-keep class com.devexpress.navigation.navigationdrawer.transitionCalculators.BottomTransitionController
-keepclassmembers class com.devexpress.navigation.navigationdrawer.transitionCalculators.BottomTransitionController {
   <init>(...);
   *** isHorizontal(...);
   *** getVisiblePercents(...);
   *** isOpened(...);
}

-keep class com.devexpress.navigation.navigationdrawer.transitionCalculators.LeftTransitionController
-keepclassmembers class com.devexpress.navigation.navigationdrawer.transitionCalculators.LeftTransitionController {
   <init>(...);
   *** isHorizontal(...);
   *** getVisiblePercents(...);
   *** isOpened(...);
}

-keep class com.devexpress.navigation.navigationdrawer.transitionCalculators.RightTransitionController
-keepclassmembers class com.devexpress.navigation.navigationdrawer.transitionCalculators.RightTransitionController {
   <init>(...);
   *** isHorizontal(...);
   *** getVisiblePercents(...);
   *** isOpened(...);
}

-keep class com.devexpress.navigation.navigationdrawer.transitionCalculators.TopTransitionController
-keepclassmembers class com.devexpress.navigation.navigationdrawer.transitionCalculators.TopTransitionController {
   <init>(...);
   *** isHorizontal(...);
   *** getVisiblePercents(...);
   *** isOpened(...);
}

-keep class com.devexpress.navigation.common.HeaderElements
-keepclassmembers class com.devexpress.navigation.common.HeaderElements {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.navigation.common.Position
-keepclassmembers class com.devexpress.navigation.common.Position {
   *** valueOf(...);
   *** values(...);
}

-keep class com.devexpress.navigation.common.ShadowDrawer
-keepclassmembers class com.devexpress.navigation.common.ShadowDrawer {
   <init>(...);
   *** drawHeaderPanelShadow(...);
}

# ACW for DevExpress.XamarinForms.CollectionView.Android
# ACW for DevExpress.XamarinForms.Core.Android
# ACW for DevExpress.XamarinForms.Editors.Android
# ACW for DevExpress.XamarinForms.Grid.Android
# ACW for DevExpress.XamarinForms.Navigation.Android
# ACW for FFImageLoading.Forms.Platform
# ACW for FFImageLoading.Platform
-keep class ffimageloading.views.ImageViewAsync
-keepclassmembers class ffimageloading.views.ImageViewAsync {
}

-keep class ffimageloading.cross.MvxCachedImageView
-keepclassmembers class ffimageloading.cross.MvxCachedImageView {
}

# ACW for FormsViewGroup
-keep class com.xamarin.forms.platform.android.FormsViewGroup
-keepclassmembers class com.xamarin.forms.platform.android.FormsViewGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInputTransparent(...);
   *** setInputTransparent(...);
   *** measureAndLayout(...);
   *** onLayout(...);
   *** sendBatchUpdate(...);
   *** sendViewBatchUpdate(...);
}

-keep class com.xamarin.formsviewgroup.BuildConfig
-keepclassmembers class com.xamarin.formsviewgroup.BuildConfig {
   <init>(...);
}

# ACW for Lottie.Android
-keep class com.airbnb.lottie.LottieAnimationView
-keepclassmembers class com.airbnb.lottie.LottieAnimationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getComposition(...);
   *** setComposition(...);
   *** getDuration(...);
   *** getFrame(...);
   *** setFrame(...);
   *** hasMasks(...);
   *** hasMatte(...);
   *** getImageAssetsFolder(...);
   *** setImageAssetsFolder(...);
   *** isAnimating(...);
   *** isMergePathsEnabledForKitKatAndAbove(...);
   *** getMaxFrame(...);
   *** getMinFrame(...);
   *** getPerformanceTracker(...);
   *** getProgress(...);
   *** setProgress(...);
   *** getRepeatCount(...);
   *** setRepeatCount(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getScale(...);
   *** setScale(...);
   *** getSpeed(...);
   *** setSpeed(...);
   *** addAnimatorListener(...);
   *** addAnimatorUpdateListener(...);
   *** addLottieOnCompositionLoadedListener(...);
   *** addValueCallback(...);
   *** addValueCallback(...);
   *** cancelAnimation(...);
   *** disableExtraScaleModeInFitXY(...);
   *** enableMergePathsForKitKatAndAbove(...);
   *** loop(...);
   *** pauseAnimation(...);
   *** playAnimation(...);
   *** removeAllAnimatorListeners(...);
   *** removeAllLottieOnCompositionLoadedListener(...);
   *** removeAllUpdateListeners(...);
   *** removeAnimatorListener(...);
   *** removeLottieOnCompositionLoadedListener(...);
   *** removeUpdateListener(...);
   *** resolveKeyPath(...);
   *** resumeAnimation(...);
   *** reverseAnimationSpeed(...);
   *** setAnimation(...);
   *** setAnimation(...);
   *** setAnimation(...);
   *** setAnimationFromJson(...);
   *** setAnimationFromJson(...);
   *** setAnimationFromUrl(...);
   *** setAnimationFromUrl(...);
   *** setApplyingOpacityToLayersEnabled(...);
   *** setCacheComposition(...);
   *** setFailureListener(...);
   *** setFallbackResource(...);
   *** setFontAssetDelegate(...);
   *** setImageAssetDelegate(...);
   *** setMaxFrame(...);
   *** setMaxFrame(...);
   *** setMaxProgress(...);
   *** setMinAndMaxFrame(...);
   *** setMinAndMaxFrame(...);
   *** setMinAndMaxFrame(...);
   *** setMinAndMaxProgress(...);
   *** setMinFrame(...);
   *** setMinFrame(...);
   *** setMinProgress(...);
   *** setPerformanceTrackingEnabled(...);
   *** setRenderMode(...);
   *** setSafeMode(...);
   *** setTextDelegate(...);
   *** updateBitmap(...);
}

-keep class com.airbnb.lottie.LottieComposition$Factory
-keepclassmembers class com.airbnb.lottie.LottieComposition$Factory {
   *** fromAssetFileName(...);
   *** fromFileSync(...);
   *** fromInputStream(...);
   *** fromInputStreamSync(...);
   *** fromInputStreamSync(...);
   *** fromJsonReader(...);
   *** fromJsonString(...);
   *** fromJsonSync(...);
   *** fromJsonSync(...);
   *** fromJsonSync(...);
   *** fromRawFile(...);
}

-keep class com.airbnb.lottie.LottieComposition
-keepclassmembers class com.airbnb.lottie.LottieComposition {
   <init>(...);
   *** getBounds(...);
   *** getCharacters(...);
   *** getDuration(...);
   *** getDurationFrames(...);
   *** getEndFrame(...);
   *** getFonts(...);
   *** getFrameRate(...);
   *** hasDashPattern(...);
   *** setHasDashPattern(...);
   *** hasImages(...);
   *** getImages(...);
   *** getLayers(...);
   *** getMarkers(...);
   *** getMaskAndMatteCount(...);
   *** getPerformanceTracker(...);
   *** getStartFrame(...);
   *** getWarnings(...);
   *** addWarning(...);
   *** getMarker(...);
   *** getPrecomps(...);
   *** incrementMatteOrMaskCount(...);
   *** init(...);
   *** layerModelForId(...);
   *** setPerformanceTrackingEnabled(...);
}

-keep class com.airbnb.lottie.FontAssetDelegate
-keepclassmembers class com.airbnb.lottie.FontAssetDelegate {
   <init>(...);
   *** fetchFont(...);
   *** getFontPath(...);
}

-keep class com.airbnb.lottie.Cancellable
-keepclassmembers class com.airbnb.lottie.Cancellable {
}

-keep class com.airbnb.lottie.ImageAssetDelegate
-keepclassmembers class com.airbnb.lottie.ImageAssetDelegate {
}

-keep class com.airbnb.lottie.LottieListener
-keepclassmembers class com.airbnb.lottie.LottieListener {
}

-keep class mono.com.airbnb.lottie.LottieListenerImplementor
-keepclassmembers class mono.com.airbnb.lottie.LottieListenerImplementor {
}

-keep class com.airbnb.lottie.LottieLogger
-keepclassmembers class com.airbnb.lottie.LottieLogger {
}

-keep class com.airbnb.lottie.LottieOnCompositionLoadedListener
-keepclassmembers class com.airbnb.lottie.LottieOnCompositionLoadedListener {
}

-keep class mono.com.airbnb.lottie.LottieOnCompositionLoadedListenerImplementor
-keepclassmembers class mono.com.airbnb.lottie.LottieOnCompositionLoadedListenerImplementor {
}

-keep class com.airbnb.lottie.LottieProperty
-keepclassmembers class com.airbnb.lottie.LottieProperty {
}

-keep class com.airbnb.lottie.OnCompositionLoadedListener
-keepclassmembers class com.airbnb.lottie.OnCompositionLoadedListener {
}

-keep class mono.com.airbnb.lottie.OnCompositionLoadedListenerImplementor
-keepclassmembers class mono.com.airbnb.lottie.OnCompositionLoadedListenerImplementor {
}

-keep class com.airbnb.lottie.LottieCompositionFactory
-keepclassmembers class com.airbnb.lottie.LottieCompositionFactory {
   *** clearCache(...);
   *** fromAsset(...);
   *** fromAsset(...);
   *** fromAssetSync(...);
   *** fromAssetSync(...);
   *** fromJson(...);
   *** fromJsonInputStream(...);
   *** fromJsonInputStreamSync(...);
   *** fromJsonReader(...);
   *** fromJsonReaderSync(...);
   *** fromJsonString(...);
   *** fromJsonStringSync(...);
   *** fromJsonSync(...);
   *** fromRawRes(...);
   *** fromRawRes(...);
   *** fromRawResSync(...);
   *** fromRawResSync(...);
   *** fromUrl(...);
   *** fromUrl(...);
   *** fromUrlSync(...);
   *** fromUrlSync(...);
   *** fromZipStream(...);
   *** fromZipStreamSync(...);
   *** setMaxCacheSize(...);
}

-keep class com.airbnb.lottie.LottieDrawable$RepeatMode
-keepclassmembers class com.airbnb.lottie.LottieDrawable$RepeatMode {
}

-keep class com.airbnb.lottie.LottieDrawable
-keepclassmembers class com.airbnb.lottie.LottieDrawable {
   <init>(...);
   *** isApplyingOpacityToLayersEnabled(...);
   *** setApplyingOpacityToLayersEnabled(...);
   *** getComposition(...);
   *** getFrame(...);
   *** setFrame(...);
   *** hasMasks(...);
   *** hasMatte(...);
   *** getImageAssetsFolder(...);
   *** isAnimating(...);
   *** isLooping(...);
   *** isMergePathsEnabledForKitKatAndAbove(...);
   *** isRunning(...);
   *** getMaxFrame(...);
   *** getMinFrame(...);
   *** getOpacity(...);
   *** getPerformanceTracker(...);
   *** getProgress(...);
   *** setProgress(...);
   *** getRepeatCount(...);
   *** setRepeatCount(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getScale(...);
   *** setScale(...);
   *** getSpeed(...);
   *** setSpeed(...);
   *** getTextDelegate(...);
   *** setTextDelegate(...);
   *** addAnimatorListener(...);
   *** addAnimatorUpdateListener(...);
   *** addValueCallback(...);
   *** addValueCallback(...);
   *** cancelAnimation(...);
   *** clearComposition(...);
   *** disableExtraScaleModeInFitXY(...);
   *** draw(...);
   *** enableMergePathsForKitKatAndAbove(...);
   *** enableMergePathsForKitKatAndAbove(...);
   *** endAnimation(...);
   *** getImageAsset(...);
   *** getTypeface(...);
   *** invalidateDrawable(...);
   *** loop(...);
   *** pauseAnimation(...);
   *** playAnimation(...);
   *** removeAllAnimatorListeners(...);
   *** removeAllUpdateListeners(...);
   *** removeAnimatorListener(...);
   *** removeAnimatorUpdateListener(...);
   *** resolveKeyPath(...);
   *** resumeAnimation(...);
   *** reverseAnimationSpeed(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setComposition(...);
   *** setFontAssetDelegate(...);
   *** setImageAssetDelegate(...);
   *** setImagesAssetsFolder(...);
   *** setMaxFrame(...);
   *** setMaxFrame(...);
   *** setMaxProgress(...);
   *** setMinAndMaxFrame(...);
   *** setMinAndMaxFrame(...);
   *** setMinAndMaxFrame(...);
   *** setMinAndMaxProgress(...);
   *** setMinFrame(...);
   *** setMinFrame(...);
   *** setMinProgress(...);
   *** setPerformanceTrackingEnabled(...);
   *** setSafeMode(...);
   *** start(...);
   *** stop(...);
   *** unscheduleDrawable(...);
   *** updateBitmap(...);
   *** useTextGlyphs(...);
}

-keep class com.airbnb.lottie.LottieImageAsset
-keepclassmembers class com.airbnb.lottie.LottieImageAsset {
   <init>(...);
   *** getBitmap(...);
   *** setBitmap(...);
   *** getDirName(...);
   *** getFileName(...);
   *** getHeight(...);
   *** getId(...);
   *** getWidth(...);
}

-keep class com.airbnb.lottie.LottieResult
-keepclassmembers class com.airbnb.lottie.LottieResult {
   <init>(...);
   <init>(...);
   *** getException(...);
   *** getValue(...);
}

-keep class com.airbnb.lottie.LottieTask
-keepclassmembers class com.airbnb.lottie.LottieTask {
   <init>(...);
   *** addFailureListener(...);
   *** addListener(...);
   *** removeFailureListener(...);
   *** removeListener(...);
}

-keep class com.airbnb.lottie.PerformanceTracker$FrameListener
-keepclassmembers class com.airbnb.lottie.PerformanceTracker$FrameListener {
}

-keep class mono.com.airbnb.lottie.PerformanceTracker_FrameListenerImplementor
-keepclassmembers class mono.com.airbnb.lottie.PerformanceTracker_FrameListenerImplementor {
}

-keep class com.airbnb.lottie.PerformanceTracker
-keepclassmembers class com.airbnb.lottie.PerformanceTracker {
   <init>(...);
   *** getSortedRenderTimes(...);
   *** addFrameListener(...);
   *** clearRenderTimes(...);
   *** logRenderTimes(...);
   *** recordRenderTime(...);
   *** removeFrameListener(...);
}

-keep class com.airbnb.lottie.RenderMode
-keepclassmembers class com.airbnb.lottie.RenderMode {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.SimpleColorFilter
-keepclassmembers class com.airbnb.lottie.SimpleColorFilter {
   <init>(...);
}

-keep class com.airbnb.lottie.TextDelegate
-keepclassmembers class com.airbnb.lottie.TextDelegate {
   <init>(...);
   <init>(...);
   *** getTextInternal(...);
   *** invalidateAllText(...);
   *** invalidateText(...);
   *** setCacheText(...);
   *** setText(...);
}

-keep class com.airbnb.lottie.value.SimpleLottieValueCallback
-keepclassmembers class com.airbnb.lottie.value.SimpleLottieValueCallback {
}

-keep class com.airbnb.lottie.value.Keyframe
-keepclassmembers class com.airbnb.lottie.value.Keyframe {
   <init>(...);
   <init>(...);
   *** getEndProgress(...);
   *** getEndValueFloat(...);
   *** getEndValueInt(...);
   *** isStatic(...);
   *** getStartProgress(...);
   *** getStartValueFloat(...);
   *** getStartValueInt(...);
   *** containsProgress(...);
}

-keep class com.airbnb.lottie.value.LottieFrameInfo
-keepclassmembers class com.airbnb.lottie.value.LottieFrameInfo {
   <init>(...);
   *** getEndFrame(...);
   *** getEndValue(...);
   *** getInterpolatedKeyframeProgress(...);
   *** getLinearKeyframeProgress(...);
   *** getOverallProgress(...);
   *** getStartFrame(...);
   *** getStartValue(...);
   *** set(...);
}

-keep class com.airbnb.lottie.value.LottieInterpolatedFloatValue
-keepclassmembers class com.airbnb.lottie.value.LottieInterpolatedFloatValue {
   <init>(...);
   <init>(...);
}

-keep class com.airbnb.lottie.value.LottieInterpolatedIntegerValue
-keepclassmembers class com.airbnb.lottie.value.LottieInterpolatedIntegerValue {
   <init>(...);
   <init>(...);
}

-keep class com.airbnb.lottie.value.LottieInterpolatedPointValue
-keepclassmembers class com.airbnb.lottie.value.LottieInterpolatedPointValue {
   <init>(...);
   <init>(...);
}

-keep class com.airbnb.lottie.value.LottieInterpolatedValue
-keepclassmembers class com.airbnb.lottie.value.LottieInterpolatedValue {
}

-keep class com.airbnb.lottie.value.LottieInterpolatedValue
-keepclassmembers class com.airbnb.lottie.value.LottieInterpolatedValue {
}

-keep class com.airbnb.lottie.value.LottieRelativeFloatValueCallback
-keepclassmembers class com.airbnb.lottie.value.LottieRelativeFloatValueCallback {
   <init>(...);
   <init>(...);
   *** getOffset(...);
   *** getValue(...);
}

-keep class com.airbnb.lottie.value.LottieRelativeIntegerValueCallback
-keepclassmembers class com.airbnb.lottie.value.LottieRelativeIntegerValueCallback {
   <init>(...);
   *** getOffset(...);
   *** getValue(...);
}

-keep class com.airbnb.lottie.value.LottieRelativePointValueCallback
-keepclassmembers class com.airbnb.lottie.value.LottieRelativePointValueCallback {
   <init>(...);
   <init>(...);
   *** getOffset(...);
   *** getValue(...);
}

-keep class com.airbnb.lottie.value.LottieValueCallback
-keepclassmembers class com.airbnb.lottie.value.LottieValueCallback {
   <init>(...);
   <init>(...);
   *** getValue(...);
   *** getValueInternal(...);
   *** setValue(...);
}

-keep class com.airbnb.lottie.value.ScaleXY
-keepclassmembers class com.airbnb.lottie.value.ScaleXY {
   <init>(...);
   <init>(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** equals(...);
   *** set(...);
}

-keep class com.airbnb.lottie.utils.BaseLottieAnimator
-keepclassmembers class com.airbnb.lottie.utils.BaseLottieAnimator {
   <init>(...);
}

-keep class com.airbnb.lottie.utils.BaseLottieAnimator
-keepclassmembers class com.airbnb.lottie.utils.BaseLottieAnimator {
}

-keep class com.airbnb.lottie.utils.GammaEvaluator
-keepclassmembers class com.airbnb.lottie.utils.GammaEvaluator {
   <init>(...);
   *** evaluate(...);
}

-keep class com.airbnb.lottie.utils.LogcatLogger
-keepclassmembers class com.airbnb.lottie.utils.LogcatLogger {
   <init>(...);
   *** debug(...);
   *** debug(...);
   *** error(...);
   *** warning(...);
   *** warning(...);
}

-keep class com.airbnb.lottie.utils.Logger
-keepclassmembers class com.airbnb.lottie.utils.Logger {
   <init>(...);
   *** debug(...);
   *** debug(...);
   *** error(...);
   *** setInstance(...);
   *** warning(...);
   *** warning(...);
}

-keep class com.airbnb.lottie.utils.LottieValueAnimator
-keepclassmembers class com.airbnb.lottie.utils.LottieValueAnimator {
   <init>(...);
   *** getAnimatedValueAbsolute(...);
   *** getFrame(...);
   *** setFrame(...);
   *** getMaxFrame(...);
   *** setMaxFrame(...);
   *** getMinFrame(...);
   *** getSpeed(...);
   *** setSpeed(...);
   *** clearComposition(...);
   *** doFrame(...);
   *** endAnimation(...);
   *** pauseAnimation(...);
   *** playAnimation(...);
   *** postFrameCallback(...);
   *** removeFrameCallback(...);
   *** removeFrameCallback(...);
   *** resumeAnimation(...);
   *** reverseAnimationSpeed(...);
   *** setComposition(...);
   *** setMinAndMaxFrames(...);
   *** setMinFrame(...);
}

-keep class com.airbnb.lottie.utils.MeanCalculator
-keepclassmembers class com.airbnb.lottie.utils.MeanCalculator {
   <init>(...);
   *** getMean(...);
   *** add(...);
}

-keep class com.airbnb.lottie.utils.MiscUtils
-keepclassmembers class com.airbnb.lottie.utils.MiscUtils {
   <init>(...);
   *** addPoints(...);
   *** clamp(...);
   *** clamp(...);
   *** contains(...);
   *** getPathFromData(...);
   *** lerp(...);
   *** lerp(...);
   *** lerp(...);
   *** resolveKeyPath(...);
}

-keep class com.airbnb.lottie.utils.Utils
-keepclassmembers class com.airbnb.lottie.utils.Utils {
   *** applyTrimPathIfNeeded(...);
   *** applyTrimPathIfNeeded(...);
   *** closeQuietly(...);
   *** createPath(...);
   *** dpScale(...);
   *** getAnimationScale(...);
   *** getScale(...);
   *** hasZeroScaleAxis(...);
   *** hashFor(...);
   *** isAtLeastVersion(...);
   *** isNetworkException(...);
   *** renderPath(...);
   *** resizeBitmapIfNeeded(...);
   *** saveLayerCompat(...);
   *** saveLayerCompat(...);
}

-keep class com.airbnb.lottie.parser.moshi.JsonReader$Options
-keepclassmembers class com.airbnb.lottie.parser.moshi.JsonReader$Options {
   *** of(...);
}

-keep class com.airbnb.lottie.parser.moshi.JsonReader$Token
-keepclassmembers class com.airbnb.lottie.parser.moshi.JsonReader$Token {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.parser.moshi.JsonReader
-keepclassmembers class com.airbnb.lottie.parser.moshi.JsonReader {
   *** hasNext(...);
   *** getPath(...);
   *** beginArray(...);
   *** beginObject(...);
   *** endArray(...);
   *** endObject(...);
   *** nextBoolean(...);
   *** nextDouble(...);
   *** nextInt(...);
   *** nextName(...);
   *** nextString(...);
   *** of(...);
   *** peek(...);
   *** selectName(...);
   *** skipName(...);
   *** skipValue(...);
   *** close(...);
}

-keep class com.airbnb.lottie.parser.moshi.JsonReader
-keepclassmembers class com.airbnb.lottie.parser.moshi.JsonReader {
   *** hasNext(...);
   *** beginArray(...);
   *** beginObject(...);
   *** endArray(...);
   *** endObject(...);
   *** nextBoolean(...);
   *** nextDouble(...);
   *** nextInt(...);
   *** nextName(...);
   *** nextString(...);
   *** peek(...);
   *** selectName(...);
   *** skipName(...);
   *** skipValue(...);
   *** close(...);
}

-keep class com.airbnb.lottie.network.FileExtension
-keepclassmembers class com.airbnb.lottie.network.FileExtension {
   *** forFile(...);
   *** tempExtension(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.network.NetworkCache
-keepclassmembers class com.airbnb.lottie.network.NetworkCache {
   <init>(...);
   *** clear(...);
}

-keep class com.airbnb.lottie.network.NetworkFetcher
-keepclassmembers class com.airbnb.lottie.network.NetworkFetcher {
   *** fetchSync(...);
   *** fetchSync(...);
}

-keep class com.airbnb.lottie.model.CubicCurveData
-keepclassmembers class com.airbnb.lottie.model.CubicCurveData {
   <init>(...);
   <init>(...);
   *** getControlPoint1(...);
   *** getControlPoint2(...);
   *** getVertex(...);
   *** setControlPoint1(...);
   *** setControlPoint2(...);
   *** setVertex(...);
}

-keep class com.airbnb.lottie.model.DocumentData$Justification
-keepclassmembers class com.airbnb.lottie.model.DocumentData$Justification {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.DocumentData
-keepclassmembers class com.airbnb.lottie.model.DocumentData {
   <init>(...);
}

-keep class com.airbnb.lottie.model.Font
-keepclassmembers class com.airbnb.lottie.model.Font {
   <init>(...);
   *** getFamily(...);
   *** getName(...);
   *** getStyle(...);
}

-keep class com.airbnb.lottie.model.FontCharacter
-keepclassmembers class com.airbnb.lottie.model.FontCharacter {
   <init>(...);
   *** getShapes(...);
   *** getWidth(...);
   *** hashFor(...);
}

-keep class com.airbnb.lottie.model.KeyPathElement
-keepclassmembers class com.airbnb.lottie.model.KeyPathElement {
}

-keep class com.airbnb.lottie.model.KeyPath
-keepclassmembers class com.airbnb.lottie.model.KeyPath {
   <init>(...);
   *** getResolvedElement(...);
   *** addKey(...);
   *** fullyResolvesTo(...);
   *** incrementDepthBy(...);
   *** keysToString(...);
   *** matches(...);
   *** propagateToChildren(...);
   *** resolve(...);
}

-keep class com.airbnb.lottie.model.LottieCompositionCache
-keepclassmembers class com.airbnb.lottie.model.LottieCompositionCache {
   *** getInstance(...);
   *** clear(...);
   *** get(...);
   *** put(...);
   *** resize(...);
}

-keep class com.airbnb.lottie.model.Marker
-keepclassmembers class com.airbnb.lottie.model.Marker {
   <init>(...);
   *** matchesName(...);
}

-keep class com.airbnb.lottie.model.MutablePair
-keepclassmembers class com.airbnb.lottie.model.MutablePair {
   <init>(...);
   *** set(...);
}

-keep class com.airbnb.lottie.model.layer.BaseLayer
-keepclassmembers class com.airbnb.lottie.model.layer.BaseLayer {
   *** getName(...);
   *** addValueCallback(...);
   *** draw(...);
   *** getBounds(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.model.layer.BaseLayer
-keepclassmembers class com.airbnb.lottie.model.layer.BaseLayer {
}

-keep class com.airbnb.lottie.model.layer.CompositionLayer
-keepclassmembers class com.airbnb.lottie.model.layer.CompositionLayer {
   <init>(...);
   *** hasMasks(...);
   *** hasMatte(...);
   *** resolveChildKeyPath(...);
   *** setProgress(...);
}

-keep class com.airbnb.lottie.model.layer.ImageLayer
-keepclassmembers class com.airbnb.lottie.model.layer.ImageLayer {
   *** drawLayer(...);
}

-keep class com.airbnb.lottie.model.layer.Layer$LayerType
-keepclassmembers class com.airbnb.lottie.model.layer.Layer$LayerType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.layer.Layer$MatteType
-keepclassmembers class com.airbnb.lottie.model.layer.Layer$MatteType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.layer.Layer
-keepclassmembers class com.airbnb.lottie.model.layer.Layer {
   <init>(...);
   *** getId(...);
   *** isHidden(...);
   *** getLayerType(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.layer.NullLayer
-keepclassmembers class com.airbnb.lottie.model.layer.NullLayer {
}

-keep class com.airbnb.lottie.model.layer.ShapeLayer
-keepclassmembers class com.airbnb.lottie.model.layer.ShapeLayer {
   *** resolveChildKeyPath(...);
}

-keep class com.airbnb.lottie.model.layer.SolidLayer
-keepclassmembers class com.airbnb.lottie.model.layer.SolidLayer {
   *** drawLayer(...);
}

-keep class com.airbnb.lottie.model.layer.TextLayer
-keepclassmembers class com.airbnb.lottie.model.layer.TextLayer {
}

-keep class com.airbnb.lottie.model.content.CircleShape
-keepclassmembers class com.airbnb.lottie.model.content.CircleShape {
   *** isHidden(...);
   *** isReversed(...);
   *** getName(...);
   *** getSize(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.GradientColor
-keepclassmembers class com.airbnb.lottie.model.content.GradientColor {
   <init>(...);
   *** getSize(...);
   *** getColors(...);
   *** getPositions(...);
   *** lerp(...);
}

-keep class com.airbnb.lottie.model.content.GradientFill
-keepclassmembers class com.airbnb.lottie.model.content.GradientFill {
   <init>(...);
   *** getEndPoint(...);
   *** getFillType(...);
   *** getGradientColor(...);
   *** getGradientType(...);
   *** isHidden(...);
   *** getName(...);
   *** getOpacity(...);
   *** getStartPoint(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.GradientStroke
-keepclassmembers class com.airbnb.lottie.model.content.GradientStroke {
   <init>(...);
   *** getCapType(...);
   *** getDashOffset(...);
   *** getEndPoint(...);
   *** getGradientColor(...);
   *** getGradientType(...);
   *** isHidden(...);
   *** getJoinType(...);
   *** getLineDashPattern(...);
   *** getMiterLimit(...);
   *** getName(...);
   *** getOpacity(...);
   *** getStartPoint(...);
   *** getWidth(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.GradientType
-keepclassmembers class com.airbnb.lottie.model.content.GradientType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.ContentModel
-keepclassmembers class com.airbnb.lottie.model.content.ContentModel {
}

-keep class com.airbnb.lottie.model.content.Mask$MaskMode
-keepclassmembers class com.airbnb.lottie.model.content.Mask$MaskMode {
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.Mask
-keepclassmembers class com.airbnb.lottie.model.content.Mask {
   <init>(...);
   *** isInverted(...);
   *** getMaskPath(...);
   *** getOpacity(...);
   *** getMaskMode(...);
}

-keep class com.airbnb.lottie.model.content.MergePaths$MergePathsMode
-keepclassmembers class com.airbnb.lottie.model.content.MergePaths$MergePathsMode {
   *** forId(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.MergePaths
-keepclassmembers class com.airbnb.lottie.model.content.MergePaths {
   <init>(...);
   *** isHidden(...);
   *** getMode(...);
   *** getName(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.PolystarShape$Type
-keepclassmembers class com.airbnb.lottie.model.content.PolystarShape$Type {
   *** forValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.PolystarShape
-keepclassmembers class com.airbnb.lottie.model.content.PolystarShape {
   *** getInnerRadius(...);
   *** getInnerRoundedness(...);
   *** isHidden(...);
   *** getName(...);
   *** getOuterRadius(...);
   *** getOuterRoundedness(...);
   *** getPoints(...);
   *** getRotation(...);
   *** getType(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.RectangleShape
-keepclassmembers class com.airbnb.lottie.model.content.RectangleShape {
   *** getCornerRadius(...);
   *** isHidden(...);
   *** getName(...);
   *** getSize(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.Repeater
-keepclassmembers class com.airbnb.lottie.model.content.Repeater {
   <init>(...);
   *** getCopies(...);
   *** isHidden(...);
   *** getName(...);
   *** getOffset(...);
   *** getTransform(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.ShapeData
-keepclassmembers class com.airbnb.lottie.model.content.ShapeData {
   <init>(...);
   <init>(...);
   *** getCurves(...);
   *** getInitialPoint(...);
   *** isClosed(...);
   *** interpolateBetween(...);
}

-keep class com.airbnb.lottie.model.content.ShapeFill
-keepclassmembers class com.airbnb.lottie.model.content.ShapeFill {
   <init>(...);
   *** getColor(...);
   *** getFillType(...);
   *** isHidden(...);
   *** getName(...);
   *** getOpacity(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.ShapeGroup
-keepclassmembers class com.airbnb.lottie.model.content.ShapeGroup {
   <init>(...);
   *** isHidden(...);
   *** getItems(...);
   *** getName(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.ShapePath
-keepclassmembers class com.airbnb.lottie.model.content.ShapePath {
   <init>(...);
   *** isHidden(...);
   *** getName(...);
   *** getShapePath(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.ShapeStroke$LineCapType
-keepclassmembers class com.airbnb.lottie.model.content.ShapeStroke$LineCapType {
   *** toPaintCap(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.ShapeStroke$LineJoinType
-keepclassmembers class com.airbnb.lottie.model.content.ShapeStroke$LineJoinType {
   *** toPaintJoin(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.ShapeStroke
-keepclassmembers class com.airbnb.lottie.model.content.ShapeStroke {
   <init>(...);
   *** getCapType(...);
   *** getColor(...);
   *** getDashOffset(...);
   *** isHidden(...);
   *** getJoinType(...);
   *** getLineDashPattern(...);
   *** getMiterLimit(...);
   *** getName(...);
   *** getOpacity(...);
   *** getWidth(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.content.ShapeTrimPath$Type
-keepclassmembers class com.airbnb.lottie.model.content.ShapeTrimPath$Type {
   *** forId(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.airbnb.lottie.model.content.ShapeTrimPath
-keepclassmembers class com.airbnb.lottie.model.content.ShapeTrimPath {
   <init>(...);
   *** getEnd(...);
   *** isHidden(...);
   *** getName(...);
   *** getOffset(...);
   *** getStart(...);
   *** getType(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableColorValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableColorValue {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableFloatValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableFloatValue {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableGradientColorValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableGradientColorValue {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableIntegerValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableIntegerValue {
   <init>(...);
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatablePathValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatablePathValue {
   <init>(...);
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatablePointValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatablePointValue {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableScaleValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableScaleValue {
   <init>(...);
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableShapeValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableShapeValue {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableSplitDimensionPathValue
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableSplitDimensionPathValue {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableTextFrame
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableTextFrame {
   <init>(...);
   *** isStatic(...);
   *** getKeyframes(...);
   *** toString(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableTextProperties
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableTextProperties {
   <init>(...);
}

-keep class com.airbnb.lottie.model.animatable.AnimatableTransform
-keepclassmembers class com.airbnb.lottie.model.animatable.AnimatableTransform {
   <init>(...);
   *** getAnchorPoint(...);
   *** getEndOpacity(...);
   *** getOpacity(...);
   *** getRotation(...);
   *** getScale(...);
   *** getSkew(...);
   *** getSkewAngle(...);
   *** getStartOpacity(...);
   *** createAnimation(...);
   *** toContent(...);
}

-keep class com.airbnb.lottie.model.animatable.BaseAnimatableValue
-keepclassmembers class com.airbnb.lottie.model.animatable.BaseAnimatableValue {
   *** isStatic(...);
   *** getKeyframes(...);
}

-keep class com.airbnb.lottie.model.animatable.BaseAnimatableValue
-keepclassmembers class com.airbnb.lottie.model.animatable.BaseAnimatableValue {
}

-keep class com.airbnb.lottie.manager.FontAssetManager
-keepclassmembers class com.airbnb.lottie.manager.FontAssetManager {
   <init>(...);
   *** getTypeface(...);
   *** setDefaultFontFileExtension(...);
   *** setDelegate(...);
}

-keep class com.airbnb.lottie.manager.ImageAssetManager
-keepclassmembers class com.airbnb.lottie.manager.ImageAssetManager {
   <init>(...);
   *** bitmapForId(...);
   *** hasSameContext(...);
   *** setDelegate(...);
   *** updateBitmap(...);
}

-keep class com.airbnb.lottie.animation.LPaint
-keepclassmembers class com.airbnb.lottie.animation.LPaint {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation
-keepclassmembers class com.airbnb.lottie.animation.keyframe.MaskKeyframeAnimation {
   <init>(...);
   *** getMasks(...);
}

-keep class com.airbnb.lottie.animation.keyframe.PathKeyframe
-keepclassmembers class com.airbnb.lottie.animation.keyframe.PathKeyframe {
   <init>(...);
   *** createPath(...);
}

-keep class com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation
-keepclassmembers class com.airbnb.lottie.animation.keyframe.TransformKeyframeAnimation {
   <init>(...);
   *** getMatrix(...);
   *** addAnimationsToLayer(...);
   *** applyValueCallback(...);
   *** getMatrixForRepeater(...);
   *** setProgress(...);
}

-keep class com.airbnb.lottie.animation.content.BaseStrokeContent
-keepclassmembers class com.airbnb.lottie.animation.content.BaseStrokeContent {
   *** addValueCallback(...);
   *** draw(...);
   *** getBounds(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
   *** getName(...);
}

-keep class com.airbnb.lottie.animation.content.BaseStrokeContent
-keepclassmembers class com.airbnb.lottie.animation.content.BaseStrokeContent {
   *** getName(...);
}

-keep class com.airbnb.lottie.animation.content.CompoundTrimPathContent
-keepclassmembers class com.airbnb.lottie.animation.content.CompoundTrimPathContent {
   <init>(...);
   *** apply(...);
}

-keep class com.airbnb.lottie.animation.content.ContentGroup
-keepclassmembers class com.airbnb.lottie.animation.content.ContentGroup {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** addValueCallback(...);
   *** draw(...);
   *** getBounds(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.EllipseContent
-keepclassmembers class com.airbnb.lottie.animation.content.EllipseContent {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** addValueCallback(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.FillContent
-keepclassmembers class com.airbnb.lottie.animation.content.FillContent {
   <init>(...);
   *** getName(...);
   *** addValueCallback(...);
   *** draw(...);
   *** getBounds(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.GradientFillContent
-keepclassmembers class com.airbnb.lottie.animation.content.GradientFillContent {
   <init>(...);
   *** getName(...);
   *** addValueCallback(...);
   *** draw(...);
   *** getBounds(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.GradientStrokeContent
-keepclassmembers class com.airbnb.lottie.animation.content.GradientStrokeContent {
   <init>(...);
   *** getName(...);
}

-keep class com.airbnb.lottie.animation.content.Content
-keepclassmembers class com.airbnb.lottie.animation.content.Content {
}

-keep class com.airbnb.lottie.animation.content.DrawingContent
-keepclassmembers class com.airbnb.lottie.animation.content.DrawingContent {
}

-keep class com.airbnb.lottie.animation.content.KeyPathElementContent
-keepclassmembers class com.airbnb.lottie.animation.content.KeyPathElementContent {
}

-keep class com.airbnb.lottie.animation.content.ModifierContent
-keepclassmembers class com.airbnb.lottie.animation.content.ModifierContent {
}

-keep class com.airbnb.lottie.animation.content.MergePathsContent
-keepclassmembers class com.airbnb.lottie.animation.content.MergePathsContent {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** absorbContent(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.PolystarContent
-keepclassmembers class com.airbnb.lottie.animation.content.PolystarContent {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** addValueCallback(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.RectangleContent
-keepclassmembers class com.airbnb.lottie.animation.content.RectangleContent {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** addValueCallback(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.RepeaterContent
-keepclassmembers class com.airbnb.lottie.animation.content.RepeaterContent {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** absorbContent(...);
   *** addValueCallback(...);
   *** draw(...);
   *** getBounds(...);
   *** onValueChanged(...);
   *** resolveKeyPath(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.ShapeContent
-keepclassmembers class com.airbnb.lottie.animation.content.ShapeContent {
   <init>(...);
   *** getName(...);
   *** getPath(...);
   *** onValueChanged(...);
   *** setContents(...);
}

-keep class com.airbnb.lottie.animation.content.StrokeContent
-keepclassmembers class com.airbnb.lottie.animation.content.StrokeContent {
   <init>(...);
   *** getName(...);
}

-keep class com.airbnb.lottie.animation.content.TrimPathContent
-keepclassmembers class com.airbnb.lottie.animation.content.TrimPathContent {
   <init>(...);
   *** isHidden(...);
   *** getName(...);
   *** onValueChanged(...);
   *** setContents(...);
}

# ACW for Lottie.Forms
# ACW for PanCardView.Droid
# ACW for Prism.Forms
# ACW for Sharpnado.Shadows.Android
# ACW for SkiaSharp.Views.Android
# ACW for SkiaSharp.Views.Forms
# ACW for SQLitePCLRaw.lib.e_sqlite3.android
# ACW for Square.OkIO
-keep class okio.Buffer$UnsafeCursor
-keepclassmembers class okio.Buffer$UnsafeCursor {
   <init>(...);
   *** close(...);
   *** expandBuffer(...);
   *** next(...);
   *** resizeBuffer(...);
   *** seek(...);
}

-keep class okio.Buffer
-keepclassmembers class okio.Buffer {
   <init>(...);
   *** buffer(...);
   *** isOpen(...);
   *** outputStream(...);
   *** clear(...);
   *** clone(...);
   *** close(...);
   *** completeSegmentByteCount(...);
   *** copyTo(...);
   *** copyTo(...);
   *** copyTo(...);
   *** emit(...);
   *** emitCompleteSegments(...);
   *** exhausted(...);
   *** flush(...);
   *** getBuffer(...);
   *** getByte(...);
   *** hmacSha1(...);
   *** hmacSha256(...);
   *** hmacSha512(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOfElement(...);
   *** indexOfElement(...);
   *** inputStream(...);
   *** md5(...);
   *** peek(...);
   *** rangeEquals(...);
   *** rangeEquals(...);
   *** read(...);
   *** read(...);
   *** read(...);
   *** read(...);
   *** readAll(...);
   *** readAndWriteUnsafe(...);
   *** readAndWriteUnsafe(...);
   *** readByte(...);
   *** readByteArray(...);
   *** readByteArray(...);
   *** readByteString(...);
   *** readByteString(...);
   *** readDecimalLong(...);
   *** readFrom(...);
   *** readFrom(...);
   *** readFully(...);
   *** readFully(...);
   *** readHexadecimalUnsignedLong(...);
   *** readInt(...);
   *** readIntLe(...);
   *** readLong(...);
   *** readLongLe(...);
   *** readShort(...);
   *** readShortLe(...);
   *** readString(...);
   *** readString(...);
   *** readUnsafe(...);
   *** readUnsafe(...);
   *** readUtf8(...);
   *** readUtf8(...);
   *** readUtf8CodePoint(...);
   *** readUtf8Line(...);
   *** readUtf8LineStrict(...);
   *** readUtf8LineStrict(...);
   *** request(...);
   *** require(...);
   *** select(...);
   *** sha1(...);
   *** sha256(...);
   *** sha512(...);
   *** size(...);
   *** skip(...);
   *** snapshot(...);
   *** snapshot(...);
   *** timeout(...);
   *** write(...);
   *** write(...);
   *** write(...);
   *** write(...);
   *** write(...);
   *** write(...);
   *** writeAll(...);
   *** writeByte(...);
   *** writeDecimalLong(...);
   *** writeHexadecimalUnsignedLong(...);
   *** writeInt(...);
   *** writeIntLe(...);
   *** writeLong(...);
   *** writeLongLe(...);
   *** writeShort(...);
   *** writeShortLe(...);
   *** writeString(...);
   *** writeString(...);
   *** writeTo(...);
   *** writeTo(...);
   *** writeUtf8(...);
   *** writeUtf8(...);
   *** writeUtf8CodePoint(...);
}

-keep class okio.Options
-keepclassmembers class okio.Options {
   *** get(...);
   *** of(...);
   *** size(...);
}

-keep class okio.AsyncTimeout
-keepclassmembers class okio.AsyncTimeout {
   <init>(...);
   *** enter(...);
   *** exit(...);
   *** newTimeoutException(...);
   *** sink(...);
   *** source(...);
   *** timedOut(...);
}

-keep class okio.ByteString
-keepclassmembers class okio.ByteString {
   *** asByteBuffer(...);
   *** base64(...);
   *** base64Url(...);
   *** compareTo(...);
   *** decodeBase64(...);
   *** decodeHex(...);
   *** encodeString(...);
   *** encodeUtf8(...);
   *** endsWith(...);
   *** endsWith(...);
   *** getByte(...);
   *** hex(...);
   *** hmacSha1(...);
   *** hmacSha256(...);
   *** hmacSha512(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** md5(...);
   *** of(...);
   *** of(...);
   *** of(...);
   *** rangeEquals(...);
   *** rangeEquals(...);
   *** read(...);
   *** sha1(...);
   *** sha256(...);
   *** sha512(...);
   *** size(...);
   *** startsWith(...);
   *** startsWith(...);
   *** string(...);
   *** substring(...);
   *** substring(...);
   *** toAsciiLowercase(...);
   *** toAsciiUppercase(...);
   *** toByteArray(...);
   *** utf8(...);
   *** write(...);
}

-keep class okio.DeflaterSink
-keepclassmembers class okio.DeflaterSink {
   <init>(...);
   *** close(...);
   *** flush(...);
   *** timeout(...);
   *** write(...);
}

-keep class okio.ForwardingSink
-keepclassmembers class okio.ForwardingSink {
   <init>(...);
   *** close(...);
   *** delegate(...);
   *** flush(...);
   *** timeout(...);
   *** write(...);
}

-keep class okio.ForwardingSink
-keepclassmembers class okio.ForwardingSink {
}

-keep class okio.ForwardingSource
-keepclassmembers class okio.ForwardingSource {
   <init>(...);
   *** close(...);
   *** delegate(...);
   *** read(...);
   *** timeout(...);
}

-keep class okio.ForwardingSource
-keepclassmembers class okio.ForwardingSource {
}

-keep class okio.ForwardingTimeout
-keepclassmembers class okio.ForwardingTimeout {
   <init>(...);
   *** delegate(...);
   *** setDelegate(...);
}

-keep class okio.GzipSink
-keepclassmembers class okio.GzipSink {
   <init>(...);
   *** close(...);
   *** deflater(...);
   *** flush(...);
   *** timeout(...);
   *** write(...);
}

-keep class okio.GzipSource
-keepclassmembers class okio.GzipSource {
   <init>(...);
   *** close(...);
   *** read(...);
   *** timeout(...);
}

-keep class okio.HashingSink
-keepclassmembers class okio.HashingSink {
   *** hash(...);
   *** hmacSha1(...);
   *** hmacSha256(...);
   *** hmacSha512(...);
   *** md5(...);
   *** sha1(...);
   *** sha256(...);
   *** sha512(...);
}

-keep class okio.HashingSource
-keepclassmembers class okio.HashingSource {
   *** hash(...);
   *** hmacSha1(...);
   *** hmacSha256(...);
   *** md5(...);
   *** sha1(...);
   *** sha256(...);
}

-keep class okio.BufferedSink
-keepclassmembers class okio.BufferedSink {
}

-keep class okio.BufferedSource
-keepclassmembers class okio.BufferedSource {
}

-keep class okio.Sink
-keepclassmembers class okio.Sink {
}

-keep class okio.Source
-keepclassmembers class okio.Source {
}

-keep class okio.InflaterSource
-keepclassmembers class okio.InflaterSource {
   <init>(...);
   *** close(...);
   *** read(...);
   *** refill(...);
   *** timeout(...);
}

-keep class okio.Okio
-keepclassmembers class okio.Okio {
   *** appendingSink(...);
   *** blackhole(...);
   *** buffer(...);
   *** buffer(...);
   *** sink(...);
   *** sink(...);
   *** sink(...);
   *** source(...);
   *** source(...);
   *** source(...);
}

-keep class okio.Pipe
-keepclassmembers class okio.Pipe {
   <init>(...);
   *** fold(...);
   *** sink(...);
   *** source(...);
}

-keep class okio.Timeout
-keepclassmembers class okio.Timeout {
   <init>(...);
   *** hasDeadline(...);
   *** clearDeadline(...);
   *** clearTimeout(...);
   *** deadline(...);
   *** deadlineNanoTime(...);
   *** deadlineNanoTime(...);
   *** throwIfReached(...);
   *** timeout(...);
   *** timeoutNanos(...);
   *** waitUntilNotified(...);
}

-keep class okio.Utf8
-keepclassmembers class okio.Utf8 {
   *** size(...);
   *** size(...);
}

# ACW for Syncfusion.Buttons.XForms.Android
# ACW for Syncfusion.Core.XForms.Android
# ACW for Xamarin.AndroidX.Activity
-keep class androidx.activity.ComponentActivity
-keepclassmembers class androidx.activity.ComponentActivity {
   <init>(...);
   <init>(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getOnBackPressedDispatcher(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
}

-keep class androidx.activity.OnBackPressedDispatcherOwner
-keepclassmembers class androidx.activity.OnBackPressedDispatcherOwner {
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   <init>(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** handleOnBackPressed(...);
   *** remove(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   *** handleOnBackPressed(...);
}

-keep class androidx.activity.OnBackPressedDispatcher
-keepclassmembers class androidx.activity.OnBackPressedDispatcher {
   <init>(...);
   <init>(...);
   *** hasEnabledCallbacks(...);
   *** addCallback(...);
   *** addCallback(...);
   *** onBackPressed(...);
}

# ACW for Xamarin.AndroidX.Annotation
-keep class androidx.annotation.AnimatorRes
-keepclassmembers class androidx.annotation.AnimatorRes {
}

-keep class androidx.annotation.AnimRes
-keepclassmembers class androidx.annotation.AnimRes {
}

-keep class androidx.annotation.AnyRes
-keepclassmembers class androidx.annotation.AnyRes {
}

-keep class androidx.annotation.AnyThread
-keepclassmembers class androidx.annotation.AnyThread {
}

-keep class androidx.annotation.ArrayRes
-keepclassmembers class androidx.annotation.ArrayRes {
}

-keep class androidx.annotation.AttrRes
-keepclassmembers class androidx.annotation.AttrRes {
}

-keep class androidx.annotation.BinderThread
-keepclassmembers class androidx.annotation.BinderThread {
}

-keep class androidx.annotation.BoolRes
-keepclassmembers class androidx.annotation.BoolRes {
}

-keep class androidx.annotation.CallSuper
-keepclassmembers class androidx.annotation.CallSuper {
}

-keep class androidx.annotation.CheckResult
-keepclassmembers class androidx.annotation.CheckResult {
}

-keep class androidx.annotation.ColorInt
-keepclassmembers class androidx.annotation.ColorInt {
}

-keep class androidx.annotation.ColorLong
-keepclassmembers class androidx.annotation.ColorLong {
}

-keep class androidx.annotation.ColorRes
-keepclassmembers class androidx.annotation.ColorRes {
}

-keep class androidx.annotation.ContentView
-keepclassmembers class androidx.annotation.ContentView {
}

-keep class androidx.annotation.DimenRes
-keepclassmembers class androidx.annotation.DimenRes {
}

-keep class androidx.annotation.Dimension
-keepclassmembers class androidx.annotation.Dimension {
}

-keep class androidx.annotation.Dimension
-keepclassmembers class androidx.annotation.Dimension {
}

-keep class androidx.annotation.Dimension
-keepclassmembers class androidx.annotation.Dimension {
}

-keep class androidx.annotation.DrawableRes
-keepclassmembers class androidx.annotation.DrawableRes {
}

-keep class androidx.annotation.FloatRange
-keepclassmembers class androidx.annotation.FloatRange {
}

-keep class androidx.annotation.FontRes
-keepclassmembers class androidx.annotation.FontRes {
}

-keep class androidx.annotation.FractionRes
-keepclassmembers class androidx.annotation.FractionRes {
}

-keep class androidx.annotation.GuardedBy
-keepclassmembers class androidx.annotation.GuardedBy {
}

-keep class androidx.annotation.HalfFloat
-keepclassmembers class androidx.annotation.HalfFloat {
}

-keep class androidx.annotation.IdRes
-keepclassmembers class androidx.annotation.IdRes {
}

-keep class androidx.annotation.InspectableProperty$EnumEntry
-keepclassmembers class androidx.annotation.InspectableProperty$EnumEntry {
}

-keep class androidx.annotation.InspectableProperty$FlagEntry
-keepclassmembers class androidx.annotation.InspectableProperty$FlagEntry {
}

-keep class androidx.annotation.InspectableProperty$ValueType
-keepclassmembers class androidx.annotation.InspectableProperty$ValueType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.InspectableProperty
-keepclassmembers class androidx.annotation.InspectableProperty {
}

-keep class androidx.annotation.IntDef
-keepclassmembers class androidx.annotation.IntDef {
}

-keep class androidx.annotation.IntegerRes
-keepclassmembers class androidx.annotation.IntegerRes {
}

-keep class androidx.annotation.InterpolatorRes
-keepclassmembers class androidx.annotation.InterpolatorRes {
}

-keep class androidx.annotation.IntRange
-keepclassmembers class androidx.annotation.IntRange {
}

-keep class androidx.annotation.Keep
-keepclassmembers class androidx.annotation.Keep {
}

-keep class androidx.annotation.LayoutRes
-keepclassmembers class androidx.annotation.LayoutRes {
}

-keep class androidx.annotation.LongDef
-keepclassmembers class androidx.annotation.LongDef {
}

-keep class androidx.annotation.MainThread
-keepclassmembers class androidx.annotation.MainThread {
}

-keep class androidx.annotation.MenuRes
-keepclassmembers class androidx.annotation.MenuRes {
}

-keep class androidx.annotation.NavigationRes
-keepclassmembers class androidx.annotation.NavigationRes {
}

-keep class androidx.annotation.NonNull
-keepclassmembers class androidx.annotation.NonNull {
}

-keep class androidx.annotation.Nullable
-keepclassmembers class androidx.annotation.Nullable {
}

-keep class androidx.annotation.PluralsRes
-keepclassmembers class androidx.annotation.PluralsRes {
}

-keep class androidx.annotation.Px
-keepclassmembers class androidx.annotation.Px {
}

-keep class androidx.annotation.RawRes
-keepclassmembers class androidx.annotation.RawRes {
}

-keep class androidx.annotation.RequiresApi
-keepclassmembers class androidx.annotation.RequiresApi {
}

-keep class androidx.annotation.RequiresFeature
-keepclassmembers class androidx.annotation.RequiresFeature {
}

-keep class androidx.annotation.RequiresPermission$Read
-keepclassmembers class androidx.annotation.RequiresPermission$Read {
}

-keep class androidx.annotation.RequiresPermission$Write
-keepclassmembers class androidx.annotation.RequiresPermission$Write {
}

-keep class androidx.annotation.RequiresPermission
-keepclassmembers class androidx.annotation.RequiresPermission {
}

-keep class androidx.annotation.RestrictTo$Scope
-keepclassmembers class androidx.annotation.RestrictTo$Scope {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.RestrictTo
-keepclassmembers class androidx.annotation.RestrictTo {
}

-keep class androidx.annotation.Size
-keepclassmembers class androidx.annotation.Size {
}

-keep class androidx.annotation.StringDef
-keepclassmembers class androidx.annotation.StringDef {
}

-keep class androidx.annotation.StringRes
-keepclassmembers class androidx.annotation.StringRes {
}

-keep class androidx.annotation.StyleableRes
-keepclassmembers class androidx.annotation.StyleableRes {
}

-keep class androidx.annotation.StyleRes
-keepclassmembers class androidx.annotation.StyleRes {
}

-keep class androidx.annotation.TransitionRes
-keepclassmembers class androidx.annotation.TransitionRes {
}

-keep class androidx.annotation.UiThread
-keepclassmembers class androidx.annotation.UiThread {
}

-keep class androidx.annotation.VisibleForTesting
-keepclassmembers class androidx.annotation.VisibleForTesting {
}

-keep class androidx.annotation.VisibleForTesting
-keepclassmembers class androidx.annotation.VisibleForTesting {
}

-keep class androidx.annotation.VisibleForTesting
-keepclassmembers class androidx.annotation.VisibleForTesting {
}

-keep class androidx.annotation.WorkerThread
-keepclassmembers class androidx.annotation.WorkerThread {
}

-keep class androidx.annotation.XmlRes
-keepclassmembers class androidx.annotation.XmlRes {
}

# ACW for Xamarin.AndroidX.Annotation.Experimental
-keep class androidx.annotation.experimental.Experimental$Level
-keepclassmembers class androidx.annotation.experimental.Experimental$Level {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.experimental.Experimental
-keepclassmembers class androidx.annotation.experimental.Experimental {
}

-keep class androidx.annotation.experimental.UseExperimental
-keepclassmembers class androidx.annotation.experimental.UseExperimental {
}

# ACW for Xamarin.AndroidX.AppCompat.AppCompatResources
-keep class androidx.appcompat.graphics.drawable.DrawableWrapper
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawableWrapper {
   <init>(...);
   *** getOpacity(...);
   *** getWrappedDrawable(...);
   *** setWrappedDrawable(...);
   *** draw(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** unscheduleDrawable(...);
}

-keep class androidx.appcompat.content.res.AppCompatResources
-keepclassmembers class androidx.appcompat.content.res.AppCompatResources {
   *** getColorStateList(...);
   *** getDrawable(...);
}

# ACW for Xamarin.AndroidX.AppCompat
-keep class androidx.appcompat.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class androidx.appcompat.app.AlertDialog$Builder
-keepclassmembers class androidx.appcompat.app.AlertDialog$Builder {
   <init>(...);
   <init>(...);
   *** getContext(...);
   *** create(...);
   *** setAdapter(...);
   *** setCancelable(...);
   *** setCursor(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setInverseBackgroundForced(...);
   *** setItems(...);
   *** setItems(...);
   *** setMessage(...);
   *** setMessage(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setNegativeButton(...);
   *** setNegativeButton(...);
   *** setNegativeButtonIcon(...);
   *** setNeutralButton(...);
   *** setNeutralButton(...);
   *** setNeutralButtonIcon(...);
   *** setOnCancelListener(...);
   *** setOnDismissListener(...);
   *** setOnItemSelectedListener(...);
   *** setOnKeyListener(...);
   *** setPositiveButton(...);
   *** setPositiveButton(...);
   *** setPositiveButtonIcon(...);
   *** setRecycleOnMeasureEnabled(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setView(...);
   *** setView(...);
   *** setView(...);
   *** show(...);
}

-keep class androidx.appcompat.app.AlertDialog
-keepclassmembers class androidx.appcompat.app.AlertDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getListView(...);
   *** getButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setMessage(...);
   *** setView(...);
   *** setView(...);
}

-keep class androidx.appcompat.app.ActionBar$LayoutParams
-keepclassmembers class androidx.appcompat.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class androidx.appcompat.app.ActionBar$OnNavigationListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnNavigationListener {
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$TabListener
-keepclassmembers class androidx.appcompat.app.ActionBar$TabListener {
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$Delegate {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class androidx.appcompat.app.AppCompatActivity
-keepclassmembers class androidx.appcompat.app.AppCompatActivity {
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onMenuItemSelected(...);
   *** onNightModeChanged(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getLocalNightMode(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** attachBaseContext(...);
   *** attachBaseContext2(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTheme(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDialog
-keepclassmembers class androidx.appcompat.app.AppCompatDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getSupportActionBar(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onWindowStartingSupportActionMode(...);
   *** supportRequestWindowFeature(...);
}

-keep class androidx.appcompat.app.AppCompatCallback
-keepclassmembers class androidx.appcompat.app.AppCompatCallback {
}

-keep class androidx.appcompat.widget.Toolbar$LayoutParams
-keepclassmembers class androidx.appcompat.widget.Toolbar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class androidx.appcompat.widget.Toolbar
-keepclassmembers class androidx.appcompat.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCollapseContentDescription(...);
   *** setCollapseContentDescription(...);
   *** getCollapseIcon(...);
   *** setCollapseIcon(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** onLayout(...);
   *** setCollapseContentDescription(...);
   *** setCollapseIcon(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class androidx.appcompat.widget.AppCompatAutoCompleteTextView
-keepclassmembers class androidx.appcompat.widget.AppCompatAutoCompleteTextView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatButton
-keepclassmembers class androidx.appcompat.widget.AppCompatButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
   *** setSupportAllCaps(...);
}

-keep class androidx.appcompat.widget.AppCompatCheckBox
-keepclassmembers class androidx.appcompat.widget.AppCompatCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatImageButton
-keepclassmembers class androidx.appcompat.widget.AppCompatImageButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatImageView
-keepclassmembers class androidx.appcompat.widget.AppCompatImageView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatRadioButton
-keepclassmembers class androidx.appcompat.widget.AppCompatRadioButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
}

-keep class androidx.appcompat.widget.DecorToolbar
-keepclassmembers class androidx.appcompat.widget.DecorToolbar {
}

-keep class androidx.appcompat.widget.LinearLayoutCompat
-keepclassmembers class androidx.appcompat.widget.LinearLayoutCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBaselineAligned(...);
   *** setBaselineAligned(...);
   *** getBaselineAlignedChildIndex(...);
   *** setBaselineAlignedChildIndex(...);
   *** getDividerDrawable(...);
   *** setDividerDrawable(...);
   *** getDividerPadding(...);
   *** setDividerPadding(...);
   *** getDividerWidth(...);
   *** getGravity(...);
   *** setGravity(...);
   *** isMeasureWithLargestChildEnabled(...);
   *** setMeasureWithLargestChildEnabled(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getShowDividers(...);
   *** setShowDividers(...);
   *** getWeightSum(...);
   *** setWeightSum(...);
   *** hasDividerBeforeChildAt(...);
   *** onLayout(...);
   *** setHorizontalGravity(...);
   *** setVerticalGravity(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class androidx.appcompat.widget.SwitchCompat
-keepclassmembers class androidx.appcompat.widget.SwitchCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getShowText(...);
   *** setShowText(...);
   *** getSplitTrack(...);
   *** setSplitTrack(...);
   *** getSwitchMinWidth(...);
   *** setSwitchMinWidth(...);
   *** getSwitchPadding(...);
   *** setSwitchPadding(...);
   *** getTextOff(...);
   *** setTextOff(...);
   *** getTextOn(...);
   *** setTextOn(...);
   *** getThumbDrawable(...);
   *** setThumbDrawable(...);
   *** getThumbTextPadding(...);
   *** setThumbTextPadding(...);
   *** getThumbTintList(...);
   *** setThumbTintList(...);
   *** getThumbTintMode(...);
   *** setThumbTintMode(...);
   *** getTrackDrawable(...);
   *** setTrackDrawable(...);
   *** getTrackTintList(...);
   *** setTrackTintList(...);
   *** getTrackTintMode(...);
   *** setTrackTintMode(...);
   *** onMeasure(...);
   *** setSwitchTextAppearance(...);
   *** setSwitchTypeface(...);
   *** setSwitchTypeface(...);
   *** setThumbResource(...);
   *** setTrackResource(...);
}

-keep class androidx.appcompat.view.ActionMode$Callback
-keepclassmembers class androidx.appcompat.view.ActionMode$Callback {
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.menu.MenuBuilder$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder$Callback {
}

-keep class androidx.appcompat.view.menu.MenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class androidx.appcompat.view.menu.MenuPresenter$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter$Callback {
}

-keep class androidx.appcompat.view.menu.MenuPresenter
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter {
}

-keep class androidx.appcompat.view.menu.MenuView$ItemView
-keepclassmembers class androidx.appcompat.view.menu.MenuView$ItemView {
}

-keep class androidx.appcompat.view.menu.MenuView
-keepclassmembers class androidx.appcompat.view.menu.MenuView {
}

-keep class androidx.appcompat.view.menu.MenuItemImpl
-keepclassmembers class androidx.appcompat.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** requiresOverflow(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class androidx.appcompat.view.menu.SubMenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.AndroidX.Arch.Core.Common
-keep class androidx.arch.core.util.Function
-keepclassmembers class androidx.arch.core.util.Function {
}

-keep class androidx.arch.core.internal.FastSafeIterableMap
-keepclassmembers class androidx.arch.core.internal.FastSafeIterableMap {
   <init>(...);
   *** ceil(...);
   *** contains(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$Entry
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$Entry {
   *** getKey(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$ListIterator
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$ListIterator {
   *** hasNext(...);
   *** next(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$ListIterator
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$ListIterator {
}

-keep class androidx.arch.core.internal.SafeIterableMap
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap {
   <init>(...);
   *** descendingIterator(...);
   *** eldest(...);
   *** get(...);
   *** iterator(...);
   *** newest(...);
   *** put(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** size(...);
}

# ACW for Xamarin.AndroidX.Arch.Core.Runtime
-keep class androidx.arch.core.executor.ArchTaskExecutor
-keepclassmembers class androidx.arch.core.executor.ArchTaskExecutor {
   *** getIOThreadExecutor(...);
   *** getInstance(...);
   *** isMainThread(...);
   *** getMainThreadExecutor(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
   *** setDelegate(...);
}

-keep class androidx.arch.core.executor.DefaultTaskExecutor
-keepclassmembers class androidx.arch.core.executor.DefaultTaskExecutor {
   <init>(...);
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
}

-keep class androidx.arch.core.executor.TaskExecutor
-keepclassmembers class androidx.arch.core.executor.TaskExecutor {
   <init>(...);
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** executeOnMainThread(...);
   *** postToMainThread(...);
}

-keep class androidx.arch.core.executor.TaskExecutor
-keepclassmembers class androidx.arch.core.executor.TaskExecutor {
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
}

# ACW for Xamarin.AndroidX.AsyncLayoutInflater
-keep class androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener
-keepclassmembers class androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener {
}

-keep class mono.androidx.asynclayoutinflater.view.AsyncLayoutInflater_OnInflateFinishedListenerImplementor
-keepclassmembers class mono.androidx.asynclayoutinflater.view.AsyncLayoutInflater_OnInflateFinishedListenerImplementor {
}

-keep class androidx.asynclayoutinflater.view.AsyncLayoutInflater
-keepclassmembers class androidx.asynclayoutinflater.view.AsyncLayoutInflater {
   <init>(...);
   *** inflate(...);
}

# ACW for Xamarin.AndroidX.Browser
-keep class androidx.browser.customtabs.CustomTabColorSchemeParams
-keepclassmembers class androidx.browser.customtabs.CustomTabColorSchemeParams {
}

-keep class androidx.browser.customtabs.CustomTabsIntent$Builder
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$Builder {
   <init>(...);
   <init>(...);
   *** addDefaultShareMenuItem(...);
   *** addMenuItem(...);
   *** addToolbarItem(...);
   *** build(...);
   *** enableUrlBarHiding(...);
   *** setActionButton(...);
   *** setActionButton(...);
   *** setCloseButtonIcon(...);
   *** setColorScheme(...);
   *** setColorSchemeParams(...);
   *** setDefaultColorSchemeParams(...);
   *** setDefaultShareMenuItemEnabled(...);
   *** setExitAnimations(...);
   *** setInstantAppsEnabled(...);
   *** setNavigationBarColor(...);
   *** setNavigationBarDividerColor(...);
   *** setPendingSession(...);
   *** setSecondaryToolbarColor(...);
   *** setSecondaryToolbarViews(...);
   *** setSession(...);
   *** setShareState(...);
   *** setShowTitle(...);
   *** setStartAnimations(...);
   *** setToolbarColor(...);
   *** setUrlBarHidingEnabled(...);
}

-keep class androidx.browser.customtabs.CustomTabsIntent
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent {
   *** getMaxToolbarItems(...);
   *** getColorSchemeParams(...);
   *** launchUrl(...);
   *** setAlwaysUseBrowserUI(...);
   *** shouldAlwaysUseBrowserUI(...);
}

-keep class androidx.browser.customtabs.CustomTabsSession$PendingSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession$PendingSession {
}

-keep class androidx.browser.customtabs.CustomTabsSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession {
   *** createMockSessionForTesting(...);
   *** mayLaunchUrl(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** setActionButton(...);
   *** setSecondaryToolbarViews(...);
   *** setToolbarItem(...);
   *** validateRelationship(...);
}

# ACW for Xamarin.AndroidX.CardView
-keep class androidx.cardview.widget.CardView
-keepclassmembers class androidx.cardview.widget.CardView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCardBackgroundColor(...);
   *** setCardBackgroundColor(...);
   *** getCardElevation(...);
   *** setCardElevation(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingTop(...);
   *** getMaxCardElevation(...);
   *** setMaxCardElevation(...);
   *** getPreventCornerOverlap(...);
   *** setPreventCornerOverlap(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** setCardBackgroundColor(...);
   *** setContentPadding(...);
}

# ACW for Xamarin.AndroidX.Collection
-keep class androidx.collection.LongSparseArray
-keepclassmembers class androidx.collection.LongSparseArray {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.collection.SparseArrayCompat
-keepclassmembers class androidx.collection.SparseArrayCompat {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** removeAtRange(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

# ACW for Xamarin.AndroidX.CoordinatorLayout
-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
   <init>(...);
   <init>(...);
   *** blocksInteractionBelow(...);
   *** getInsetDodgeRect(...);
   *** getScrimColor(...);
   *** getScrimOpacity(...);
   *** getTag(...);
   *** layoutDependsOn(...);
   *** onApplyWindowInsets(...);
   *** onAttachedToLayoutParams(...);
   *** onDependentViewChanged(...);
   *** onDependentViewRemoved(...);
   *** onDetachedFromLayoutParams(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onRequestChildRectangleOnScreen(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** setTag(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchorId(...);
   *** setAnchorId(...);
   *** getBehavior(...);
   *** setBehavior(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

# ACW for Xamarin.AndroidX.Core
-keep class androidx.core.widget.CompoundButtonCompat
-keepclassmembers class androidx.core.widget.CompoundButtonCompat {
   *** getButtonDrawable(...);
   *** getButtonTintList(...);
   *** getButtonTintMode(...);
   *** setButtonTintList(...);
   *** setButtonTintMode(...);
}

-keep class androidx.core.widget.AutoSizeableTextView
-keepclassmembers class androidx.core.widget.AutoSizeableTextView {
}

-keep class androidx.core.widget.TintableCompoundButton
-keepclassmembers class androidx.core.widget.TintableCompoundButton {
}

-keep class androidx.core.widget.TintableCompoundDrawablesView
-keepclassmembers class androidx.core.widget.TintableCompoundDrawablesView {
}

-keep class androidx.core.widget.TintableImageSourceView
-keepclassmembers class androidx.core.widget.TintableImageSourceView {
}

-keep class androidx.core.widget.NestedScrollView$OnScrollChangeListener
-keepclassmembers class androidx.core.widget.NestedScrollView$OnScrollChangeListener {
}

-keep class mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor
-keepclassmembers class mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor {
}

-keep class androidx.core.widget.NestedScrollView
-keepclassmembers class androidx.core.widget.NestedScrollView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFillViewport(...);
   *** setFillViewport(...);
   *** getMaxScrollAmount(...);
   *** isSmoothScrollingEnabled(...);
   *** setSmoothScrollingEnabled(...);
   *** arrowScroll(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeScrollDeltaToGetChildRectOnScreen(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** executeKeyEvent(...);
   *** fling(...);
   *** fullScroll(...);
   *** hasNestedScrollingParent(...);
   *** onAttachedToWindow(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** pageScroll(...);
   *** setOnScrollChangeListener(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollTo(...);
   *** smoothScrollTo(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** onNestedScrollAccepted(...);
}

-keep class androidx.core.widget.TextViewCompat
-keepclassmembers class androidx.core.widget.TextViewCompat {
   *** getAutoSizeMaxTextSize(...);
   *** getAutoSizeMinTextSize(...);
   *** getAutoSizeStepGranularity(...);
   *** getAutoSizeTextAvailableSizes(...);
   *** getAutoSizeTextType(...);
   *** getCompoundDrawableTintList(...);
   *** getCompoundDrawableTintMode(...);
   *** getCompoundDrawablesRelative(...);
   *** getFirstBaselineToTopHeight(...);
   *** getLastBaselineToBottomHeight(...);
   *** getMaxLines(...);
   *** getMinLines(...);
   *** getTextMetricsParams(...);
   *** setAutoSizeTextTypeUniformWithConfiguration(...);
   *** setAutoSizeTextTypeUniformWithPresetSizes(...);
   *** setAutoSizeTextTypeWithDefaults(...);
   *** setCompoundDrawableTintList(...);
   *** setCompoundDrawableTintMode(...);
   *** setCompoundDrawablesRelative(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCustomSelectionActionModeCallback(...);
   *** setFirstBaselineToTopHeight(...);
   *** setLastBaselineToBottomHeight(...);
   *** setLineHeight(...);
   *** setPrecomputedText(...);
   *** setTextAppearance(...);
   *** setTextMetricsParams(...);
   *** wrapCustomSelectionActionModeCallback(...);
}

-keep class androidx.core.view.AccessibilityDelegateCompat
-keepclassmembers class androidx.core.view.AccessibilityDelegateCompat {
   <init>(...);
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class androidx.core.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider$VisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$VisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class androidx.core.view.DisplayCutoutCompat
-keepclassmembers class androidx.core.view.DisplayCutoutCompat {
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
}

-keep class androidx.core.view.DragAndDropPermissionsCompat
-keepclassmembers class androidx.core.view.DragAndDropPermissionsCompat {
   *** release(...);
   *** request(...);
}

-keep class androidx.core.view.NestedScrollingChild
-keepclassmembers class androidx.core.view.NestedScrollingChild {
}

-keep class androidx.core.view.NestedScrollingChild2
-keepclassmembers class androidx.core.view.NestedScrollingChild2 {
}

-keep class androidx.core.view.NestedScrollingChild3
-keepclassmembers class androidx.core.view.NestedScrollingChild3 {
}

-keep class androidx.core.view.NestedScrollingParent
-keepclassmembers class androidx.core.view.NestedScrollingParent {
}

-keep class androidx.core.view.NestedScrollingParent2
-keepclassmembers class androidx.core.view.NestedScrollingParent2 {
}

-keep class androidx.core.view.NestedScrollingParent3
-keepclassmembers class androidx.core.view.NestedScrollingParent3 {
}

-keep class androidx.core.view.OnApplyWindowInsetsListener
-keepclassmembers class androidx.core.view.OnApplyWindowInsetsListener {
}

-keep class androidx.core.view.ScrollingView
-keepclassmembers class androidx.core.view.ScrollingView {
}

-keep class androidx.core.view.TintableBackgroundView
-keepclassmembers class androidx.core.view.TintableBackgroundView {
}

-keep class androidx.core.view.ViewPropertyAnimatorListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorListener {
}

-keep class androidx.core.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorUpdateListener {
}

-keep class androidx.core.view.KeyEventDispatcher$Component
-keepclassmembers class androidx.core.view.KeyEventDispatcher$Component {
}

-keep class androidx.core.view.KeyEventDispatcher
-keepclassmembers class androidx.core.view.KeyEventDispatcher {
   *** dispatchBeforeHierarchy(...);
   *** dispatchKeyEvent(...);
}

-keep class androidx.core.view.MenuItemCompat$OnActionExpandListener
-keepclassmembers class androidx.core.view.MenuItemCompat$OnActionExpandListener {
}

-keep class androidx.core.view.MenuItemCompat
-keepclassmembers class androidx.core.view.MenuItemCompat {
   *** collapseActionView(...);
   *** expandActionView(...);
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getContentDescription(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getNumericModifiers(...);
   *** getTooltipText(...);
   *** isActionViewExpanded(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setAlphabeticShortcut(...);
   *** setContentDescription(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setTooltipText(...);
}

-keep class androidx.core.view.PointerIconCompat
-keepclassmembers class androidx.core.view.PointerIconCompat {
   *** getPointerIcon(...);
   *** create(...);
   *** getSystemIcon(...);
   *** load(...);
}

-keep class androidx.core.view.ScaleGestureDetectorCompat
-keepclassmembers class androidx.core.view.ScaleGestureDetectorCompat {
   *** isQuickScaleEnabled(...);
   *** isQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
}

-keep class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat
-keepclassmembers class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat {
}

-keep class androidx.core.view.ViewCompat
-keepclassmembers class androidx.core.view.ViewCompat {
   <init>(...);
   *** addAccessibilityAction(...);
   *** addKeyboardNavigationClusters(...);
   *** addOnUnhandledKeyEventListener(...);
   *** animate(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** cancelDragAndDrop(...);
   *** combineMeasuredStates(...);
   *** computeSystemWindowInsets(...);
   *** dispatchApplyWindowInsets(...);
   *** dispatchFinishTemporaryDetach(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchStartTemporaryDetach(...);
   *** enableAccessibleClickableSpanSupport(...);
   *** generateViewId(...);
   *** getAccessibilityDelegate(...);
   *** getAccessibilityLiveRegion(...);
   *** getAccessibilityNodeProvider(...);
   *** getAccessibilityPaneTitle(...);
   *** getAlpha(...);
   *** getBackgroundTintList(...);
   *** getBackgroundTintMode(...);
   *** getClipBounds(...);
   *** getDisplay(...);
   *** getElevation(...);
   *** getFitsSystemWindows(...);
   *** getImportantForAccessibility(...);
   *** getImportantForAutofill(...);
   *** getLabelFor(...);
   *** getLayerType(...);
   *** getLayoutDirection(...);
   *** getMatrix(...);
   *** getMeasuredHeightAndState(...);
   *** getMeasuredState(...);
   *** getMeasuredWidthAndState(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getNextClusterForwardId(...);
   *** getOverScrollMode(...);
   *** getPaddingEnd(...);
   *** getPaddingStart(...);
   *** getParentForAccessibility(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRootWindowInsets(...);
   *** getRotation(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getScrollIndicators(...);
   *** getSystemGestureExclusionRects(...);
   *** getTransitionName(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getWindowSystemUiVisibility(...);
   *** getX(...);
   *** getY(...);
   *** getZ(...);
   *** hasAccessibilityDelegate(...);
   *** hasExplicitFocusable(...);
   *** hasNestedScrollingParent(...);
   *** hasNestedScrollingParent(...);
   *** hasOnClickListeners(...);
   *** hasOverlappingRendering(...);
   *** hasTransientState(...);
   *** isAccessibilityHeading(...);
   *** isAttachedToWindow(...);
   *** isFocusedByDefault(...);
   *** isImportantForAccessibility(...);
   *** isImportantForAutofill(...);
   *** isInLayout(...);
   *** isKeyboardNavigationCluster(...);
   *** isLaidOut(...);
   *** isLayoutDirectionResolved(...);
   *** isNestedScrollingEnabled(...);
   *** isOpaque(...);
   *** isPaddingRelative(...);
   *** isScreenReaderFocusable(...);
   *** jumpDrawablesToCurrentState(...);
   *** keyboardNavigationClusterSearch(...);
   *** offsetLeftAndRight(...);
   *** offsetTopAndBottom(...);
   *** onApplyWindowInsets(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** postInvalidateOnAnimation(...);
   *** postInvalidateOnAnimation(...);
   *** postOnAnimation(...);
   *** postOnAnimationDelayed(...);
   *** removeAccessibilityAction(...);
   *** removeOnUnhandledKeyEventListener(...);
   *** replaceAccessibilityAction(...);
   *** requestApplyInsets(...);
   *** requireViewById(...);
   *** resolveSizeAndState(...);
   *** restoreDefaultFocus(...);
   *** saveAttributeDataForStyleable(...);
   *** setAccessibilityDelegate(...);
   *** setAccessibilityHeading(...);
   *** setAccessibilityLiveRegion(...);
   *** setAccessibilityPaneTitle(...);
   *** setActivated(...);
   *** setAlpha(...);
   *** setAutofillHints(...);
   *** setBackground(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setChildrenDrawingOrderEnabled(...);
   *** setClipBounds(...);
   *** setElevation(...);
   *** setFitsSystemWindows(...);
   *** setFocusedByDefault(...);
   *** setHasTransientState(...);
   *** setImportantForAccessibility(...);
   *** setImportantForAutofill(...);
   *** setKeyboardNavigationCluster(...);
   *** setLabelFor(...);
   *** setLayerPaint(...);
   *** setLayerType(...);
   *** setLayoutDirection(...);
   *** setNestedScrollingEnabled(...);
   *** setNextClusterForwardId(...);
   *** setOnApplyWindowInsetsListener(...);
   *** setOverScrollMode(...);
   *** setPaddingRelative(...);
   *** setPivotX(...);
   *** setPivotY(...);
   *** setPointerIcon(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setSaveFromParentEnabled(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setScreenReaderFocusable(...);
   *** setScrollIndicators(...);
   *** setScrollIndicators(...);
   *** setSystemGestureExclusionRects(...);
   *** setTooltipText(...);
   *** setTransitionName(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setX(...);
   *** setY(...);
   *** setZ(...);
   *** startDragAndDrop(...);
   *** startNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopNestedScroll(...);
   *** updateDragShadow(...);
}

-keep class androidx.core.view.ViewPropertyAnimatorCompat
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class androidx.core.view.WindowInsetsCompat
-keepclassmembers class androidx.core.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getMandatorySystemGestureInsets(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getStableInsets(...);
   *** getSystemGestureInsets(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** getSystemWindowInsets(...);
   *** getTappableElementInsets(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** inset(...);
   *** inset(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** toWindowInsets(...);
   *** toWindowInsetsCompat(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
   *** createReplacementAction(...);
   *** perform(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** getSelectionMode(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat {
   <init>(...);
   *** getRegionCount(...);
   *** getRegionAt(...);
   *** getTargetForRegion(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isContextClickable(...);
   *** setContextClickable(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** getDrawingOrder(...);
   *** setDrawingOrder(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** isHeading(...);
   *** setHeading(...);
   *** getHintText(...);
   *** setHintText(...);
   *** isImportantForAccessibility(...);
   *** setImportantForAccessibility(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getPaneTitle(...);
   *** setPaneTitle(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** getRoleDescription(...);
   *** setRoleDescription(...);
   *** isScreenReaderFocusable(...);
   *** setScreenReaderFocusable(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** isShowingHintText(...);
   *** setShowingHintText(...);
   *** getText(...);
   *** setText(...);
   *** isTextEntryKey(...);
   *** setTextEntryKey(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTooltipText(...);
   *** setTooltipText(...);
   *** getTouchDelegateInfo(...);
   *** setTouchDelegateInfo(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** addSpansToExtras(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** getClickableSpans(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class androidx.core.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityWindowInfoCompat {
   *** getAnchor(...);
   *** getChildCount(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** getLayer(...);
   *** getParent(...);
   *** getRoot(...);
   *** getTitle(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
   <init>(...);
   *** setBundle(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand {
}

-keep class androidx.core.util.Pair
-keepclassmembers class androidx.core.util.Pair {
   <init>(...);
   *** create(...);
}

-keep class androidx.core.internal.view.SupportMenu
-keepclassmembers class androidx.core.internal.view.SupportMenu {
}

-keep class androidx.core.internal.view.SupportMenuItem
-keepclassmembers class androidx.core.internal.view.SupportMenuItem {
}

-keep class androidx.core.graphics.Insets
-keepclassmembers class androidx.core.graphics.Insets {
   *** of(...);
   *** of(...);
}

-keep class androidx.core.graphics.drawable.DrawableCompat
-keepclassmembers class androidx.core.graphics.drawable.DrawableCompat {
   *** applyTheme(...);
   *** canApplyTheme(...);
   *** clearColorFilter(...);
   *** getAlpha(...);
   *** getColorFilter(...);
   *** getLayoutDirection(...);
   *** inflate(...);
   *** isAutoMirrored(...);
   *** jumpToCurrentState(...);
   *** setAutoMirrored(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setLayoutDirection(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.content.ContextCompat
-keepclassmembers class androidx.core.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createDeviceProtectedStorageContext(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDataDir(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getMainExecutor(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class androidx.core.content.FileProvider
-keepclassmembers class androidx.core.content.FileProvider {
   <init>(...);
   *** delete(...);
   *** getType(...);
   *** getUriForFile(...);
   *** insert(...);
   *** onCreate(...);
   *** query(...);
   *** update(...);
}

-keep class androidx.core.content.PermissionChecker
-keepclassmembers class androidx.core.content.PermissionChecker {
   *** checkCallingOrSelfPermission(...);
   *** checkCallingPermission(...);
   *** checkPermission(...);
   *** checkSelfPermission(...);
}

-keep class androidx.core.content.pm.PackageInfoCompat
-keepclassmembers class androidx.core.content.pm.PackageInfoCompat {
   *** getLongVersionCode(...);
}

-keep class androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
-keepclassmembers class androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback {
}

-keep class androidx.core.app.ActivityCompat$PermissionCompatDelegate
-keepclassmembers class androidx.core.app.ActivityCompat$PermissionCompatDelegate {
}

-keep class androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
-keepclassmembers class androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator {
}

-keep class androidx.core.app.ActivityCompat
-keepclassmembers class androidx.core.app.ActivityCompat {
   <init>(...);
   *** getPermissionCompatDelegate(...);
   *** setPermissionCompatDelegate(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** postponeEnterTransition(...);
   *** recreate(...);
   *** requestDragAndDropPermissions(...);
   *** requestPermissions(...);
   *** requireViewById(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class androidx.core.app.ComponentActivity$ExtraData
-keepclassmembers class androidx.core.app.ComponentActivity$ExtraData {
   <init>(...);
}

-keep class androidx.core.app.ComponentActivity
-keepclassmembers class androidx.core.app.ComponentActivity {
   <init>(...);
   *** getLifecycle(...);
   *** getExtraData(...);
   *** putExtraData(...);
   *** superDispatchKeyEvent(...);
}

-keep class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
}

-keep class androidx.core.app.TaskStackBuilder$SupportParentable
-keepclassmembers class androidx.core.app.TaskStackBuilder$SupportParentable {
}

-keep class androidx.core.app.TaskStackBuilder
-keepclassmembers class androidx.core.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class androidx.core.text.PrecomputedTextCompat$Params
-keepclassmembers class androidx.core.text.PrecomputedTextCompat$Params {
   *** getBreakStrategy(...);
   *** getHyphenationFrequency(...);
   *** getTextDirection(...);
   *** getTextPaint(...);
   *** equalsWithoutTextDirection(...);
}

-keep class androidx.core.text.PrecomputedTextCompat
-keepclassmembers class androidx.core.text.PrecomputedTextCompat {
   *** getParagraphCount(...);
   *** charAt(...);
   *** create(...);
   *** getParagraphEnd(...);
   *** getParagraphStart(...);
   *** getParams(...);
   *** getSpanEnd(...);
   *** getSpanFlags(...);
   *** getSpanStart(...);
   *** getSpans(...);
   *** getTextFuture(...);
   *** length(...);
   *** nextSpanTransition(...);
   *** removeSpan(...);
   *** setSpan(...);
   *** subSequence(...);
}

# ACW for Xamarin.AndroidX.CursorAdapter
-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCount(...);
   *** getCursor(...);
   *** getFilter(...);
   *** getFilterQueryProvider(...);
   *** setFilterQueryProvider(...);
   *** bindView(...);
   *** changeCursor(...);
   *** convertToString(...);
   *** getItem(...);
   *** getItemId(...);
   *** getView(...);
   *** init(...);
   *** newDropDownView(...);
   *** newView(...);
   *** onContentChanged(...);
   *** runQueryOnBackgroundThread(...);
   *** swapCursor(...);
}

-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   *** bindView(...);
   *** newView(...);
}

-keep class androidx.cursoradapter.widget.CursorFilter
-keepclassmembers class androidx.cursoradapter.widget.CursorFilter {
   *** performFiltering(...);
   *** publishResults(...);
}

-keep class androidx.cursoradapter.widget.ResourceCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.ResourceCursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** newView(...);
   *** setDropDownViewResource(...);
   *** setViewResource(...);
}

-keep class androidx.cursoradapter.widget.ResourceCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.ResourceCursorAdapter {
   *** bindView(...);
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter {
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder {
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter {
   <init>(...);
   <init>(...);
   *** getCursorToStringConverter(...);
   *** setCursorToStringConverter(...);
   *** getStringConversionColumn(...);
   *** setStringConversionColumn(...);
   *** getViewBinder(...);
   *** setViewBinder(...);
   *** bindView(...);
   *** changeCursorAndColumns(...);
   *** setViewImage(...);
   *** setViewText(...);
}

# ACW for Xamarin.AndroidX.CustomView
-keep class androidx.customview.widget.Openable
-keepclassmembers class androidx.customview.widget.Openable {
}

# ACW for Xamarin.AndroidX.DocumentFile
-keep class androidx.documentfile.provider.DocumentFile
-keepclassmembers class androidx.documentfile.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** isVirtual(...);
   *** getName(...);
   *** getParentFile(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** findFile(...);
   *** fromFile(...);
   *** fromSingleUri(...);
   *** fromTreeUri(...);
   *** isDocumentUri(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

-keep class androidx.documentfile.provider.DocumentFile
-keepclassmembers class androidx.documentfile.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** isVirtual(...);
   *** getName(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

# ACW for Xamarin.AndroidX.DrawerLayout
-keep class androidx.drawerlayout.widget.DrawerLayout$DrawerListener
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$DrawerListener {
}

-keep class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class androidx.drawerlayout.widget.DrawerLayout$LayoutParams
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.drawerlayout.widget.DrawerLayout
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** isOpen(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** close(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** open(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.AndroidX.Fragment
-keep class androidx.fragment.app.FragmentActivity
-keepclassmembers class androidx.fragment.app.FragmentActivity {
   <init>(...);
   <init>(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** onAttachFragment(...);
   *** onPrepareOptionsPanel(...);
   *** onResumeFragments(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class androidx.fragment.app.Fragment$SavedState
-keepclassmembers class androidx.fragment.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.fragment.app.Fragment
-keepclassmembers class androidx.fragment.app.Fragment {
   <init>(...);
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getParentFragmentManager(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSavedStateRegistry(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onPrimaryNavigationFragmentChanged(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** postponeEnterTransition(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireArguments(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** requireParentFragment(...);
   *** requireView(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class androidx.fragment.app.FragmentFactory
-keepclassmembers class androidx.fragment.app.FragmentFactory {
   <init>(...);
   *** instantiate(...);
   *** loadFragmentClass(...);
}

-keep class androidx.fragment.app.FragmentManager$BackStackEntry
-keepclassmembers class androidx.fragment.app.FragmentManager$BackStackEntry {
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class androidx.fragment.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class androidx.fragment.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragmentFactory(...);
   *** setFragmentFactory(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragment(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
}

-keep class androidx.fragment.app.FragmentPagerAdapter
-keepclassmembers class androidx.fragment.app.FragmentPagerAdapter {
   <init>(...);
   <init>(...);
   *** getItem(...);
   *** getItemId(...);
   *** isViewFromObject(...);
}

-keep class androidx.fragment.app.FragmentPagerAdapter
-keepclassmembers class androidx.fragment.app.FragmentPagerAdapter {
   *** getItem(...);
   *** getCount(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setMaxLifecycle(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
}

# ACW for Xamarin.AndroidX.Interpolator
-keep class androidx.interpolator.view.animation.FastOutLinearInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.FastOutLinearInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.FastOutSlowInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.FastOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LinearOutSlowInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LinearOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LookupTableInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LookupTableInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LookupTableInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LookupTableInterpolator {
}

# ACW for Xamarin.AndroidX.Legacy.Support.Core.UI
-keep class androidx.legacy.app.ActionBarDrawerToggle
-keepclassmembers class androidx.legacy.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

# ACW for Xamarin.AndroidX.Legacy.Support.Core.Utils
-keep class androidx.legacy.content.WakefulBroadcastReceiver
-keepclassmembers class androidx.legacy.content.WakefulBroadcastReceiver {
   <init>(...);
   *** completeWakefulIntent(...);
   *** startWakefulService(...);
}

-keep class androidx.legacy.content.WakefulBroadcastReceiver
-keepclassmembers class androidx.legacy.content.WakefulBroadcastReceiver {
   *** onReceive(...);
}

# ACW for Xamarin.AndroidX.Legacy.Support.V4
# ACW for Xamarin.AndroidX.Lifecycle.Common
-keep class androidx.lifecycle.Lifecycle$State
-keepclassmembers class androidx.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class androidx.lifecycle.LifecycleObserver
-keepclassmembers class androidx.lifecycle.LifecycleObserver {
}

-keep class androidx.lifecycle.LifecycleOwner
-keepclassmembers class androidx.lifecycle.LifecycleOwner {
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData.Core
-keep class androidx.lifecycle.Observer
-keepclassmembers class androidx.lifecycle.Observer {
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
   <init>(...);
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData
-keep class androidx.lifecycle.ComputableLiveData
-keepclassmembers class androidx.lifecycle.ComputableLiveData {
   <init>(...);
   <init>(...);
   *** getLiveData(...);
   *** compute(...);
   *** invalidate(...);
}

-keep class androidx.lifecycle.ComputableLiveData
-keepclassmembers class androidx.lifecycle.ComputableLiveData {
   *** compute(...);
}

-keep class androidx.lifecycle.MediatorLiveData
-keepclassmembers class androidx.lifecycle.MediatorLiveData {
   <init>(...);
   *** addSource(...);
   *** removeSource(...);
}

-keep class androidx.lifecycle.Transformations
-keepclassmembers class androidx.lifecycle.Transformations {
   *** distinctUntilChanged(...);
   *** map(...);
   *** switchMap(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.Runtime
-keep class androidx.lifecycle.LifecycleRegistry
-keepclassmembers class androidx.lifecycle.LifecycleRegistry {
   <init>(...);
   *** getCurrentState(...);
   *** getObserverCount(...);
   *** addObserver(...);
   *** handleLifecycleEvent(...);
   *** markState(...);
   *** removeObserver(...);
   *** setCurrentState(...);
}

-keep class androidx.lifecycle.ReportFragment
-keepclassmembers class androidx.lifecycle.ReportFragment {
   <init>(...);
   *** injectIfNeededIn(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModel
-keep class androidx.lifecycle.HasDefaultViewModelProviderFactory
-keepclassmembers class androidx.lifecycle.HasDefaultViewModelProviderFactory {
}

-keep class androidx.lifecycle.ViewModelStoreOwner
-keepclassmembers class androidx.lifecycle.ViewModelStoreOwner {
}

-keep class androidx.lifecycle.ViewModelProvider$Factory
-keepclassmembers class androidx.lifecycle.ViewModelProvider$Factory {
}

-keep class androidx.lifecycle.ViewModelProvider
-keepclassmembers class androidx.lifecycle.ViewModelProvider {
   <init>(...);
   <init>(...);
   <init>(...);
   *** get(...);
   *** get(...);
}

-keep class androidx.lifecycle.ViewModelStore
-keepclassmembers class androidx.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModelSavedState
-keep class androidx.lifecycle.SavedStateHandle
-keepclassmembers class androidx.lifecycle.SavedStateHandle {
   <init>(...);
   <init>(...);
   *** contains(...);
   *** get(...);
   *** getLiveData(...);
   *** getLiveData(...);
   *** keys(...);
   *** remove(...);
   *** set(...);
}

# ACW for Xamarin.AndroidX.Loader
-keep class androidx.loader.content.Loader$OnLoadCanceledListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCanceledListener {
}

-keep class androidx.loader.content.Loader$OnLoadCompleteListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCompleteListener {
}

-keep class androidx.loader.content.Loader
-keepclassmembers class androidx.loader.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class androidx.loader.app.LoaderManager$LoaderCallbacks
-keepclassmembers class androidx.loader.app.LoaderManager$LoaderCallbacks {
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.AndroidX.LocalBroadcastManager
-keep class androidx.localbroadcastmanager.content.LocalBroadcastManager
-keepclassmembers class androidx.localbroadcastmanager.content.LocalBroadcastManager {
   *** getInstance(...);
   *** registerReceiver(...);
   *** sendBroadcast(...);
   *** sendBroadcastSync(...);
   *** unregisterReceiver(...);
}

# ACW for Xamarin.AndroidX.Media
-keep class androidx.media.AudioAttributesCompat$AttributeContentType
-keepclassmembers class androidx.media.AudioAttributesCompat$AttributeContentType {
}

-keep class androidx.media.AudioAttributesCompat$AttributeUsage
-keepclassmembers class androidx.media.AudioAttributesCompat$AttributeUsage {
}

-keep class androidx.media.AudioAttributesCompat$Builder
-keepclassmembers class androidx.media.AudioAttributesCompat$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setContentType(...);
   *** setFlags(...);
   *** setLegacyStreamType(...);
   *** setUsage(...);
}

-keep class androidx.media.AudioAttributesCompat
-keepclassmembers class androidx.media.AudioAttributesCompat {
   <init>(...);
   *** getContentType(...);
   *** getFlags(...);
   *** getLegacyStreamType(...);
   *** getUsage(...);
   *** getVolumeControlStream(...);
   *** setForceLegacyBehavior(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.media.AudioAttributesCompatParcelizer
-keepclassmembers class androidx.media.AudioAttributesCompatParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class androidx.media.AudioAttributesImplBase
-keepclassmembers class androidx.media.AudioAttributesImplBase {
   <init>(...);
   *** getAudioAttributes(...);
   *** getContentType(...);
   *** getFlags(...);
   *** getLegacyStreamType(...);
   *** getRawLegacyStreamType(...);
   *** getUsage(...);
   *** getVolumeControlStream(...);
}

-keep class androidx.media.AudioAttributesImplBaseParcelizer
-keepclassmembers class androidx.media.AudioAttributesImplBaseParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class androidx.media.AudioFocusRequestCompat$Builder
-keepclassmembers class androidx.media.AudioFocusRequestCompat$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setAudioAttributes(...);
   *** setFocusGain(...);
   *** setOnAudioFocusChangeListener(...);
   *** setOnAudioFocusChangeListener(...);
   *** setWillPauseWhenDucked(...);
}

-keep class androidx.media.AudioFocusRequestCompat
-keepclassmembers class androidx.media.AudioFocusRequestCompat {
   *** getAudioAttributesCompat(...);
   *** getFocusChangeHandler(...);
   *** getFocusGain(...);
   *** getOnAudioFocusChangeListener(...);
   *** willPauseWhenDucked(...);
}

-keep class androidx.media.AudioManagerCompat
-keepclassmembers class androidx.media.AudioManagerCompat {
   *** abandonAudioFocusRequest(...);
   *** getStreamMaxVolume(...);
   *** getStreamMinVolume(...);
   *** requestAudioFocus(...);
}

-keep class androidx.media.AudioAttributesImpl$Builder
-keepclassmembers class androidx.media.AudioAttributesImpl$Builder {
}

-keep class androidx.media.AudioAttributesImpl
-keepclassmembers class androidx.media.AudioAttributesImpl {
}

-keep class androidx.media.MediaBrowserCompatUtils
-keepclassmembers class androidx.media.MediaBrowserCompatUtils {
   *** areSameOptions(...);
   *** hasDuplicatedItems(...);
}

-keep class androidx.media.MediaBrowserProtocol
-keepclassmembers class androidx.media.MediaBrowserProtocol {
}

-keep class androidx.media.MediaBrowserServiceCompat$BrowserRoot
-keepclassmembers class androidx.media.MediaBrowserServiceCompat$BrowserRoot {
   <init>(...);
   *** getExtras(...);
   *** getRootId(...);
}

-keep class androidx.media.MediaBrowserServiceCompat$Result
-keepclassmembers class androidx.media.MediaBrowserServiceCompat$Result {
   *** detach(...);
   *** sendError(...);
   *** sendProgressUpdate(...);
   *** sendResult(...);
}

-keep class androidx.media.MediaBrowserServiceCompat
-keepclassmembers class androidx.media.MediaBrowserServiceCompat {
   <init>(...);
   *** getBrowserRootHints(...);
   *** getCurrentBrowserInfo(...);
   *** getSessionToken(...);
   *** setSessionToken(...);
   *** attachToBaseContext(...);
   *** dump(...);
   *** notifyChildrenChanged(...);
   *** notifyChildrenChanged(...);
   *** notifyChildrenChanged(...);
   *** onBind(...);
   *** onCustomAction(...);
   *** onGetRoot(...);
   *** onLoadChildren(...);
   *** onLoadChildren(...);
   *** onLoadItem(...);
   *** onSearch(...);
   *** onSubscribe(...);
   *** onUnsubscribe(...);
}

-keep class androidx.media.MediaBrowserServiceCompat
-keepclassmembers class androidx.media.MediaBrowserServiceCompat {
   *** onGetRoot(...);
   *** onLoadChildren(...);
}

-keep class androidx.media.MediaSessionManager$RemoteUserInfo
-keepclassmembers class androidx.media.MediaSessionManager$RemoteUserInfo {
   <init>(...);
   <init>(...);
   *** getPackageName(...);
   *** getPid(...);
   *** getUid(...);
}

-keep class androidx.media.MediaSessionManager
-keepclassmembers class androidx.media.MediaSessionManager {
   *** getSessionManager(...);
   *** isTrustedForMediaControl(...);
}

-keep class androidx.media.VolumeProviderCompat$Callback
-keepclassmembers class androidx.media.VolumeProviderCompat$Callback {
   <init>(...);
   *** onVolumeChanged(...);
}

-keep class androidx.media.VolumeProviderCompat$Callback
-keepclassmembers class androidx.media.VolumeProviderCompat$Callback {
   *** onVolumeChanged(...);
}

-keep class androidx.media.VolumeProviderCompat$ControlType
-keepclassmembers class androidx.media.VolumeProviderCompat$ControlType {
}

-keep class androidx.media.VolumeProviderCompat
-keepclassmembers class androidx.media.VolumeProviderCompat {
   <init>(...);
   <init>(...);
   *** getCurrentVolume(...);
   *** setCurrentVolume(...);
   *** getMaxVolume(...);
   *** getVolumeControl(...);
   *** getVolumeControlId(...);
   *** getVolumeProvider(...);
   *** onAdjustVolume(...);
   *** onSetVolumeTo(...);
   *** setCallback(...);
}

-keep class androidx.media.VolumeProviderCompat
-keepclassmembers class androidx.media.VolumeProviderCompat {
}

-keep class androidx.media.utils.MediaConstants
-keepclassmembers class androidx.media.utils.MediaConstants {
}

-keep class androidx.media.session.MediaButtonReceiver
-keepclassmembers class androidx.media.session.MediaButtonReceiver {
   <init>(...);
   *** buildMediaButtonPendingIntent(...);
   *** buildMediaButtonPendingIntent(...);
   *** getMediaButtonReceiverComponent(...);
   *** handleIntent(...);
   *** onReceive(...);
}

-keep class androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle
-keepclassmembers class androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle {
   <init>(...);
}

-keep class androidx.media.app.NotificationCompat$MediaStyle
-keepclassmembers class androidx.media.app.NotificationCompat$MediaStyle {
   <init>(...);
   <init>(...);
   *** getMediaSession(...);
   *** setCancelButtonIntent(...);
   *** setMediaSession(...);
   *** setShowActionsInCompactView(...);
   *** setShowCancelButton(...);
}

-keep class androidx.media.app.NotificationCompat
-keepclassmembers class androidx.media.app.NotificationCompat {
}

-keep class android.support.v4.media.AudioAttributesCompatParcelizer
-keepclassmembers class android.support.v4.media.AudioAttributesCompatParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class android.support.v4.media.AudioAttributesImplBaseParcelizer
-keepclassmembers class android.support.v4.media.AudioAttributesImplBaseParcelizer {
   <init>(...);
   *** read(...);
   *** write(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CallbackHandler
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CallbackHandler {
}

-keep class android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal {
}

-keep class android.support.v4.media.MediaBrowserCompat$ConnectionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ConnectionCallback {
   <init>(...);
   *** onConnected(...);
   *** onConnectionFailed(...);
   *** onConnectionSuspended(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CustomActionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CustomActionCallback {
   <init>(...);
   *** onError(...);
   *** onProgressUpdate(...);
   *** onResult(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CustomActionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CustomActionCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$ItemCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ItemCallback {
   <init>(...);
   *** onError(...);
   *** onItemLoaded(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$ItemCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ItemCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$MediaItem
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$MediaItem {
   <init>(...);
   *** getDescription(...);
   *** getFlags(...);
   *** isBrowsable(...);
   *** isPlayable(...);
   *** getMediaId(...);
   *** describeContents(...);
   *** fromMediaItem(...);
   *** fromMediaItemList(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SearchCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SearchCallback {
   <init>(...);
   *** onError(...);
   *** onSearchResult(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SearchCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SearchCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper {
   <init>(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback {
   <init>(...);
   *** onChildrenLoaded(...);
   *** onChildrenLoaded(...);
   *** onError(...);
   *** onError(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat
-keepclassmembers class android.support.v4.media.MediaBrowserCompat {
   <init>(...);
   *** getExtras(...);
   *** isConnected(...);
   *** getNotifyChildrenChangedOptions(...);
   *** getRoot(...);
   *** getServiceComponent(...);
   *** getSessionToken(...);
   *** connect(...);
   *** disconnect(...);
   *** getItem(...);
   *** search(...);
   *** sendCustomAction(...);
   *** subscribe(...);
   *** subscribe(...);
   *** unsubscribe(...);
   *** unsubscribe(...);
}

-keep class android.support.v4.media.MediaDescriptionCompat$Builder
-keepclassmembers class android.support.v4.media.MediaDescriptionCompat$Builder {
   <init>(...);
   *** build(...);
   *** setDescription(...);
   *** setExtras(...);
   *** setIconBitmap(...);
   *** setIconUri(...);
   *** setMediaId(...);
   *** setMediaUri(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v4.media.MediaDescriptionCompat
-keepclassmembers class android.support.v4.media.MediaDescriptionCompat {
   *** getDescription(...);
   *** getExtras(...);
   *** getIconBitmap(...);
   *** getIconUri(...);
   *** getMediaDescription(...);
   *** getMediaId(...);
   *** getMediaUri(...);
   *** getSubtitle(...);
   *** getTitle(...);
   *** describeContents(...);
   *** fromMediaDescription(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaMetadataCompat$Builder
-keepclassmembers class android.support.v4.media.MediaMetadataCompat$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
   *** putBitmap(...);
   *** putLong(...);
   *** putRating(...);
   *** putString(...);
   *** putText(...);
}

-keep class android.support.v4.media.MediaMetadataCompat
-keepclassmembers class android.support.v4.media.MediaMetadataCompat {
   *** getBundle(...);
   *** getDescription(...);
   *** getMediaMetadata(...);
   *** containsKey(...);
   *** describeContents(...);
   *** fromMediaMetadata(...);
   *** getBitmap(...);
   *** getLong(...);
   *** getRating(...);
   *** getString(...);
   *** getText(...);
   *** keySet(...);
   *** size(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.RatingCompat$StarStyle
-keepclassmembers class android.support.v4.media.RatingCompat$StarStyle {
}

-keep class android.support.v4.media.RatingCompat$Style
-keepclassmembers class android.support.v4.media.RatingCompat$Style {
}

-keep class android.support.v4.media.RatingCompat
-keepclassmembers class android.support.v4.media.RatingCompat {
   *** hasHeart(...);
   *** isRated(...);
   *** isThumbUp(...);
   *** getPercentRating(...);
   *** getRating(...);
   *** getRatingStyle(...);
   *** getStarRating(...);
   *** describeContents(...);
   *** fromRating(...);
   *** newHeartRating(...);
   *** newPercentageRating(...);
   *** newStarRating(...);
   *** newThumbRating(...);
   *** newUnratedRating(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Default
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Default {
   <init>(...);
   *** asBinder(...);
   *** onCaptioningEnabledChanged(...);
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
   *** onShuffleModeChangedRemoved(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Stub
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Stub {
   <init>(...);
   *** getDefaultImpl(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** setDefaultImpl(...);
   *** onCaptioningEnabledChanged(...);
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
   *** onShuffleModeChangedRemoved(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback$Stub
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback$Stub {
   *** onCaptioningEnabledChanged(...);
   *** onEvent(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
   *** onShuffleModeChangedRemoved(...);
   *** onVolumeInfoChanged(...);
}

-keep class android.support.v4.media.session.IMediaControllerCallback
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback {
}

-keep class android.support.v4.media.session.IMediaSession$Default
-keepclassmembers class android.support.v4.media.session.IMediaSession$Default {
   <init>(...);
   *** isCaptioningEnabled(...);
   *** setCaptioningEnabled(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getSessionInfo(...);
   *** getShuffleMode(...);
   *** setShuffleMode(...);
   *** isShuffleModeEnabledRemoved(...);
   *** setShuffleModeEnabledRemoved(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
   *** addQueueItem(...);
   *** addQueueItemAt(...);
   *** adjustVolume(...);
   *** asBinder(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** previous(...);
   *** rate(...);
   *** rateWithExtras(...);
   *** registerCallbackListener(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setPlaybackSpeed(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
}

-keep class android.support.v4.media.session.IMediaSession$Stub
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub {
   <init>(...);
   *** getDefaultImpl(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** setDefaultImpl(...);
   *** addQueueItem(...);
   *** addQueueItemAt(...);
   *** adjustVolume(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** previous(...);
   *** rate(...);
   *** rateWithExtras(...);
   *** registerCallbackListener(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setPlaybackSpeed(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
   *** isCaptioningEnabled(...);
   *** setCaptioningEnabled(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getSessionInfo(...);
   *** getShuffleMode(...);
   *** setShuffleMode(...);
   *** isShuffleModeEnabledRemoved(...);
   *** setShuffleModeEnabledRemoved(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
}

-keep class android.support.v4.media.session.IMediaSession$Stub
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub {
   *** isCaptioningEnabled(...);
   *** setCaptioningEnabled(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isTransportControlEnabled(...);
   *** getLaunchPendingIntent(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getSessionInfo(...);
   *** getShuffleMode(...);
   *** setShuffleMode(...);
   *** isShuffleModeEnabledRemoved(...);
   *** setShuffleModeEnabledRemoved(...);
   *** getTag(...);
   *** getVolumeAttributes(...);
   *** addQueueItem(...);
   *** addQueueItemAt(...);
   *** adjustVolume(...);
   *** fastForward(...);
   *** next(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** previous(...);
   *** rate(...);
   *** rateWithExtras(...);
   *** registerCallbackListener(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendMediaButton(...);
   *** setPlaybackSpeed(...);
   *** setVolumeTo(...);
   *** skipToQueueItem(...);
   *** stop(...);
   *** unregisterCallbackListener(...);
}

-keep class android.support.v4.media.session.IMediaSession
-keepclassmembers class android.support.v4.media.session.IMediaSession {
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback {
   <init>(...);
   *** getIControllerCallback(...);
   *** binderDied(...);
   *** onAudioInfoChanged(...);
   *** onCaptioningEnabledChanged(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionEvent(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback {
}

-keep class android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$PlaybackInfo {
   *** getAudioAttributes(...);
   *** getAudioStream(...);
   *** getCurrentVolume(...);
   *** getMaxVolume(...);
   *** getPlaybackType(...);
   *** getVolumeControl(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControls
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControls {
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setCaptioningEnabled(...);
   *** setPlaybackSpeed(...);
   *** setRating(...);
   *** setRating(...);
   *** setRepeatMode(...);
   *** setShuffleMode(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControls
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControls {
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setCaptioningEnabled(...);
   *** setRating(...);
   *** setRating(...);
   *** setRepeatMode(...);
   *** setShuffleMode(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat {
   <init>(...);
   <init>(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isCaptioningEnabled(...);
   *** isSessionReady(...);
   *** getMediaController(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** getSession2Token(...);
   *** getSessionActivity(...);
   *** getSessionInfo(...);
   *** getSessionToken(...);
   *** getShuffleMode(...);
   *** addQueueItem(...);
   *** addQueueItem(...);
   *** adjustVolume(...);
   *** dispatchMediaButtonEvent(...);
   *** getMediaController(...);
   *** getPlaybackInfo(...);
   *** getTransportControls(...);
   *** registerCallback(...);
   *** registerCallback(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** sendCommand(...);
   *** setMediaController(...);
   *** setVolumeTo(...);
   *** unregisterCallback(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Callback {
   <init>(...);
   *** onAddQueueItem(...);
   *** onAddQueueItem(...);
   *** onCommand(...);
   *** onCustomAction(...);
   *** onFastForward(...);
   *** onMediaButtonEvent(...);
   *** onPause(...);
   *** onPlay(...);
   *** onPlayFromMediaId(...);
   *** onPlayFromSearch(...);
   *** onPlayFromUri(...);
   *** onPrepare(...);
   *** onPrepareFromMediaId(...);
   *** onPrepareFromSearch(...);
   *** onPrepareFromUri(...);
   *** onRemoveQueueItem(...);
   *** onRemoveQueueItemAt(...);
   *** onRewind(...);
   *** onSeekTo(...);
   *** onSetCaptioningEnabled(...);
   *** onSetPlaybackSpeed(...);
   *** onSetRating(...);
   *** onSetRating(...);
   *** onSetRepeatMode(...);
   *** onSetShuffleMode(...);
   *** onSkipToNext(...);
   *** onSkipToPrevious(...);
   *** onSkipToQueueItem(...);
   *** onStop(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Callback {
}

-keep class android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener {
}

-keep class mono.android.support.v4.media.session.MediaSessionCompat_OnActiveChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.media.session.MediaSessionCompat_OnActiveChangeListenerImplementor {
}

-keep class android.support.v4.media.session.MediaSessionCompat$QueueItem
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$QueueItem {
   <init>(...);
   *** getDescription(...);
   *** getQueueId(...);
   *** describeContents(...);
   *** fromQueueItem(...);
   *** fromQueueItemList(...);
   *** getQueueItem(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Token
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token {
   *** getExtraBinder(...);
   *** setExtraBinder(...);
   *** getSession2Token(...);
   *** setSession2Token(...);
   *** describeContents(...);
   *** fromBundle(...);
   *** fromToken(...);
   *** fromToken(...);
   *** getToken(...);
   *** toBundle(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isActive(...);
   *** setActive(...);
   *** getCallingPackage(...);
   *** getController(...);
   *** getCurrentControllerInfo(...);
   *** getMediaSession(...);
   *** getRemoteControlClient(...);
   *** getSessionToken(...);
   *** addOnActiveChangeListener(...);
   *** ensureClassLoader(...);
   *** fromMediaSession(...);
   *** release(...);
   *** removeOnActiveChangeListener(...);
   *** sendSessionEvent(...);
   *** setCallback(...);
   *** setCallback(...);
   *** setCaptioningEnabled(...);
   *** setExtras(...);
   *** setFlags(...);
   *** setMediaButtonReceiver(...);
   *** setMetadata(...);
   *** setPlaybackState(...);
   *** setPlaybackToLocal(...);
   *** setPlaybackToRemote(...);
   *** setQueue(...);
   *** setQueueTitle(...);
   *** setRatingType(...);
   *** setRepeatMode(...);
   *** setSessionActivity(...);
   *** setShuffleMode(...);
   *** unparcelWithClassLoader(...);
}

-keep class android.support.v4.media.session.ParcelableVolumeInfo
-keepclassmembers class android.support.v4.media.session.ParcelableVolumeInfo {
   <init>(...);
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$Actions
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$Actions {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$Builder
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$Builder {
   <init>(...);
   <init>(...);
   *** addCustomAction(...);
   *** addCustomAction(...);
   *** build(...);
   *** setActions(...);
   *** setActiveQueueItemId(...);
   *** setBufferedPosition(...);
   *** setErrorMessage(...);
   *** setErrorMessage(...);
   *** setExtras(...);
   *** setState(...);
   *** setState(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setExtras(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$CustomAction
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$CustomAction {
   *** getAction(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getName(...);
   *** describeContents(...);
   *** fromCustomAction(...);
   *** getCustomAction(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$RepeatMode
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$RepeatMode {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$ShuffleMode
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$ShuffleMode {
}

-keep class android.support.v4.media.session.PlaybackStateCompat$State
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$State {
}

-keep class android.support.v4.media.session.PlaybackStateCompat
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat {
   *** getActions(...);
   *** getActiveQueueItemId(...);
   *** getBufferedPosition(...);
   *** getCustomActions(...);
   *** getErrorCode(...);
   *** getErrorMessage(...);
   *** getExtras(...);
   *** getLastPositionUpdateTime(...);
   *** getPlaybackSpeed(...);
   *** getPlaybackState(...);
   *** getPosition(...);
   *** getState(...);
   *** describeContents(...);
   *** fromPlaybackState(...);
   *** getCurrentPosition(...);
   *** toKeyCode(...);
   *** writeToParcel(...);
}

# ACW for Xamarin.AndroidX.MultiDex
# ACW for Xamarin.AndroidX.Print
-keep class androidx.print.PrintHelper$OnPrintFinishCallback
-keepclassmembers class androidx.print.PrintHelper$OnPrintFinishCallback {
}

-keep class androidx.print.PrintHelper
-keepclassmembers class androidx.print.PrintHelper {
   <init>(...);
   *** getColorMode(...);
   *** setColorMode(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScaleMode(...);
   *** setScaleMode(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** systemSupportsPrint(...);
}

# ACW for Xamarin.AndroidX.RecyclerView
-keep class androidx.recyclerview.widget.GridLayoutManager$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   <init>(...);
   *** isSpanGroupIndexCacheEnabled(...);
   *** setSpanGroupIndexCacheEnabled(...);
   *** isSpanIndexCacheEnabled(...);
   *** setSpanIndexCacheEnabled(...);
   *** getSpanGroupIndex(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
   *** invalidateSpanGroupIndexCache(...);
   *** invalidateSpanIndexCache(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanCount(...);
   *** setSpanCount(...);
   *** isUsingSpansToEstimateScrollbarDimensions(...);
   *** setUsingSpansToEstimateScrollbarDimensions(...);
   *** getSpanSizeLookup(...);
   *** setSpanSizeLookup(...);
}

-keep class androidx.recyclerview.widget.ItemTouchUIUtil
-keepclassmembers class androidx.recyclerview.widget.ItemTouchUIUtil {
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   <init>(...);
   *** getBoundingBoxMargin(...);
   *** getDefaultUIUtil(...);
   *** isItemViewSwipeEnabled(...);
   *** isLongPressDragEnabled(...);
   *** canDropOver(...);
   *** chooseDropTarget(...);
   *** clearView(...);
   *** convertToAbsoluteDirection(...);
   *** convertToRelativeDirection(...);
   *** getAnimationDuration(...);
   *** getMoveThreshold(...);
   *** getMovementFlags(...);
   *** getSwipeEscapeVelocity(...);
   *** getSwipeThreshold(...);
   *** getSwipeVelocityThreshold(...);
   *** interpolateOutOfBoundsScroll(...);
   *** makeFlag(...);
   *** makeMovementFlags(...);
   *** onChildDraw(...);
   *** onChildDrawOver(...);
   *** onMove(...);
   *** onMoved(...);
   *** onSelectedChanged(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   *** getMovementFlags(...);
   *** onMove(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler {
}

-keep class androidx.recyclerview.widget.ItemTouchHelper
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** onChildViewAttachedToWindow(...);
   *** onChildViewDetachedFromWindow(...);
   *** startDrag(...);
   *** startSwipe(...);
}

-keep class androidx.recyclerview.widget.LinearLayoutManager
-keepclassmembers class androidx.recyclerview.widget.LinearLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialPrefetchItemCount(...);
   *** setInitialPrefetchItemCount(...);
   *** isLayoutRTL(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRecycleChildrenOnDetach(...);
   *** setRecycleChildrenOnDetach(...);
   *** getReverseLayout(...);
   *** setReverseLayout(...);
   *** isSmoothScrollbarEnabled(...);
   *** setSmoothScrollbarEnabled(...);
   *** getStackFromEnd(...);
   *** setStackFromEnd(...);
   *** calculateExtraLayoutSpace(...);
   *** computeScrollVectorForPosition(...);
   *** findFirstCompletelyVisibleItemPosition(...);
   *** findFirstVisibleItemPosition(...);
   *** findLastCompletelyVisibleItemPosition(...);
   *** findLastVisibleItemPosition(...);
   *** generateDefaultLayoutParams(...);
   *** getExtraLayoutSpace(...);
   *** prepareForDrop(...);
   *** scrollToPositionWithOffset(...);
}

-keep class androidx.recyclerview.widget.LinearSmoothScroller
-keepclassmembers class androidx.recyclerview.widget.LinearSmoothScroller {
   <init>(...);
   *** getHorizontalSnapPreference(...);
   *** getVerticalSnapPreference(...);
   *** calculateDtToFit(...);
   *** calculateDxToMakeVisible(...);
   *** calculateDyToMakeVisible(...);
   *** calculateSpeedPerPixel(...);
   *** calculateTimeForDeceleration(...);
   *** calculateTimeForScrolling(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** updateActionForInterimTarget(...);
}

-keep class androidx.recyclerview.widget.LinearSnapHelper
-keepclassmembers class androidx.recyclerview.widget.LinearSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getLayoutManager(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getTotalSpaceChange(...);
   *** createHorizontalHelper(...);
   *** createOrientationHelper(...);
   *** createVerticalHelper(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
   *** onLayoutComplete(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
}

-keep class androidx.recyclerview.widget.PagerSnapHelper
-keepclassmembers class androidx.recyclerview.widget.PagerSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   <init>(...);
   *** hasObservers(...);
   *** hasStableIds(...);
   *** setHasStableIds(...);
   *** getItemCount(...);
   *** bindViewHolder(...);
   *** createViewHolder(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** notifyDataSetChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemInserted(...);
   *** notifyItemMoved(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeInserted(...);
   *** notifyItemRangeRemoved(...);
   *** notifyItemRemoved(...);
   *** onAttachedToRecyclerView(...);
   *** onBindViewHolder(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onDetachedFromRecyclerView(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewDetachedFromWindow(...);
   *** onViewRecycled(...);
   *** registerAdapterDataObserver(...);
   *** unregisterAdapterDataObserver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   *** getItemCount(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
   <init>(...);
   *** onChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeInserted(...);
   *** onItemRangeMoved(...);
   *** onItemRangeRemoved(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
}

-keep class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback {
}

-keep class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory {
   <init>(...);
   *** createEdgeEffect(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo {
   <init>(...);
   *** setFrom(...);
   *** setFrom(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   <init>(...);
   *** getAddDuration(...);
   *** setAddDuration(...);
   *** getChangeDuration(...);
   *** setChangeDuration(...);
   *** isRunning(...);
   *** getMoveDuration(...);
   *** setMoveDuration(...);
   *** getRemoveDuration(...);
   *** setRemoveDuration(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** canReuseUpdatedViewHolder(...);
   *** canReuseUpdatedViewHolder(...);
   *** dispatchAnimationFinished(...);
   *** dispatchAnimationStarted(...);
   *** dispatchAnimationsFinished(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** isRunning(...);
   *** obtainHolderInfo(...);
   *** onAnimationFinished(...);
   *** onAnimationStarted(...);
   *** recordPostLayoutInformation(...);
   *** recordPreLayoutInformation(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   *** isRunning(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
   <init>(...);
   *** getItemOffsets(...);
   *** getItemOffsets(...);
   *** onDraw(...);
   *** onDraw(...);
   *** onDrawOver(...);
   *** onDrawOver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties {
   <init>(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   <init>(...);
   *** isAutoMeasureEnabled(...);
   *** setAutoMeasureEnabled(...);
   *** getBaseline(...);
   *** getChildCount(...);
   *** getClipToPadding(...);
   *** getFocusedChild(...);
   *** hasFocus(...);
   *** getHeight(...);
   *** getHeightMode(...);
   *** isAttachedToWindow(...);
   *** isFocused(...);
   *** isSmoothScrolling(...);
   *** getItemCount(...);
   *** isItemPrefetchEnabled(...);
   *** setItemPrefetchEnabled(...);
   *** getLayoutDirection(...);
   *** isMeasurementCacheEnabled(...);
   *** setMeasurementCacheEnabled(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getPaddingBottom(...);
   *** getPaddingEnd(...);
   *** getPaddingLeft(...);
   *** getPaddingRight(...);
   *** getPaddingStart(...);
   *** getPaddingTop(...);
   *** getWidth(...);
   *** getWidthMode(...);
   *** addDisappearingView(...);
   *** addDisappearingView(...);
   *** addView(...);
   *** addView(...);
   *** assertInLayoutOrScroll(...);
   *** assertNotInLayoutOrScroll(...);
   *** attachView(...);
   *** attachView(...);
   *** attachView(...);
   *** calculateItemDecorationsForChild(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** checkLayoutParams(...);
   *** chooseSize(...);
   *** collectAdjacentPrefetchPositions(...);
   *** collectInitialPrefetchPositions(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** detachAndScrapAttachedViews(...);
   *** detachAndScrapView(...);
   *** detachAndScrapViewAt(...);
   *** detachView(...);
   *** detachViewAt(...);
   *** endAnimation(...);
   *** findContainingItemView(...);
   *** findViewByPosition(...);
   *** generateDefaultLayoutParams(...);
   *** generateLayoutParams(...);
   *** generateLayoutParams(...);
   *** getBottomDecorationHeight(...);
   *** getChildAt(...);
   *** getChildMeasureSpec(...);
   *** getChildMeasureSpec(...);
   *** getColumnCountForAccessibility(...);
   *** getDecoratedBottom(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getDecoratedLeft(...);
   *** getDecoratedMeasuredHeight(...);
   *** getDecoratedMeasuredWidth(...);
   *** getDecoratedRight(...);
   *** getDecoratedTop(...);
   *** getItemViewType(...);
   *** getLeftDecorationWidth(...);
   *** getPosition(...);
   *** getProperties(...);
   *** getRightDecorationWidth(...);
   *** getRowCountForAccessibility(...);
   *** getSelectionModeForAccessibility(...);
   *** getTopDecorationHeight(...);
   *** getTransformedBoundingBox(...);
   *** ignoreView(...);
   *** isLayoutHierarchical(...);
   *** isViewPartiallyVisible(...);
   *** layoutDecorated(...);
   *** layoutDecoratedWithMargins(...);
   *** measureChild(...);
   *** measureChildWithMargins(...);
   *** moveView(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onAdapterChanged(...);
   *** onAddFocusables(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDetachedFromWindow(...);
   *** onFocusSearchFailed(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onInitializeAccessibilityNodeInfoForItem(...);
   *** onInterceptFocusSearch(...);
   *** onItemsAdded(...);
   *** onItemsChanged(...);
   *** onItemsMoved(...);
   *** onItemsRemoved(...);
   *** onItemsUpdated(...);
   *** onItemsUpdated(...);
   *** onLayoutChildren(...);
   *** onLayoutCompleted(...);
   *** onMeasure(...);
   *** onRequestChildFocus(...);
   *** onRequestChildFocus(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onScrollStateChanged(...);
   *** performAccessibilityAction(...);
   *** performAccessibilityActionForItem(...);
   *** postOnAnimation(...);
   *** removeAllViews(...);
   *** removeAndRecycleAllViews(...);
   *** removeAndRecycleView(...);
   *** removeAndRecycleViewAt(...);
   *** removeCallbacks(...);
   *** removeDetachedView(...);
   *** removeView(...);
   *** removeViewAt(...);
   *** requestChildRectangleOnScreen(...);
   *** requestChildRectangleOnScreen(...);
   *** requestLayout(...);
   *** requestSimpleAnimationsInNextLayout(...);
   *** scrollHorizontallyBy(...);
   *** scrollToPosition(...);
   *** scrollVerticallyBy(...);
   *** setMeasuredDimension(...);
   *** setMeasuredDimension(...);
   *** smoothScrollToPosition(...);
   *** startSmoothScroll(...);
   *** stopIgnoringView(...);
   *** supportsPredictiveItemAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   *** generateDefaultLayoutParams(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isItemChanged(...);
   *** isItemRemoved(...);
   *** isViewInvalid(...);
   *** getViewAdapterPosition(...);
   *** getViewLayoutPosition(...);
   *** getViewPosition(...);
   *** viewNeedsUpdate(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   <init>(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
   <init>(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$RecycledViewPool
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecycledViewPool {
   <init>(...);
   *** clear(...);
   *** getRecycledView(...);
   *** getRecycledViewCount(...);
   *** putRecycledView(...);
   *** setMaxRecycledViews(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Recycler
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Recycler {
   <init>(...);
   *** getScrapList(...);
   *** bindViewToPosition(...);
   *** clear(...);
   *** convertPreLayoutPositionToPostLayout(...);
   *** getViewForPosition(...);
   *** recycleView(...);
   *** setViewCacheSize(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$RecyclerListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecyclerListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getDx(...);
   *** setDx(...);
   *** getDy(...);
   *** setDy(...);
   *** getInterpolator(...);
   *** setInterpolator(...);
   *** jumpTo(...);
   *** update(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   <init>(...);
   *** getChildCount(...);
   *** isPendingInitialRun(...);
   *** isRunning(...);
   *** getLayoutManager(...);
   *** getTargetPosition(...);
   *** setTargetPosition(...);
   *** computeScrollVectorForPosition(...);
   *** findViewByPosition(...);
   *** getChildPosition(...);
   *** instantScrollToPosition(...);
   *** normalize(...);
   *** onChildAttachedToWindow(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** stop(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$State
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$State {
   <init>(...);
   *** hasTargetScrollPosition(...);
   *** isMeasuring(...);
   *** isPreLayout(...);
   *** getItemCount(...);
   *** getRemainingScrollHorizontal(...);
   *** getRemainingScrollVertical(...);
   *** getTargetScrollPosition(...);
   *** didStructureChange(...);
   *** get(...);
   *** put(...);
   *** remove(...);
   *** willRunPredictiveAnimations(...);
   *** willRunSimpleAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   <init>(...);
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
   <init>(...);
   *** getAdapterPosition(...);
   *** isRecyclable(...);
   *** setIsRecyclable(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getLayoutPosition(...);
   *** getOldPosition(...);
   *** getPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
}

-keep class androidx.recyclerview.widget.RecyclerView
-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatAccessibilityDelegate(...);
   *** hasFixedSize(...);
   *** setHasFixedSize(...);
   *** hasPendingAdapterUpdates(...);
   *** isAnimating(...);
   *** isComputingLayout(...);
   *** isLayoutSuppressed(...);
   *** getItemDecorationCount(...);
   *** isLayoutFrozen(...);
   *** setLayoutFrozen(...);
   *** getMaxFlingVelocity(...);
   *** getMinFlingVelocity(...);
   *** getPreserveFocusAfterLayout(...);
   *** setPreserveFocusAfterLayout(...);
   *** getScrollState(...);
   *** addFocusables(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** addOnChildAttachStateChangeListener(...);
   *** addOnItemTouchListener(...);
   *** addOnScrollListener(...);
   *** clearOnChildAttachStateChangeListeners(...);
   *** clearOnScrollListeners(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** drawChild(...);
   *** findChildViewUnder(...);
   *** findContainingItemView(...);
   *** findContainingViewHolder(...);
   *** findViewHolderForAdapterPosition(...);
   *** findViewHolderForItemId(...);
   *** findViewHolderForLayoutPosition(...);
   *** findViewHolderForPosition(...);
   *** fling(...);
   *** getAdapter(...);
   *** getChildAdapterPosition(...);
   *** getChildItemId(...);
   *** getChildLayoutPosition(...);
   *** getChildPosition(...);
   *** getChildViewHolder(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getEdgeEffectFactory(...);
   *** getItemAnimator(...);
   *** getItemDecorationAt(...);
   *** getLayoutManager(...);
   *** getOnFlingListener(...);
   *** getRecycledViewPool(...);
   *** hasNestedScrollingParent(...);
   *** invalidateItemDecorations(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onChildAttachedToWindow(...);
   *** onChildDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** removeOnChildAttachStateChangeListener(...);
   *** removeOnItemTouchListener(...);
   *** removeOnScrollListener(...);
   *** scrollToPosition(...);
   *** setAccessibilityDelegateCompat(...);
   *** setAdapter(...);
   *** setChildDrawingOrderCallback(...);
   *** setEdgeEffectFactory(...);
   *** setItemAnimator(...);
   *** setItemViewCacheSize(...);
   *** setLayoutManager(...);
   *** setOnFlingListener(...);
   *** setOnScrollListener(...);
   *** setRecycledViewPool(...);
   *** setRecyclerListener(...);
   *** setScrollingTouchSlop(...);
   *** setViewCacheExtension(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollToPosition(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopScroll(...);
   *** suppressLayout(...);
   *** swapAdapter(...);
}

-keep class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
-keepclassmembers class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate {
   <init>(...);
   *** getItemDelegate(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** calculateDistanceToFinalSnap(...);
   *** calculateScrollDistance(...);
   *** createScroller(...);
   *** createSnapScroller(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

# ACW for Xamarin.AndroidX.SavedState
-keep class androidx.savedstate.SavedStateRegistryOwner
-keepclassmembers class androidx.savedstate.SavedStateRegistryOwner {
}

-keep class androidx.savedstate.SavedStateRegistry$SavedStateProvider
-keepclassmembers class androidx.savedstate.SavedStateRegistry$SavedStateProvider {
}

-keep class androidx.savedstate.SavedStateRegistry
-keepclassmembers class androidx.savedstate.SavedStateRegistry {
   *** isRestored(...);
   *** consumeRestoredStateForKey(...);
   *** registerSavedStateProvider(...);
   *** runOnNextRecreation(...);
   *** unregisterSavedStateProvider(...);
}

# ACW for Xamarin.AndroidX.SlidingPaneLayout
-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener {
}

-keep class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor
-keepclassmembers class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor {
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener {
   <init>(...);
   *** onPanelClosed(...);
   *** onPanelOpened(...);
   *** onPanelSlide(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCoveredFadeColor(...);
   *** setCoveredFadeColor(...);
   *** isOpen(...);
   *** isSlideable(...);
   *** getParallaxDistance(...);
   *** setParallaxDistance(...);
   *** getSliderFadeColor(...);
   *** setSliderFadeColor(...);
   *** canScroll(...);
   *** canSlide(...);
   *** close(...);
   *** closePane(...);
   *** onLayout(...);
   *** open(...);
   *** openPane(...);
   *** setPanelSlideListener(...);
   *** setShadowDrawable(...);
   *** setShadowDrawableLeft(...);
   *** setShadowDrawableRight(...);
   *** setShadowResource(...);
   *** setShadowResourceLeft(...);
   *** setShadowResourceRight(...);
   *** smoothSlideClosed(...);
   *** smoothSlideOpen(...);
}

# ACW for Xamarin.AndroidX.SwipeRefreshLayout
-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener {
}

-keep class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor
-keepclassmembers class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout {
   <init>(...);
   <init>(...);
   *** getProgressCircleDiameter(...);
   *** getProgressViewEndOffset(...);
   *** getProgressViewStartOffset(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** canChildScrollUp(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** hasNestedScrollingParent(...);
   *** onLayout(...);
   *** onMeasure(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setColorScheme(...);
   *** setColorSchemeColors(...);
   *** setColorSchemeResources(...);
   *** setDistanceToTriggerSync(...);
   *** setLegacyRequestDisallowInterceptTouchEventEnabled(...);
   *** setOnChildScrollUpCallback(...);
   *** setOnRefreshListener(...);
   *** setProgressBackgroundColor(...);
   *** setProgressBackgroundColorSchemeColor(...);
   *** setProgressBackgroundColorSchemeResource(...);
   *** setProgressViewEndTarget(...);
   *** setProgressViewOffset(...);
   *** setSize(...);
   *** setSlingshotDistance(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

# ACW for Xamarin.AndroidX.Transition
-keep class androidx.transition.FragmentTransitionSupport
-keepclassmembers class androidx.transition.FragmentTransitionSupport {
   *** addTargets(...);
   *** scheduleRemoveTargets(...);
   *** swapSharedElementTargets(...);
   *** scheduleHideFragmentView(...);
   *** setSharedElementTargets(...);
   *** replaceTargets(...);
   <init>(...);
   *** addTarget(...);
   *** beginDelayedTransition(...);
   *** canHandle(...);
   *** cloneTransition(...);
   *** mergeTransitionsInSequence(...);
   *** mergeTransitionsTogether(...);
   *** removeTarget(...);
   *** setEpicenter(...);
   *** setEpicenter(...);
   *** wrapTransitionInSet(...);
}

-keep class androidx.transition.ArcMotion
-keepclassmembers class androidx.transition.ArcMotion {
   <init>(...);
   <init>(...);
   *** getMaximumAngle(...);
   *** setMaximumAngle(...);
   *** getMinimumHorizontalAngle(...);
   *** setMinimumHorizontalAngle(...);
   *** getMinimumVerticalAngle(...);
   *** setMinimumVerticalAngle(...);
   *** getPath(...);
}

-keep class androidx.transition.AutoTransition
-keepclassmembers class androidx.transition.AutoTransition {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.ChangeBounds
-keepclassmembers class androidx.transition.ChangeBounds {
   <init>(...);
   <init>(...);
   *** getResizeClip(...);
   *** setResizeClip(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeClipBounds
-keepclassmembers class androidx.transition.ChangeClipBounds {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeImageTransform
-keepclassmembers class androidx.transition.ChangeImageTransform {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeScroll
-keepclassmembers class androidx.transition.ChangeScroll {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeTransform
-keepclassmembers class androidx.transition.ChangeTransform {
   <init>(...);
   <init>(...);
   *** getReparent(...);
   *** setReparent(...);
   *** getReparentWithOverlay(...);
   *** setReparentWithOverlay(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.CircularPropagation
-keepclassmembers class androidx.transition.CircularPropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
}

-keep class androidx.transition.Explode
-keepclassmembers class androidx.transition.Explode {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Fade
-keepclassmembers class androidx.transition.Fade {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   <init>(...);
   <init>(...);
   *** getPath(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   *** getPath(...);
}

-keep class androidx.transition.PatternPathMotion
-keepclassmembers class androidx.transition.PatternPathMotion {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getPatternPath(...);
   *** setPatternPath(...);
   *** getPath(...);
}

-keep class androidx.transition.Scene
-keepclassmembers class androidx.transition.Scene {
   <init>(...);
   <init>(...);
   *** getSceneRoot(...);
   *** enter(...);
   *** exit(...);
   *** getCurrentScene(...);
   *** getSceneForLayout(...);
   *** setEnterAction(...);
   *** setExitAction(...);
}

-keep class androidx.transition.SidePropagation
-keepclassmembers class androidx.transition.SidePropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
   *** setSide(...);
}

-keep class androidx.transition.Slide$GravityFlag
-keepclassmembers class androidx.transition.Slide$GravityFlag {
}

-keep class androidx.transition.Slide
-keepclassmembers class androidx.transition.Slide {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSlideEdge(...);
   *** setSlideEdge(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   <init>(...);
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$MatchOrder
-keepclassmembers class androidx.transition.Transition$MatchOrder {
}

-keep class androidx.transition.Transition$TransitionListener
-keepclassmembers class androidx.transition.Transition$TransitionListener {
}

-keep class mono.androidx.transition.Transition_TransitionListenerImplementor
-keepclassmembers class mono.androidx.transition.Transition_TransitionListenerImplementor {
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** getEpicenter(...);
   *** getInterpolator(...);
   *** getName(...);
   *** getPathMotion(...);
   *** setPathMotion(...);
   *** getPropagation(...);
   *** setPropagation(...);
   *** getStartDelay(...);
   *** getTargetIds(...);
   *** getTargetNames(...);
   *** getTargetTypes(...);
   *** getTargets(...);
   *** addListener(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** animate(...);
   *** cancel(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** clone(...);
   *** createAnimator(...);
   *** end(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** getEpicenterCallback(...);
   *** getTransitionProperties(...);
   *** getTransitionValues(...);
   *** isTransitionRequired(...);
   *** pause(...);
   *** removeListener(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** resume(...);
   *** runAnimators(...);
   *** setDuration(...);
   *** setEpicenterCallback(...);
   *** setInterpolator(...);
   *** setMatchOrder(...);
   *** setStartDelay(...);
   *** start(...);
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.TransitionInflater
-keepclassmembers class androidx.transition.TransitionInflater {
   *** from(...);
   *** inflateTransition(...);
   *** inflateTransitionManager(...);
}

-keep class androidx.transition.TransitionListenerAdapter
-keepclassmembers class androidx.transition.TransitionListenerAdapter {
   <init>(...);
   *** onTransitionCancel(...);
   *** onTransitionEnd(...);
   *** onTransitionPause(...);
   *** onTransitionResume(...);
   *** onTransitionStart(...);
}

-keep class androidx.transition.TransitionManager
-keepclassmembers class androidx.transition.TransitionManager {
   <init>(...);
   *** beginDelayedTransition(...);
   *** beginDelayedTransition(...);
   *** endTransitions(...);
   *** go(...);
   *** go(...);
   *** setTransition(...);
   *** setTransition(...);
   *** transitionTo(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionSet
-keepclassmembers class androidx.transition.TransitionSet {
   <init>(...);
   <init>(...);
   *** getOrdering(...);
   *** getTransitionCount(...);
   *** addTransition(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** getTransitionAt(...);
   *** removeTransition(...);
   *** setOrdering(...);
}

-keep class androidx.transition.TransitionValues
-keepclassmembers class androidx.transition.TransitionValues {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Visibility$Mode
-keepclassmembers class androidx.transition.Visibility$Mode {
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
   <init>(...);
   <init>(...);
   *** getMode(...);
   *** setMode(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** isVisible(...);
   *** onAppear(...);
   *** onAppear(...);
   *** onDisappear(...);
   *** onDisappear(...);
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getViewVisibility(...);
   *** getViewX(...);
   *** getViewY(...);
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   *** getStartDelay(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable.Animated
-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
   <init>(...);
   *** onAnimationEnd(...);
   *** onAnimationStart(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat {
}

# ACW for Xamarin.AndroidX.VectorDrawable
-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat {
   *** getCurrent(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getOpacity(...);
   *** getPixelSize(...);
   *** getTransparentRegion(...);
   *** applyTheme(...);
   *** clearColorFilter(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** getPadding(...);
   *** getState(...);
   *** jumpToCurrentState(...);
   *** onBoundsChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setFilterBitmap(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setState(...);
}

# ACW for Xamarin.AndroidX.VersionedParcelable
-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
   <init>(...);
   *** onPostParceling(...);
   *** onPreParceling(...);
}

-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
}

-keep class androidx.versionedparcelable.NonParcelField
-keepclassmembers class androidx.versionedparcelable.NonParcelField {
}

-keep class androidx.versionedparcelable.ParcelField
-keepclassmembers class androidx.versionedparcelable.ParcelField {
}

-keep class androidx.versionedparcelable.VersionedParcelable
-keepclassmembers class androidx.versionedparcelable.VersionedParcelable {
}

-keep class androidx.versionedparcelable.VersionedParcelize
-keepclassmembers class androidx.versionedparcelable.VersionedParcelize {
}

-keep class androidx.versionedparcelable.ParcelImpl
-keepclassmembers class androidx.versionedparcelable.ParcelImpl {
   <init>(...);
   <init>(...);
   *** getVersionedParcel(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.versionedparcelable.ParcelUtils
-keepclassmembers class androidx.versionedparcelable.ParcelUtils {
   *** fromInputStream(...);
   *** fromParcelable(...);
   *** getVersionedParcelable(...);
   *** getVersionedParcelableList(...);
   *** putVersionedParcelable(...);
   *** putVersionedParcelableList(...);
   *** toOutputStream(...);
   *** toParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel$ParcelException
-keepclassmembers class androidx.versionedparcelable.VersionedParcel$ParcelException {
   <init>(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   <init>(...);
   *** isStream(...);
   *** closeField(...);
   *** createSubParcel(...);
   *** getRootCause(...);
   *** readArray(...);
   *** readArray(...);
   *** readBoolean(...);
   *** readBoolean(...);
   *** readBooleanArray(...);
   *** readBooleanArray(...);
   *** readBundle(...);
   *** readBundle(...);
   *** readByte(...);
   *** readByteArray(...);
   *** readByteArray(...);
   *** readCharArray(...);
   *** readCharSequence(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readDouble(...);
   *** readDoubleArray(...);
   *** readDoubleArray(...);
   *** readException(...);
   *** readField(...);
   *** readFloat(...);
   *** readFloat(...);
   *** readFloatArray(...);
   *** readFloatArray(...);
   *** readFromParcel(...);
   *** readInt(...);
   *** readInt(...);
   *** readIntArray(...);
   *** readIntArray(...);
   *** readList(...);
   *** readLong(...);
   *** readLong(...);
   *** readLongArray(...);
   *** readLongArray(...);
   *** readMap(...);
   *** readParcelable(...);
   *** readParcelable(...);
   *** readSerializable(...);
   *** readSet(...);
   *** readSize(...);
   *** readSizeF(...);
   *** readSparseBooleanArray(...);
   *** readString(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** readStrongBinder(...);
   *** readVersionedParcelable(...);
   *** readVersionedParcelable(...);
   *** setOutputField(...);
   *** setSerializationFlags(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeBoolean(...);
   *** writeBoolean(...);
   *** writeBooleanArray(...);
   *** writeBooleanArray(...);
   *** writeBundle(...);
   *** writeBundle(...);
   *** writeByte(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharArray(...);
   *** writeCharSequence(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeDouble(...);
   *** writeDoubleArray(...);
   *** writeDoubleArray(...);
   *** writeException(...);
   *** writeFloat(...);
   *** writeFloat(...);
   *** writeFloatArray(...);
   *** writeFloatArray(...);
   *** writeInt(...);
   *** writeInt(...);
   *** writeIntArray(...);
   *** writeIntArray(...);
   *** writeList(...);
   *** writeLong(...);
   *** writeLong(...);
   *** writeLongArray(...);
   *** writeLongArray(...);
   *** writeMap(...);
   *** writeNoException(...);
   *** writeParcelable(...);
   *** writeParcelable(...);
   *** writeSerializable(...);
   *** writeSet(...);
   *** writeSize(...);
   *** writeSizeF(...);
   *** writeSparseBooleanArray(...);
   *** writeString(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
   *** writeStrongInterface(...);
   *** writeToParcel(...);
   *** writeVersionedParcelable(...);
   *** writeVersionedParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   *** closeField(...);
   *** createSubParcel(...);
   *** readBoolean(...);
   *** readBundle(...);
   *** readByteArray(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readField(...);
   *** readFloat(...);
   *** readInt(...);
   *** readLong(...);
   *** readParcelable(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** setOutputField(...);
   *** writeBoolean(...);
   *** writeBundle(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeFloat(...);
   *** writeInt(...);
   *** writeLong(...);
   *** writeParcelable(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
}

# ACW for Xamarin.AndroidX.ViewPager
-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$OnPageChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnPageChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$PageTransformer
-keepclassmembers class androidx.viewpager.widget.ViewPager$PageTransformer {
}

-keep class androidx.viewpager.widget.ViewPager
-keepclassmembers class androidx.viewpager.widget.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.AndroidX.ViewPager2
-keep class androidx.viewpager2.widget.CompositePageTransformer
-keepclassmembers class androidx.viewpager2.widget.CompositePageTransformer {
   <init>(...);
   *** addTransformer(...);
   *** removeTransformer(...);
   *** transformPage(...);
}

-keep class androidx.viewpager2.widget.MarginPageTransformer
-keepclassmembers class androidx.viewpager2.widget.MarginPageTransformer {
   <init>(...);
   *** transformPage(...);
}

-keep class androidx.viewpager2.widget.ViewPager2$OffscreenPageLimit
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OffscreenPageLimit {
}

-keep class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback {
   <init>(...);
   *** onPageScrollStateChanged(...);
   *** onPageScrolled(...);
   *** onPageSelected(...);
}

-keep class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback {
}

-keep class androidx.viewpager2.widget.ViewPager2$Orientation
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$Orientation {
}

-keep class androidx.viewpager2.widget.ViewPager2$PageTransformer
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$PageTransformer {
}

-keep class androidx.viewpager2.widget.ViewPager2$ScrollState
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$ScrollState {
}

-keep class androidx.viewpager2.widget.ViewPager2
-keepclassmembers class androidx.viewpager2.widget.ViewPager2 {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getItemDecorationCount(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScrollState(...);
   *** isUserInputEnabled(...);
   *** setUserInputEnabled(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** beginFakeDrag(...);
   *** dispatchRestoreInstanceState(...);
   *** endFakeDrag(...);
   *** fakeDragBy(...);
   *** getItemDecorationAt(...);
   *** invalidateItemDecorations(...);
   *** onLayout(...);
   *** registerOnPageChangeCallback(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** requestTransform(...);
   *** setCurrentItem(...);
   *** setPageTransformer(...);
   *** unregisterOnPageChangeCallback(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** containsItem(...);
   *** createFragment(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewRecycled(...);
   *** restoreState(...);
   *** saveState(...);
   *** onBindViewHolder(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter {
   *** createFragment(...);
   *** getItemCount(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.viewpager2.adapter.FragmentViewHolder
-keepclassmembers class androidx.viewpager2.adapter.FragmentViewHolder {
}

-keep class androidx.viewpager2.adapter.StatefulAdapter
-keepclassmembers class androidx.viewpager2.adapter.StatefulAdapter {
}

# ACW for Xamarin.CommunityToolkit
# ACW for Xamarin.Essentials
# ACW for Xamarin.Forms.Maps.Android
# ACW for Xamarin.Forms.PancakeView
# ACW for Xamarin.Forms.Platform.Android
# ACW for Xamarin.Forms.Platform
# ACW for Xamarin.Google.Android.Material
-keep class com.google.android.material.resources.TextAppearance
-keepclassmembers class com.google.android.material.resources.TextAppearance {
   <init>(...);
   *** getFallbackFont(...);
   *** getFont(...);
   *** getFontAsync(...);
   *** getFontAsync(...);
   *** updateDrawState(...);
   *** updateMeasureState(...);
   *** updateTextPaintMeasureState(...);
}

-keep class com.google.android.material.resources.TextAppearanceFontCallback
-keepclassmembers class com.google.android.material.resources.TextAppearanceFontCallback {
   <init>(...);
   *** onFontRetrievalFailed(...);
   *** onFontRetrieved(...);
}

-keep class com.google.android.material.resources.TextAppearanceFontCallback
-keepclassmembers class com.google.android.material.resources.TextAppearanceFontCallback {
   *** onFontRetrievalFailed(...);
   *** onFontRetrieved(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback {
   <init>(...);
   *** onSlide(...);
   *** onStateChanged(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback {
   *** onSlide(...);
   *** onStateChanged(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior {
   <init>(...);
   <init>(...);
   *** isDraggable(...);
   *** setDraggable(...);
   *** getExpandedOffset(...);
   *** setExpandedOffset(...);
   *** isFitToContents(...);
   *** setFitToContents(...);
   *** isGestureInsetBottomIgnored(...);
   *** setGestureInsetBottomIgnored(...);
   *** getHalfExpandedRatio(...);
   *** setHalfExpandedRatio(...);
   *** isHideable(...);
   *** setHideable(...);
   *** getPeekHeight(...);
   *** setPeekHeight(...);
   *** getSaveFlags(...);
   *** setSaveFlags(...);
   *** getSkipCollapsed(...);
   *** setSkipCollapsed(...);
   *** getState(...);
   *** setState(...);
   *** addBottomSheetCallback(...);
   *** disableShapeAnimations(...);
   *** from(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** removeBottomSheetCallback(...);
   *** setBottomSheetCallback(...);
   *** setPeekHeight(...);
   *** setUpdateImportantForAccessibilityOnSiblings(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetDialog
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBehavior(...);
   *** getDismissWithAnimation(...);
   *** setDismissWithAnimation(...);
}

-keep class com.google.android.material.badge.BadgeDrawable$SavedState
-keepclassmembers class com.google.android.material.badge.BadgeDrawable$SavedState {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.material.badge.BadgeDrawable
-keepclassmembers class com.google.android.material.badge.BadgeDrawable {
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getBadgeGravity(...);
   *** setBadgeGravity(...);
   *** getBadgeTextColor(...);
   *** setBadgeTextColor(...);
   *** getContentDescription(...);
   *** hasNumber(...);
   *** getHorizontalOffset(...);
   *** setHorizontalOffset(...);
   *** getMaxCharacterCount(...);
   *** setMaxCharacterCount(...);
   *** getNumber(...);
   *** setNumber(...);
   *** getOpacity(...);
   *** getVerticalOffset(...);
   *** setVerticalOffset(...);
   *** clearNumber(...);
   *** create(...);
   *** createFromResource(...);
   *** draw(...);
   *** getSavedState(...);
   *** onStateChange(...);
   *** onTextSizeChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setContentDescriptionExceedsMaxBadgeNumberStringResource(...);
   *** setContentDescriptionNumberless(...);
   *** setContentDescriptionQuantityStringsResource(...);
   *** setVisible(...);
   *** updateBadgeCoordinates(...);
}

-keep class com.google.android.material.tabs.TabLayout$TabView
-keepclassmembers class com.google.android.material.tabs.TabLayout$TabView {
   <init>(...);
   *** getTab(...);
   *** onMeasure(...);
}

-keep class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener {
}

-keep class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor {
}

-keep class com.google.android.material.tabs.TabLayout$OnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$OnTabSelectedListener {
}

-keep class com.google.android.material.tabs.TabLayout$Tab
-keepclassmembers class com.google.android.material.tabs.TabLayout$Tab {
   <init>(...);
   *** getBadge(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** isSelected(...);
   *** getOrCreateBadge(...);
   *** getPosition(...);
   *** getTabLabelVisibility(...);
   *** getTag(...);
   *** getText(...);
   *** removeBadge(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabLabelVisibility(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class com.google.android.material.tabs.TabLayout
-keepclassmembers class com.google.android.material.tabs.TabLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasUnboundedRipple(...);
   *** isInlineLabel(...);
   *** setInlineLabel(...);
   *** getSelectedTabPosition(...);
   *** getTabCount(...);
   *** getTabGravity(...);
   *** setTabGravity(...);
   *** getTabIconTint(...);
   *** setTabIconTint(...);
   *** isTabIndicatorFullWidth(...);
   *** setTabIndicatorFullWidth(...);
   *** getTabIndicatorGravity(...);
   *** getTabMode(...);
   *** setTabMode(...);
   *** getTabRippleColor(...);
   *** setTabRippleColor(...);
   *** getTabSelectedIndicator(...);
   *** getTabTextColors(...);
   *** setTabTextColors(...);
   *** addOnTabSelectedListener(...);
   *** addOnTabSelectedListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** clearOnTabSelectedListeners(...);
   *** createTabFromPool(...);
   *** getTabAt(...);
   *** newTab(...);
   *** releaseFromTabPool(...);
   *** removeAllTabs(...);
   *** removeOnTabSelectedListener(...);
   *** removeOnTabSelectedListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** selectTab(...);
   *** setInlineLabelResource(...);
   *** setOnTabSelectedListener(...);
   *** setOnTabSelectedListener(...);
   *** setScrollPosition(...);
   *** setScrollPosition(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicatorColor(...);
   *** setSelectedTabIndicatorGravity(...);
   *** setSelectedTabIndicatorHeight(...);
   *** setTabIconTintResource(...);
   *** setTabRippleColorResource(...);
   *** setTabTextColors(...);
   *** setTabsFromPagerAdapter(...);
   *** setUnboundedRipple(...);
   *** setUnboundedRippleResource(...);
   *** setupWithViewPager(...);
   *** setupWithViewPager(...);
}

-keep class com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate
-keepclassmembers class com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate {
}

-keep class com.google.android.material.internal.TextDrawableHelper
-keepclassmembers class com.google.android.material.internal.TextDrawableHelper {
   <init>(...);
   *** getTextAppearance(...);
   *** getTextPaint(...);
   *** isTextWidthDirty(...);
   *** setTextWidthDirty(...);
   *** getTextWidth(...);
   *** setDelegate(...);
   *** setTextAppearance(...);
   *** updateTextPaintDrawState(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationItemView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationItemView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getItemData(...);
   *** getItemPosition(...);
   *** setItemPosition(...);
   *** initialize(...);
   *** onCreateDrawableState(...);
   *** prefersCondensedTitle(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setIcon(...);
   *** setIconSize(...);
   *** setIconTintList(...);
   *** setItemBackground(...);
   *** setItemBackground(...);
   *** setLabelVisibilityMode(...);
   *** setShifting(...);
   *** setShortcut(...);
   *** setTextAppearanceActive(...);
   *** setTextAppearanceInactive(...);
   *** setTextColor(...);
   *** setTitle(...);
   *** showsIcon(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationMenuView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationMenuView {
   <init>(...);
   <init>(...);
   *** getIconTintList(...);
   *** setIconTintList(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundRes(...);
   *** setItemBackgroundRes(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getSelectedItemId(...);
   *** getWindowAnimations(...);
   *** buildMenuView(...);
   *** createDefaultColorStateList(...);
   *** initialize(...);
   *** onLayout(...);
   *** setPresenter(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationPresenter
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationPresenter {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** flagActionItems(...);
   *** getMenuView(...);
   *** initForMenu(...);
   *** onCloseMenu(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSubMenuSelected(...);
   *** setBottomNavigationMenuView(...);
   *** setCallback(...);
   *** setUpdateSuspended(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener {
}

-keep class mono.com.google.android.material.bottomnavigation.BottomNavigationView_OnNavigationItemReselectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.bottomnavigation.BottomNavigationView_OnNavigationItemReselectedListenerImplementor {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener {
}

-keep class mono.com.google.android.material.bottomnavigation.BottomNavigationView_OnNavigationItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.bottomnavigation.BottomNavigationView_OnNavigationItemSelectedListenerImplementor {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundResource(...);
   *** setItemBackgroundResource(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemRippleColor(...);
   *** setItemRippleColor(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMaxItemCount(...);
   *** getMenu(...);
   *** getSelectedItemId(...);
   *** setSelectedItemId(...);
   *** getBadge(...);
   *** getOrCreateBadge(...);
   *** inflateMenu(...);
   *** removeBadge(...);
   *** setItemIconSizeRes(...);
   *** setOnNavigationItemReselectedListener(...);
   *** setOnNavigationItemSelectedListener(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$LayoutParams
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getScrollFlags(...);
   *** setScrollFlags(...);
   *** getScrollInterpolator(...);
   *** setScrollInterpolator(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener {
}

-keep class mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor {
}

-keep class com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** isHorizontalOffsetEnabled(...);
   *** setHorizontalOffsetEnabled(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** isVerticalOffsetEnabled(...);
   *** setVerticalOffsetEnabled(...);
   *** onMeasureChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
}

-keep class com.google.android.material.appbar.AppBarLayout
-keepclassmembers class com.google.android.material.appbar.AppBarLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isLiftOnScroll(...);
   *** setLiftOnScroll(...);
   *** getLiftOnScrollTargetViewId(...);
   *** setLiftOnScrollTargetViewId(...);
   *** getMinimumHeightForVisibleOverlappingContent(...);
   *** getStatusBarForeground(...);
   *** setStatusBarForeground(...);
   *** getTargetElevation(...);
   *** setTargetElevation(...);
   *** getTotalScrollRange(...);
   *** addOnOffsetChangedListener(...);
   *** getBehavior(...);
   *** removeOnOffsetChangedListener(...);
   *** setExpanded(...);
   *** setExpanded(...);
   *** setLiftable(...);
   *** setLifted(...);
   *** setStatusBarForegroundColor(...);
   *** setStatusBarForegroundResource(...);
}

-keep class com.google.android.material.appbar.HeaderScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** getOverlayTop(...);
   *** setOverlayTop(...);
   *** layoutChild(...);
   *** shouldHeaderOverlapScrollingChild(...);
}

-keep class com.google.android.material.appbar.HeaderScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderScrollingViewBehavior {
}

-keep class com.google.android.material.appbar.ViewOffsetBehavior
-keepclassmembers class com.google.android.material.appbar.ViewOffsetBehavior {
   <init>(...);
   <init>(...);
   *** isHorizontalOffsetEnabled(...);
   *** setHorizontalOffsetEnabled(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** isVerticalOffsetEnabled(...);
   *** setVerticalOffsetEnabled(...);
   *** layoutChild(...);
   *** onLayoutChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
   *** onMeasureChild(...);
}

# ACW for Xamarin.Google.Guava.ListenableFuture
-keep class com.google.common.util.concurrent.ListenableFuture
-keepclassmembers class com.google.common.util.concurrent.ListenableFuture {
}

# ACW for Xamarin.GooglePlayServices.Base
-keep class com.google.android.gms.common.GooglePlayServicesUtil
-keepclassmembers class com.google.android.gms.common.GooglePlayServicesUtil {
   *** getErrorDialog(...);
   *** getErrorDialog(...);
   *** getErrorPendingIntent(...);
   *** getErrorString(...);
   *** getRemoteContext(...);
   *** getRemoteResource(...);
   *** isGooglePlayServicesAvailable(...);
   *** isGooglePlayServicesAvailable(...);
   *** isUserRecoverableError(...);
   *** showErrorDialogFragment(...);
   *** showErrorDialogFragment(...);
   *** showErrorDialogFragment(...);
   *** showErrorNotification(...);
}

# ACW for Xamarin.GooglePlayServices.Basement
-keep class com.google.android.gms.common.GooglePlayServicesUtilLight
-keepclassmembers class com.google.android.gms.common.GooglePlayServicesUtilLight {
   *** cancelAvailabilityErrorNotifications(...);
   *** enableUsingApkIndependentContext(...);
   *** ensurePlayServicesAvailable(...);
   *** getApkVersion(...);
   *** getClientVersion(...);
   *** getErrorPendingIntent(...);
   *** getErrorString(...);
   *** getGooglePlayServicesAvailabilityRecoveryIntent(...);
   *** getRemoteContext(...);
   *** getRemoteResource(...);
   *** honorsDebugCertificates(...);
   *** isGooglePlayServicesAvailable(...);
   *** isGooglePlayServicesAvailable(...);
   *** isGooglePlayServicesUid(...);
   *** isPlayServicesPossiblyUpdating(...);
   *** isPlayStorePossiblyUpdating(...);
   *** isRestrictedUserProfile(...);
   *** isSidewinderDevice(...);
   *** isUserRecoverableError(...);
   *** uidHasPackageName(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable {
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
}

# ACW for Xamarin.GooglePlayServices.Maps
-keep class com.google.android.gms.maps.CameraUpdate
-keepclassmembers class com.google.android.gms.maps.CameraUpdate {
}

-keep class com.google.android.gms.maps.CameraUpdateFactory
-keepclassmembers class com.google.android.gms.maps.CameraUpdateFactory {
   *** newCameraPosition(...);
   *** newLatLng(...);
   *** newLatLngBounds(...);
   *** newLatLngBounds(...);
   *** newLatLngZoom(...);
   *** scrollBy(...);
   *** zoomBy(...);
   *** zoomBy(...);
   *** zoomIn(...);
   *** zoomOut(...);
   *** zoomTo(...);
}

-keep class com.google.android.gms.maps.GoogleMap$CancelableCallback
-keepclassmembers class com.google.android.gms.maps.GoogleMap$CancelableCallback {
}

-keep class com.google.android.gms.maps.GoogleMap$InfoWindowAdapter
-keepclassmembers class com.google.android.gms.maps.GoogleMap$InfoWindowAdapter {
}

-keep class com.google.android.gms.maps.GoogleMap$OnCameraChangeListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnCameraChangeListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnCameraChangeListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnCameraChangeListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnCameraIdleListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnCameraIdleListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnCameraIdleListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnCameraIdleListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnCameraMoveCanceledListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnCameraMoveCanceledListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnCameraMoveCanceledListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnCameraMoveCanceledListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnCameraMoveListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnCameraMoveListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnCameraMoveListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnCameraMoveListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnCameraMoveStartedListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnCameraMoveStartedListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnCameraMoveStartedListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnCameraMoveStartedListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnCircleClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnCircleClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnCircleClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnCircleClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnGroundOverlayClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnGroundOverlayClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnGroundOverlayClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnGroundOverlayClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnIndoorStateChangeListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnIndoorStateChangeListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnIndoorStateChangeListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnIndoorStateChangeListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnInfoWindowClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnInfoWindowClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnInfoWindowCloseListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnInfoWindowCloseListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnInfoWindowCloseListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnInfoWindowCloseListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnInfoWindowLongClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnInfoWindowLongClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnInfoWindowLongClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnInfoWindowLongClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMapClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMapClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMapClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMapClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMapLoadedCallback
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMapLoadedCallback {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMapLongClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMapLongClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMapLongClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMapLongClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMarkerClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMarkerClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMarkerClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMarkerClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMarkerDragListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMarkerDragListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMarkerDragListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMarkerDragListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMyLocationButtonClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMyLocationButtonClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMyLocationButtonClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMyLocationButtonClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMyLocationChangeListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMyLocationChangeListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnMyLocationClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnMyLocationClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnMyLocationClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnMyLocationClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnPoiClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnPoiClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnPoiClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnPoiClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnPolygonClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnPolygonClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnPolygonClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnPolygonClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$OnPolylineClickListener
-keepclassmembers class com.google.android.gms.maps.GoogleMap$OnPolylineClickListener {
}

-keep class mono.com.google.android.gms.maps.GoogleMap_OnPolylineClickListenerImplementor
-keepclassmembers class mono.com.google.android.gms.maps.GoogleMap_OnPolylineClickListenerImplementor {
}

-keep class com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback
-keepclassmembers class com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback {
}

-keep class com.google.android.gms.maps.GoogleMap
-keepclassmembers class com.google.android.gms.maps.GoogleMap {
   *** isBuildingsEnabled(...);
   *** setBuildingsEnabled(...);
   *** getCameraPosition(...);
   *** getFocusedBuilding(...);
   *** isIndoorEnabled(...);
   *** getMapType(...);
   *** setMapType(...);
   *** getMaxZoomLevel(...);
   *** getMinZoomLevel(...);
   *** getMyLocation(...);
   *** isMyLocationEnabled(...);
   *** setMyLocationEnabled(...);
   *** getProjection(...);
   *** isTrafficEnabled(...);
   *** setTrafficEnabled(...);
   *** getUiSettings(...);
   *** addCircle(...);
   *** addGroundOverlay(...);
   *** addMarker(...);
   *** addPolygon(...);
   *** addPolyline(...);
   *** addTileOverlay(...);
   *** animateCamera(...);
   *** animateCamera(...);
   *** animateCamera(...);
   *** clear(...);
   *** moveCamera(...);
   *** resetMinMaxZoomPreference(...);
   *** setContentDescription(...);
   *** setIndoorEnabled(...);
   *** setInfoWindowAdapter(...);
   *** setLatLngBoundsForCameraTarget(...);
   *** setLocationSource(...);
   *** setMapStyle(...);
   *** setMaxZoomPreference(...);
   *** setMinZoomPreference(...);
   *** setOnCameraChangeListener(...);
   *** setOnCameraIdleListener(...);
   *** setOnCameraMoveCanceledListener(...);
   *** setOnCameraMoveListener(...);
   *** setOnCameraMoveStartedListener(...);
   *** setOnCircleClickListener(...);
   *** setOnGroundOverlayClickListener(...);
   *** setOnIndoorStateChangeListener(...);
   *** setOnInfoWindowClickListener(...);
   *** setOnInfoWindowCloseListener(...);
   *** setOnInfoWindowLongClickListener(...);
   *** setOnMapClickListener(...);
   *** setOnMapLoadedCallback(...);
   *** setOnMapLongClickListener(...);
   *** setOnMarkerClickListener(...);
   *** setOnMarkerDragListener(...);
   *** setOnMyLocationButtonClickListener(...);
   *** setOnMyLocationChangeListener(...);
   *** setOnMyLocationClickListener(...);
   *** setOnPoiClickListener(...);
   *** setOnPolygonClickListener(...);
   *** setOnPolylineClickListener(...);
   *** setPadding(...);
   *** snapshot(...);
   *** snapshot(...);
   *** stopAnimation(...);
}

-keep class com.google.android.gms.maps.GoogleMapOptions
-keepclassmembers class com.google.android.gms.maps.GoogleMapOptions {
   <init>(...);
   *** getAmbientEnabled(...);
   *** getCamera(...);
   *** getCompassEnabled(...);
   *** getLatLngBoundsForCameraTarget(...);
   *** getLiteMode(...);
   *** getMapToolbarEnabled(...);
   *** getMapType(...);
   *** getMaxZoomPreference(...);
   *** getMinZoomPreference(...);
   *** getRotateGesturesEnabled(...);
   *** getScrollGesturesEnabled(...);
   *** getScrollGesturesEnabledDuringRotateOrZoom(...);
   *** getTiltGesturesEnabled(...);
   *** getUseViewLifecycleInFragment(...);
   *** getZOrderOnTop(...);
   *** getZoomControlsEnabled(...);
   *** getZoomGesturesEnabled(...);
   *** ambientEnabled(...);
   *** camera(...);
   *** compassEnabled(...);
   *** createFromAttributes(...);
   *** latLngBoundsForCameraTarget(...);
   *** liteMode(...);
   *** mapToolbarEnabled(...);
   *** mapType(...);
   *** maxZoomPreference(...);
   *** minZoomPreference(...);
   *** rotateGesturesEnabled(...);
   *** scrollGesturesEnabled(...);
   *** scrollGesturesEnabledDuringRotateOrZoom(...);
   *** tiltGesturesEnabled(...);
   *** toString(...);
   *** useViewLifecycleInFragment(...);
   *** writeToParcel(...);
   *** zOrderOnTop(...);
   *** zoomControlsEnabled(...);
   *** zoomGesturesEnabled(...);
}

-keep class com.google.android.gms.maps.LocationSource$OnLocationChangedListener
-keepclassmembers class com.google.android.gms.maps.LocationSource$OnLocationChangedListener {
}

-keep class com.google.android.gms.maps.LocationSource
-keepclassmembers class com.google.android.gms.maps.LocationSource {
}

-keep class com.google.android.gms.maps.OnMapReadyCallback
-keepclassmembers class com.google.android.gms.maps.OnMapReadyCallback {
}

-keep class com.google.android.gms.maps.MapsInitializer
-keepclassmembers class com.google.android.gms.maps.MapsInitializer {
   *** initialize(...);
}

-keep class com.google.android.gms.maps.MapView
-keepclassmembers class com.google.android.gms.maps.MapView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getMapAsync(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onEnterAmbient(...);
   *** onExitAmbient(...);
   *** onLowMemory(...);
   *** onPause(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
}

-keep class com.google.android.gms.maps.Projection
-keepclassmembers class com.google.android.gms.maps.Projection {
   *** getVisibleRegion(...);
   *** fromScreenLocation(...);
   *** toScreenLocation(...);
}

-keep class com.google.android.gms.maps.UiSettings
-keepclassmembers class com.google.android.gms.maps.UiSettings {
   *** isCompassEnabled(...);
   *** setCompassEnabled(...);
   *** isIndoorLevelPickerEnabled(...);
   *** setIndoorLevelPickerEnabled(...);
   *** isMapToolbarEnabled(...);
   *** setMapToolbarEnabled(...);
   *** isMyLocationButtonEnabled(...);
   *** setMyLocationButtonEnabled(...);
   *** isRotateGesturesEnabled(...);
   *** setRotateGesturesEnabled(...);
   *** isScrollGesturesEnabled(...);
   *** setScrollGesturesEnabled(...);
   *** isScrollGesturesEnabledDuringRotateOrZoom(...);
   *** setScrollGesturesEnabledDuringRotateOrZoom(...);
   *** isTiltGesturesEnabled(...);
   *** setTiltGesturesEnabled(...);
   *** isZoomControlsEnabled(...);
   *** setZoomControlsEnabled(...);
   *** isZoomGesturesEnabled(...);
   *** setZoomGesturesEnabled(...);
   *** setAllGesturesEnabled(...);
}

-keep class com.google.android.gms.maps.model.Polygon
-keepclassmembers class com.google.android.gms.maps.model.Polygon {
   *** setHoles(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getFillColor(...);
   *** setFillColor(...);
   *** isGeodesic(...);
   *** setGeodesic(...);
   *** getHoles(...);
   *** getId(...);
   *** getPoints(...);
   *** setPoints(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
   *** getStrokeJointType(...);
   *** setStrokeJointType(...);
   *** getStrokePattern(...);
   *** setStrokePattern(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** getTag(...);
   *** setTag(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getZIndex(...);
   *** setZIndex(...);
   *** equals(...);
   *** hashCode(...);
   *** remove(...);
}

-keep class com.google.android.gms.maps.model.MarkerOptions
-keepclassmembers class com.google.android.gms.maps.model.MarkerOptions {
   <init>(...);
   *** getAlpha(...);
   *** getAnchorU(...);
   *** getAnchorV(...);
   *** getIcon(...);
   *** getInfoWindowAnchorU(...);
   *** getInfoWindowAnchorV(...);
   *** isDraggable(...);
   *** isFlat(...);
   *** isVisible(...);
   *** getPosition(...);
   *** getRotation(...);
   *** getSnippet(...);
   *** getTitle(...);
   *** getZIndex(...);
   *** alpha(...);
   *** anchor(...);
   *** draggable(...);
   *** flat(...);
   *** icon(...);
   *** infoWindowAnchor(...);
   *** position(...);
   *** rotation(...);
   *** snippet(...);
   *** title(...);
   *** visible(...);
   *** writeToParcel(...);
   *** zIndex(...);
}

-keep class com.google.android.gms.maps.model.BitmapDescriptor
-keepclassmembers class com.google.android.gms.maps.model.BitmapDescriptor {
}

-keep class com.google.android.gms.maps.model.CameraPosition$Builder
-keepclassmembers class com.google.android.gms.maps.model.CameraPosition$Builder {
   <init>(...);
   <init>(...);
   *** bearing(...);
   *** build(...);
   *** target(...);
   *** tilt(...);
   *** zoom(...);
}

-keep class com.google.android.gms.maps.model.CameraPosition
-keepclassmembers class com.google.android.gms.maps.model.CameraPosition {
   <init>(...);
   *** builder(...);
   *** builder(...);
   *** createFromAttributes(...);
   *** equals(...);
   *** fromLatLngZoom(...);
   *** hashCode(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.Cap
-keepclassmembers class com.google.android.gms.maps.model.Cap {
   <init>(...);
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.Circle
-keepclassmembers class com.google.android.gms.maps.model.Circle {
   *** getCenter(...);
   *** setCenter(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getFillColor(...);
   *** setFillColor(...);
   *** getId(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
   *** getStrokePattern(...);
   *** setStrokePattern(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** getTag(...);
   *** setTag(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getZIndex(...);
   *** setZIndex(...);
   *** equals(...);
   *** hashCode(...);
   *** remove(...);
}

-keep class com.google.android.gms.maps.model.CircleOptions
-keepclassmembers class com.google.android.gms.maps.model.CircleOptions {
   <init>(...);
   *** getCenter(...);
   *** getFillColor(...);
   *** isClickable(...);
   *** isVisible(...);
   *** getRadius(...);
   *** getStrokeColor(...);
   *** getStrokePattern(...);
   *** getStrokeWidth(...);
   *** getZIndex(...);
   *** center(...);
   *** clickable(...);
   *** fillColor(...);
   *** radius(...);
   *** strokeColor(...);
   *** strokePattern(...);
   *** strokeWidth(...);
   *** visible(...);
   *** writeToParcel(...);
   *** zIndex(...);
}

-keep class com.google.android.gms.maps.model.GroundOverlay
-keepclassmembers class com.google.android.gms.maps.model.GroundOverlay {
   *** getBearing(...);
   *** setBearing(...);
   *** getBounds(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getHeight(...);
   *** getId(...);
   *** getPosition(...);
   *** setPosition(...);
   *** getTag(...);
   *** setTag(...);
   *** getTransparency(...);
   *** setTransparency(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getWidth(...);
   *** getZIndex(...);
   *** setZIndex(...);
   *** equals(...);
   *** hashCode(...);
   *** remove(...);
   *** setDimensions(...);
   *** setDimensions(...);
   *** setImage(...);
   *** setPositionFromBounds(...);
}

-keep class com.google.android.gms.maps.model.GroundOverlayOptions
-keepclassmembers class com.google.android.gms.maps.model.GroundOverlayOptions {
   <init>(...);
   *** getAnchorU(...);
   *** getAnchorV(...);
   *** getBearing(...);
   *** getBounds(...);
   *** getHeight(...);
   *** getImage(...);
   *** isClickable(...);
   *** isVisible(...);
   *** getLocation(...);
   *** getTransparency(...);
   *** getWidth(...);
   *** getZIndex(...);
   *** anchor(...);
   *** bearing(...);
   *** clickable(...);
   *** image(...);
   *** position(...);
   *** position(...);
   *** positionFromBounds(...);
   *** transparency(...);
   *** visible(...);
   *** writeToParcel(...);
   *** zIndex(...);
}

-keep class com.google.android.gms.maps.model.IndoorBuilding
-keepclassmembers class com.google.android.gms.maps.model.IndoorBuilding {
   *** getActiveLevelIndex(...);
   *** getDefaultLevelIndex(...);
   *** isUnderground(...);
   *** getLevels(...);
   *** equals(...);
   *** hashCode(...);
}

-keep class com.google.android.gms.maps.model.IndoorLevel
-keepclassmembers class com.google.android.gms.maps.model.IndoorLevel {
   *** getName(...);
   *** getShortName(...);
   *** activate(...);
   *** equals(...);
   *** hashCode(...);
}

-keep class com.google.android.gms.maps.model.TileProvider
-keepclassmembers class com.google.android.gms.maps.model.TileProvider {
}

-keep class com.google.android.gms.maps.model.LatLng
-keepclassmembers class com.google.android.gms.maps.model.LatLng {
   <init>(...);
   *** equals(...);
   *** hashCode(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.LatLngBounds$Builder
-keepclassmembers class com.google.android.gms.maps.model.LatLngBounds$Builder {
   <init>(...);
   *** build(...);
   *** include(...);
}

-keep class com.google.android.gms.maps.model.LatLngBounds
-keepclassmembers class com.google.android.gms.maps.model.LatLngBounds {
   <init>(...);
   *** getCenter(...);
   *** builder(...);
   *** contains(...);
   *** createFromAttributes(...);
   *** equals(...);
   *** hashCode(...);
   *** including(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.MapStyleOptions
-keepclassmembers class com.google.android.gms.maps.model.MapStyleOptions {
   <init>(...);
   *** loadRawResourceStyle(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.Marker
-keepclassmembers class com.google.android.gms.maps.model.Marker {
   *** getAlpha(...);
   *** setAlpha(...);
   *** isDraggable(...);
   *** setDraggable(...);
   *** isFlat(...);
   *** setFlat(...);
   *** getId(...);
   *** isInfoWindowShown(...);
   *** getPosition(...);
   *** setPosition(...);
   *** getRotation(...);
   *** setRotation(...);
   *** getSnippet(...);
   *** setSnippet(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getZIndex(...);
   *** setZIndex(...);
   *** equals(...);
   *** hashCode(...);
   *** hideInfoWindow(...);
   *** remove(...);
   *** setAnchor(...);
   *** setIcon(...);
   *** setInfoWindowAnchor(...);
   *** showInfoWindow(...);
}

-keep class com.google.android.gms.maps.model.PatternItem
-keepclassmembers class com.google.android.gms.maps.model.PatternItem {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.PointOfInterest
-keepclassmembers class com.google.android.gms.maps.model.PointOfInterest {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.PolygonOptions
-keepclassmembers class com.google.android.gms.maps.model.PolygonOptions {
   <init>(...);
   *** getFillColor(...);
   *** getHoles(...);
   *** isClickable(...);
   *** isGeodesic(...);
   *** isVisible(...);
   *** getPoints(...);
   *** getStrokeColor(...);
   *** getStrokeJointType(...);
   *** getStrokePattern(...);
   *** getStrokeWidth(...);
   *** getZIndex(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** addHole(...);
   *** clickable(...);
   *** fillColor(...);
   *** geodesic(...);
   *** strokeColor(...);
   *** strokeJointType(...);
   *** strokePattern(...);
   *** strokeWidth(...);
   *** visible(...);
   *** writeToParcel(...);
   *** zIndex(...);
}

-keep class com.google.android.gms.maps.model.Polyline
-keepclassmembers class com.google.android.gms.maps.model.Polyline {
   *** isClickable(...);
   *** setClickable(...);
   *** getColor(...);
   *** setColor(...);
   *** getEndCap(...);
   *** setEndCap(...);
   *** isGeodesic(...);
   *** setGeodesic(...);
   *** getId(...);
   *** getJointType(...);
   *** setJointType(...);
   *** getPattern(...);
   *** setPattern(...);
   *** getPoints(...);
   *** setPoints(...);
   *** getStartCap(...);
   *** setStartCap(...);
   *** getTag(...);
   *** setTag(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getWidth(...);
   *** setWidth(...);
   *** getZIndex(...);
   *** setZIndex(...);
   *** equals(...);
   *** hashCode(...);
   *** remove(...);
}

-keep class com.google.android.gms.maps.model.PolylineOptions
-keepclassmembers class com.google.android.gms.maps.model.PolylineOptions {
   <init>(...);
   *** getColor(...);
   *** getEndCap(...);
   *** isClickable(...);
   *** isGeodesic(...);
   *** isVisible(...);
   *** getJointType(...);
   *** getPattern(...);
   *** getPoints(...);
   *** getStartCap(...);
   *** getWidth(...);
   *** getZIndex(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** clickable(...);
   *** color(...);
   *** endCap(...);
   *** geodesic(...);
   *** jointType(...);
   *** pattern(...);
   *** startCap(...);
   *** visible(...);
   *** width(...);
   *** writeToParcel(...);
   *** zIndex(...);
}

-keep class com.google.android.gms.maps.model.Tile
-keepclassmembers class com.google.android.gms.maps.model.Tile {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.maps.model.TileOverlay
-keepclassmembers class com.google.android.gms.maps.model.TileOverlay {
   *** getFadeIn(...);
   *** setFadeIn(...);
   *** getId(...);
   *** getTransparency(...);
   *** setTransparency(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getZIndex(...);
   *** setZIndex(...);
   *** clearTileCache(...);
   *** equals(...);
   *** hashCode(...);
   *** remove(...);
}

-keep class com.google.android.gms.maps.model.TileOverlayOptions
-keepclassmembers class com.google.android.gms.maps.model.TileOverlayOptions {
   <init>(...);
   *** getFadeIn(...);
   *** isVisible(...);
   *** getTileProvider(...);
   *** getTransparency(...);
   *** getZIndex(...);
   *** fadeIn(...);
   *** tileProvider(...);
   *** transparency(...);
   *** visible(...);
   *** writeToParcel(...);
   *** zIndex(...);
}

-keep class com.google.android.gms.maps.model.VisibleRegion
-keepclassmembers class com.google.android.gms.maps.model.VisibleRegion {
   <init>(...);
   *** equals(...);
   *** hashCode(...);
   *** toString(...);
   *** writeToParcel(...);
}

# ACW for Xamarin.GooglePlayServices.Tasks
-keep class com.google.android.gms.tasks.Task
-keepclassmembers class com.google.android.gms.tasks.Task {
   <init>(...);
   *** getException(...);
   *** isCanceled(...);
   *** isComplete(...);
   *** isSuccessful(...);
   *** getResult(...);
   *** addOnCanceledListener(...);
   *** addOnCanceledListener(...);
   *** addOnCanceledListener(...);
   *** addOnCompleteListener(...);
   *** addOnCompleteListener(...);
   *** addOnCompleteListener(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** continueWith(...);
   *** continueWith(...);
   *** continueWithTask(...);
   *** continueWithTask(...);
   *** getResult(...);
   *** onSuccessTask(...);
   *** onSuccessTask(...);
}

-keep class com.google.android.gms.tasks.TaskCompletionSource
-keepclassmembers class com.google.android.gms.tasks.TaskCompletionSource {
   <init>(...);
   <init>(...);
   *** getTask(...);
   *** setException(...);
   *** setResult(...);
   *** trySetException(...);
   *** trySetResult(...);
}

-keep class com.google.android.gms.tasks.CancellationToken
-keepclassmembers class com.google.android.gms.tasks.CancellationToken {
   <init>(...);
   *** isCancellationRequested(...);
   *** onCanceledRequested(...);
}

-keep class com.google.android.gms.tasks.CancellationToken
-keepclassmembers class com.google.android.gms.tasks.CancellationToken {
   *** isCancellationRequested(...);
   *** onCanceledRequested(...);
}

-keep class com.google.android.gms.tasks.Continuation
-keepclassmembers class com.google.android.gms.tasks.Continuation {
}

-keep class com.google.android.gms.tasks.OnCanceledListener
-keepclassmembers class com.google.android.gms.tasks.OnCanceledListener {
}

-keep class com.google.android.gms.tasks.OnCompleteListener
-keepclassmembers class com.google.android.gms.tasks.OnCompleteListener {
}

-keep class com.google.android.gms.tasks.OnFailureListener
-keepclassmembers class com.google.android.gms.tasks.OnFailureListener {
}

-keep class com.google.android.gms.tasks.OnSuccessListener
-keepclassmembers class com.google.android.gms.tasks.OnSuccessListener {
}

-keep class com.google.android.gms.tasks.OnTokenCanceledListener
-keepclassmembers class com.google.android.gms.tasks.OnTokenCanceledListener {
}

-keep class com.google.android.gms.tasks.SuccessContinuation
-keepclassmembers class com.google.android.gms.tasks.SuccessContinuation {
}

-keep class com.google.android.gms.tasks.Task
-keepclassmembers class com.google.android.gms.tasks.Task {
   *** getException(...);
   *** isCanceled(...);
   *** isComplete(...);
   *** isSuccessful(...);
   *** getResult(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** getResult(...);
}

# ACW for Xamarin.Jetbrains.Annotations
-keep class org.jetbrains.annotations.Contract
-keepclassmembers class org.jetbrains.annotations.Contract {
}

-keep class org.jetbrains.annotations.Nls
-keepclassmembers class org.jetbrains.annotations.Nls {
}

-keep class org.jetbrains.annotations.NonNls
-keepclassmembers class org.jetbrains.annotations.NonNls {
}

-keep class org.jetbrains.annotations.NotNull
-keepclassmembers class org.jetbrains.annotations.NotNull {
}

-keep class org.jetbrains.annotations.Nullable
-keepclassmembers class org.jetbrains.annotations.Nullable {
}

-keep class org.jetbrains.annotations.PropertyKey
-keepclassmembers class org.jetbrains.annotations.PropertyKey {
}

-keep class org.jetbrains.annotations.TestOnly
-keepclassmembers class org.jetbrains.annotations.TestOnly {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Identifier
-keepclassmembers class org.intellij.lang.annotations.Identifier {
}

-keep class org.intellij.lang.annotations.Language
-keepclassmembers class org.intellij.lang.annotations.Language {
}

-keep class org.intellij.lang.annotations.MagicConstant
-keepclassmembers class org.intellij.lang.annotations.MagicConstant {
}

-keep class org.intellij.lang.annotations.Pattern
-keepclassmembers class org.intellij.lang.annotations.Pattern {
}

-keep class org.intellij.lang.annotations.PrintFormat
-keepclassmembers class org.intellij.lang.annotations.PrintFormat {
}

-keep class org.intellij.lang.annotations.RegExp
-keepclassmembers class org.intellij.lang.annotations.RegExp {
}

-keep class org.intellij.lang.annotations.Subst
-keepclassmembers class org.intellij.lang.annotations.Subst {
}

-keep class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation {
}

-keep class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis {
}

-keep class org.intellij.lang.annotations.JdkConstants$CalendarMonth
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CalendarMonth {
}

-keep class org.intellij.lang.annotations.JdkConstants$CursorType
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CursorType {
}

-keep class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$FontStyle
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FontStyle {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$InputEventMask
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$InputEventMask {
}

-keep class org.intellij.lang.annotations.JdkConstants$ListSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$ListSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$PatternFlags
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$PatternFlags {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabPlacement
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabPlacement {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition {
}

-keep class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants
-keepclassmembers class org.intellij.lang.annotations.JdkConstants {
   <init>(...);
}

# ACW for Xamarin.Kotlin.StdLib
-keep class kotlin.ArrayIntrinsicsKt
-keepclassmembers class kotlin.ArrayIntrinsicsKt {
}

-keep class kotlin.DeepRecursiveFunction
-keepclassmembers class kotlin.DeepRecursiveFunction {
   <init>(...);
}

-keep class kotlin.DeepRecursiveKt
-keepclassmembers class kotlin.DeepRecursiveKt {
   *** invoke(...);
}

-keep class kotlin.DeepRecursiveScope
-keepclassmembers class kotlin.DeepRecursiveScope {
   *** callRecursive(...);
   *** callRecursive(...);
   *** invoke(...);
}

-keep class kotlin.DeepRecursiveScope
-keepclassmembers class kotlin.DeepRecursiveScope {
   *** callRecursive(...);
   *** callRecursive(...);
}

-keep class kotlin.DeprecationLevel
-keepclassmembers class kotlin.DeprecationLevel {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.ExceptionsKt
-keepclassmembers class kotlin.ExceptionsKt {
   *** addSuppressed(...);
   *** getStackTrace(...);
   *** getSuppressedExceptions(...);
   *** stackTraceToString(...);
}

-keep class kotlin.HashCodeKt
-keepclassmembers class kotlin.HashCodeKt {
}

-keep class kotlin.BuilderInference
-keepclassmembers class kotlin.BuilderInference {
}

-keep class kotlin.Deprecated
-keepclassmembers class kotlin.Deprecated {
}

-keep class kotlin.DeprecatedSinceKotlin
-keepclassmembers class kotlin.DeprecatedSinceKotlin {
}

-keep class kotlin.DslMarker
-keepclassmembers class kotlin.DslMarker {
}

-keep class kotlin.Experimental$Level
-keepclassmembers class kotlin.Experimental$Level {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.Experimental
-keepclassmembers class kotlin.Experimental {
}

-keep class kotlin.ExperimentalMultiplatform
-keepclassmembers class kotlin.ExperimentalMultiplatform {
}

-keep class kotlin.ExperimentalStdlibApi
-keepclassmembers class kotlin.ExperimentalStdlibApi {
}

-keep class kotlin.ExperimentalUnsignedTypes
-keepclassmembers class kotlin.ExperimentalUnsignedTypes {
}

-keep class kotlin.ExtensionFunctionType
-keepclassmembers class kotlin.ExtensionFunctionType {
}

-keep class kotlin.Function
-keepclassmembers class kotlin.Function {
}

-keep class kotlin.Lazy
-keepclassmembers class kotlin.Lazy {
}

-keep class kotlin.Metadata
-keepclassmembers class kotlin.Metadata {
}

-keep class kotlin.OptIn
-keepclassmembers class kotlin.OptIn {
}

-keep class kotlin.OptionalExpectation
-keepclassmembers class kotlin.OptionalExpectation {
}

-keep class kotlin.OverloadResolutionByLambdaReturnType
-keepclassmembers class kotlin.OverloadResolutionByLambdaReturnType {
}

-keep class kotlin.ParameterName
-keepclassmembers class kotlin.ParameterName {
}

-keep class kotlin.PublishedApi
-keepclassmembers class kotlin.PublishedApi {
}

-keep class kotlin.ReplaceWith
-keepclassmembers class kotlin.ReplaceWith {
}

-keep class kotlin.RequiresOptIn$Level
-keepclassmembers class kotlin.RequiresOptIn$Level {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.RequiresOptIn
-keepclassmembers class kotlin.RequiresOptIn {
}

-keep class kotlin.SinceKotlin
-keepclassmembers class kotlin.SinceKotlin {
}

-keep class kotlin.Suppress
-keepclassmembers class kotlin.Suppress {
}

-keep class kotlin.UnsafeVariance
-keepclassmembers class kotlin.UnsafeVariance {
}

-keep class kotlin.UseExperimental
-keepclassmembers class kotlin.UseExperimental {
}

-keep class kotlin.KotlinNullPointerException
-keepclassmembers class kotlin.KotlinNullPointerException {
   <init>(...);
   <init>(...);
}

-keep class kotlin.KotlinVersion
-keepclassmembers class kotlin.KotlinVersion {
   <init>(...);
   <init>(...);
   *** getMajor(...);
   *** getMinor(...);
   *** getPatch(...);
   *** compareTo(...);
   *** isAtLeast(...);
   *** isAtLeast(...);
}

-keep class kotlin.LateinitKt
-keepclassmembers class kotlin.LateinitKt {
}

-keep class kotlin.LazyKt$WhenMappings
-keepclassmembers class kotlin.LazyKt$WhenMappings {
}

-keep class kotlin.LazyKt
-keepclassmembers class kotlin.LazyKt {
   *** lazyOf(...);
   *** lazy(...);
   *** lazy(...);
   *** lazy(...);
}

-keep class kotlin.LazyThreadSafetyMode
-keepclassmembers class kotlin.LazyThreadSafetyMode {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.NotImplementedError
-keepclassmembers class kotlin.NotImplementedError {
   <init>(...);
   <init>(...);
}

-keep class kotlin.NoWhenBranchMatchedException
-keepclassmembers class kotlin.NoWhenBranchMatchedException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class kotlin.NumbersKt
-keepclassmembers class kotlin.NumbersKt {
   *** rotateLeft(...);
   *** rotateLeft(...);
   *** rotateRight(...);
   *** rotateRight(...);
}

-keep class kotlin.Pair
-keepclassmembers class kotlin.Pair {
   <init>(...);
   *** getFirst(...);
   *** getSecond(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class kotlin.PreconditionsKt
-keepclassmembers class kotlin.PreconditionsKt {
}

-keep class kotlin.PropertyReferenceDelegatesKt
-keepclassmembers class kotlin.PropertyReferenceDelegatesKt {
}

-keep class kotlin.Result
-keepclassmembers class kotlin.Result {
}

-keep class kotlin.ResultKt
-keepclassmembers class kotlin.ResultKt {
   *** throwOnFailure(...);
}

-keep class kotlin.StandardKt
-keepclassmembers class kotlin.StandardKt {
}

-keep class kotlin.SuspendKt
-keepclassmembers class kotlin.SuspendKt {
}

-keep class kotlin.ThrowsKt
-keepclassmembers class kotlin.ThrowsKt {
}

-keep class kotlin.Triple
-keepclassmembers class kotlin.Triple {
   <init>(...);
   *** getFirst(...);
   *** getSecond(...);
   *** getThird(...);
   *** component1(...);
   *** component2(...);
   *** component3(...);
   *** copy(...);
}

-keep class kotlin.TuplesKt
-keepclassmembers class kotlin.TuplesKt {
   *** to(...);
   *** toList(...);
   *** toList(...);
}

-keep class kotlin.TypeAliasesKt
-keepclassmembers class kotlin.TypeAliasesKt {
}

-keep class kotlin.TypeCastException
-keepclassmembers class kotlin.TypeCastException {
   <init>(...);
   <init>(...);
}

-keep class kotlin.UByte
-keepclassmembers class kotlin.UByte {
   *** compareTo(...);
}

-keep class kotlin.UByteArray
-keepclassmembers class kotlin.UByteArray {
   *** isEmpty(...);
   *** add-7apg3OU(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** contains-7apg3OU(...);
   *** contains-7apg3OU(...);
   *** containsAll(...);
   *** get-w2LRezQ(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set-VurrAj0(...);
   *** size(...);
   *** toArray(...);
   *** toArray(...);
}

-keep class kotlin.UByteArrayKt
-keepclassmembers class kotlin.UByteArrayKt {
}

-keep class kotlin.UByteKt
-keepclassmembers class kotlin.UByteKt {
}

-keep class kotlin.UInt
-keepclassmembers class kotlin.UInt {
   *** compareTo(...);
}

-keep class kotlin.UIntArray
-keepclassmembers class kotlin.UIntArray {
   *** isEmpty(...);
   *** add-WZ4Q5Ns(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** contains-WZ4Q5Ns(...);
   *** contains-WZ4Q5Ns(...);
   *** containsAll(...);
   *** get-pVg5ArA(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set-VXSXFK8(...);
   *** size(...);
   *** toArray(...);
   *** toArray(...);
}

-keep class kotlin.UIntArrayKt
-keepclassmembers class kotlin.UIntArrayKt {
}

-keep class kotlin.UIntKt
-keepclassmembers class kotlin.UIntKt {
}

-keep class kotlin.ULong
-keepclassmembers class kotlin.ULong {
   *** compareTo(...);
}

-keep class kotlin.ULongArray
-keepclassmembers class kotlin.ULongArray {
   *** isEmpty(...);
   *** add-VKZWuLQ(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** contains-VKZWuLQ(...);
   *** contains-VKZWuLQ(...);
   *** containsAll(...);
   *** get-s-VKNKU(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set-k8EXiF4(...);
   *** size(...);
   *** toArray(...);
   *** toArray(...);
}

-keep class kotlin.ULongArrayKt
-keepclassmembers class kotlin.ULongArrayKt {
}

-keep class kotlin.ULongKt
-keepclassmembers class kotlin.ULongKt {
}

-keep class kotlin.UninitializedPropertyAccessException
-keepclassmembers class kotlin.UninitializedPropertyAccessException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class kotlin.Unit
-keepclassmembers class kotlin.Unit {
}

-keep class kotlin.UnsignedKt
-keepclassmembers class kotlin.UnsignedKt {
}

-keep class kotlin.UNumbersKt
-keepclassmembers class kotlin.UNumbersKt {
}

-keep class kotlin.UShort
-keepclassmembers class kotlin.UShort {
   *** compareTo(...);
}

-keep class kotlin.UShortArray
-keepclassmembers class kotlin.UShortArray {
   *** isEmpty(...);
   *** add-xj2QHRw(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** contains-xj2QHRw(...);
   *** contains-xj2QHRw(...);
   *** containsAll(...);
   *** get-Mh2AYeg(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set-01HTLdE(...);
   *** size(...);
   *** toArray(...);
   *** toArray(...);
}

-keep class kotlin.UShortArrayKt
-keepclassmembers class kotlin.UShortArrayKt {
}

-keep class kotlin.UShortKt
-keepclassmembers class kotlin.UShortKt {
}

-keep class kotlin.time.AbstractDoubleTimeSource
-keepclassmembers class kotlin.time.AbstractDoubleTimeSource {
   <init>(...);
   *** getUnit(...);
   *** markNow(...);
   *** read(...);
}

-keep class kotlin.time.AbstractDoubleTimeSource
-keepclassmembers class kotlin.time.AbstractDoubleTimeSource {
   *** read(...);
}

-keep class kotlin.time.AbstractLongTimeSource
-keepclassmembers class kotlin.time.AbstractLongTimeSource {
   <init>(...);
   *** getUnit(...);
   *** markNow(...);
   *** read(...);
}

-keep class kotlin.time.AbstractLongTimeSource
-keepclassmembers class kotlin.time.AbstractLongTimeSource {
   *** read(...);
}

-keep class kotlin.time.Duration$Companion
-keepclassmembers class kotlin.time.Duration$Companion {
   *** getINFINITE-UwyO8pc(...);
   *** getZERO-UwyO8pc(...);
   *** convert(...);
}

-keep class kotlin.time.Duration
-keepclassmembers class kotlin.time.Duration {
   *** compareTo-LRDsOJo(...);
   *** compareTo-LRDsOJo(...);
   *** div-UwyO8pc(...);
   *** div-UwyO8pc(...);
   *** getAbsoluteValue-UwyO8pc(...);
   *** minus-LRDsOJo(...);
   *** plus-LRDsOJo(...);
   *** times-UwyO8pc(...);
   *** times-UwyO8pc(...);
   *** unaryMinus-UwyO8pc(...);
   *** compareTo(...);
}

-keep class kotlin.time.DurationKt
-keepclassmembers class kotlin.time.DurationKt {
   *** getDays(...);
   *** getDays(...);
   *** getDays(...);
   *** getHours(...);
   *** getHours(...);
   *** getHours(...);
   *** getMicroseconds(...);
   *** getMicroseconds(...);
   *** getMicroseconds(...);
   *** getMilliseconds(...);
   *** getMilliseconds(...);
   *** getMilliseconds(...);
   *** getMinutes(...);
   *** getMinutes(...);
   *** getMinutes(...);
   *** getNanoseconds(...);
   *** getNanoseconds(...);
   *** getNanoseconds(...);
   *** getSeconds(...);
   *** getSeconds(...);
   *** getSeconds(...);
   *** toDuration(...);
   *** toDuration(...);
   *** toDuration(...);
}

-keep class kotlin.time.DurationUnitKt$WhenMappings
-keepclassmembers class kotlin.time.DurationUnitKt$WhenMappings {
}

-keep class kotlin.time.DurationUnitKt
-keepclassmembers class kotlin.time.DurationUnitKt {
   *** shortName(...);
   *** convertDurationUnit(...);
}

-keep class kotlin.time.FormatToDecimalsKt
-keepclassmembers class kotlin.time.FormatToDecimalsKt {
}

-keep class kotlin.time.ExperimentalTime
-keepclassmembers class kotlin.time.ExperimentalTime {
}

-keep class kotlin.time.TimeSource$Monotonic
-keepclassmembers class kotlin.time.TimeSource$Monotonic {
   *** markNow(...);
}

-keep class kotlin.time.TimeSource
-keepclassmembers class kotlin.time.TimeSource {
}

-keep class kotlin.time.MeasureTimeKt
-keepclassmembers class kotlin.time.MeasureTimeKt {
   *** measureTime(...);
   *** measureTime(...);
   *** measureTimedValue(...);
   *** measureTimedValue(...);
}

-keep class kotlin.time.TestTimeSource
-keepclassmembers class kotlin.time.TestTimeSource {
   <init>(...);
   *** plusAssign-LRDsOJo(...);
   *** read(...);
}

-keep class kotlin.time.TimedValue
-keepclassmembers class kotlin.time.TimedValue {
   *** getDuration-UwyO8pc(...);
   *** getValue(...);
   *** component1(...);
   *** component2-UwyO8pc(...);
   *** copy-RFiDyg4(...);
}

-keep class kotlin.time.TimeMark
-keepclassmembers class kotlin.time.TimeMark {
   <init>(...);
   *** hasNotPassedNow(...);
   *** hasPassedNow(...);
   *** elapsedNow-UwyO8pc(...);
   *** minus-LRDsOJo(...);
   *** plus-LRDsOJo(...);
}

-keep class kotlin.time.TimeMark
-keepclassmembers class kotlin.time.TimeMark {
   *** elapsedNow-UwyO8pc(...);
}

-keep class kotlin.time.TimeSourceKt
-keepclassmembers class kotlin.time.TimeSourceKt {
}

-keep class kotlin.time.TimeSourcesKt
-keepclassmembers class kotlin.time.TimeSourcesKt {
}

-keep class kotlin.text.CharCategory$Companion
-keepclassmembers class kotlin.text.CharCategory$Companion {
   *** valueOf(...);
}

-keep class kotlin.text.CharCategory
-keepclassmembers class kotlin.text.CharCategory {
   *** getCode(...);
   *** getValue(...);
   *** contains(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.text.CharDirectionality$Companion
-keepclassmembers class kotlin.text.CharDirectionality$Companion {
   *** valueOf(...);
}

-keep class kotlin.text.CharDirectionality
-keepclassmembers class kotlin.text.CharDirectionality {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.text.Charsets
-keepclassmembers class kotlin.text.Charsets {
   *** UTF32(...);
   *** UTF32_BE(...);
   *** UTF32_LE(...);
}

-keep class kotlin.text.CharsetsKt
-keepclassmembers class kotlin.text.CharsetsKt {
}

-keep class kotlin.text.CharsKt
-keepclassmembers class kotlin.text.CharsKt {
   *** equals(...);
   *** isSurrogate(...);
   *** checkRadix(...);
   *** digitOf(...);
   *** getCategory(...);
   *** getDirectionality(...);
   *** isWhitespace(...);
}

-keep class kotlin.text.MatchGroupCollection
-keepclassmembers class kotlin.text.MatchGroupCollection {
}

-keep class kotlin.text.MatchNamedGroupCollection
-keepclassmembers class kotlin.text.MatchNamedGroupCollection {
}

-keep class kotlin.text.MatchResult$DefaultImpls
-keepclassmembers class kotlin.text.MatchResult$DefaultImpls {
   *** getDestructured(...);
}

-keep class kotlin.text.MatchResult$Destructured
-keepclassmembers class kotlin.text.MatchResult$Destructured {
   *** getMatch(...);
   *** toList(...);
}

-keep class kotlin.text.MatchResult
-keepclassmembers class kotlin.text.MatchResult {
}

-keep class kotlin.text.MatchGroup
-keepclassmembers class kotlin.text.MatchGroup {
   <init>(...);
   *** getRange(...);
   *** getValue(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class kotlin.text.Regex$Companion
-keepclassmembers class kotlin.text.Regex$Companion {
   *** escape(...);
   *** escapeReplacement(...);
   *** fromLiteral(...);
}

-keep class kotlin.text.Regex
-keepclassmembers class kotlin.text.Regex {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getOptions(...);
   *** getPattern(...);
   *** containsMatchIn(...);
   *** find(...);
   *** findAll(...);
   *** matchEntire(...);
   *** matches(...);
   *** replace(...);
   *** replace(...);
   *** replaceFirst(...);
   *** split(...);
   *** toPattern(...);
}

-keep class kotlin.text.RegexKt
-keepclassmembers class kotlin.text.RegexKt {
}

-keep class kotlin.text.RegexOption
-keepclassmembers class kotlin.text.RegexOption {
   *** getMask(...);
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.text.StringsKt
-keepclassmembers class kotlin.text.StringsKt {
   *** all(...);
   *** any(...);
   *** any(...);
   *** asIterable(...);
   *** asSequence(...);
   *** associate(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateTo(...);
   *** associateWith(...);
   *** associateWithTo(...);
   *** chunked(...);
   *** chunked(...);
   *** chunkedSequence(...);
   *** chunkedSequence(...);
   *** count(...);
   *** drop(...);
   *** dropLast(...);
   *** dropLastWhile(...);
   *** dropWhile(...);
   *** filter(...);
   *** filterIndexed(...);
   *** filterIndexedTo(...);
   *** filterNot(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMapTo(...);
   *** fold(...);
   *** foldIndexed(...);
   *** foldRight(...);
   *** foldRightIndexed(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** getOrNull(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupingBy(...);
   *** indexOfFirst(...);
   *** indexOfLast(...);
   *** last(...);
   *** last(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** map(...);
   *** mapIndexed(...);
   *** mapIndexedNotNull(...);
   *** mapIndexedNotNullTo(...);
   *** mapIndexedTo(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** max(...);
   *** maxBy(...);
   *** maxByOrNull(...);
   *** maxOrNull(...);
   *** maxWith(...);
   *** maxWithOrNull(...);
   *** min(...);
   *** minBy(...);
   *** minByOrNull(...);
   *** minOrNull(...);
   *** minWith(...);
   *** minWithOrNull(...);
   *** none(...);
   *** none(...);
   *** partition(...);
   *** partition(...);
   *** random(...);
   *** randomOrNull(...);
   *** reduce(...);
   *** reduceIndexed(...);
   *** reduceIndexedOrNull(...);
   *** reduceOrNull(...);
   *** reduceRight(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightOrNull(...);
   *** reversed(...);
   *** runningFold(...);
   *** runningFoldIndexed(...);
   *** runningReduce(...);
   *** runningReduceIndexed(...);
   *** scan(...);
   *** scanIndexed(...);
   *** scanReduce(...);
   *** scanReduceIndexed(...);
   *** single(...);
   *** single(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** slice(...);
   *** slice(...);
   *** sumBy(...);
   *** sumByDouble(...);
   *** take(...);
   *** takeLast(...);
   *** takeLastWhile(...);
   *** takeWhile(...);
   *** toCollection(...);
   *** toHashSet(...);
   *** toList(...);
   *** toMutableList(...);
   *** toSet(...);
   *** windowed(...);
   *** windowed(...);
   *** windowedSequence(...);
   *** windowedSequence(...);
   *** withIndex(...);
   *** zip(...);
   *** zip(...);
   *** zipWithNext(...);
   *** zipWithNext(...);
   *** toSortedSet(...);
   *** commonPrefixWith(...);
   *** commonSuffixWith(...);
   *** contains(...);
   *** contains(...);
   *** endsWith(...);
   *** endsWith(...);
   *** findAnyOf(...);
   *** findLastAnyOf(...);
   *** getIndices(...);
   *** getLastIndex(...);
   *** hasSurrogatePairAt(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOfAny(...);
   *** indexOfAny(...);
   *** iterator(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOfAny(...);
   *** lastIndexOfAny(...);
   *** lineSequence(...);
   *** lines(...);
   *** padEnd(...);
   *** padStart(...);
   *** regionMatchesImpl(...);
   *** removePrefix(...);
   *** removeRange(...);
   *** removeRange(...);
   *** removeSuffix(...);
   *** removeSurrounding(...);
   *** removeSurrounding(...);
   *** replaceAfter(...);
   *** replaceAfter(...);
   *** replaceAfterLast(...);
   *** replaceAfterLast(...);
   *** replaceBefore(...);
   *** replaceBefore(...);
   *** replaceBeforeLast(...);
   *** replaceBeforeLast(...);
   *** replaceRange(...);
   *** replaceRange(...);
   *** split(...);
   *** split(...);
   *** splitToSequence(...);
   *** splitToSequence(...);
   *** startsWith(...);
   *** startsWith(...);
   *** startsWith(...);
   *** subSequence(...);
   *** substring(...);
   *** substring(...);
   *** substringAfter(...);
   *** substringAfter(...);
   *** substringAfterLast(...);
   *** substringAfterLast(...);
   *** substringBefore(...);
   *** substringBefore(...);
   *** substringBeforeLast(...);
   *** substringBeforeLast(...);
   *** trim(...);
   *** trim(...);
   *** trim(...);
   *** trimEnd(...);
   *** trimEnd(...);
   *** trimEnd(...);
   *** trimStart(...);
   *** trimStart(...);
   *** trimStart(...);
   *** capitalize(...);
   *** capitalize(...);
   *** compareTo(...);
   *** concatToString(...);
   *** concatToString(...);
   *** decapitalize(...);
   *** decapitalize(...);
   *** decodeToString(...);
   *** decodeToString(...);
   *** encodeToByteArray(...);
   *** encodeToByteArray(...);
   *** endsWith(...);
   *** equals(...);
   *** isBlank(...);
   *** regionMatches(...);
   *** regionMatches(...);
   *** repeat(...);
   *** replace(...);
   *** replace(...);
   *** replaceFirst(...);
   *** replaceFirst(...);
   *** split(...);
   *** startsWith(...);
   *** startsWith(...);
   *** toCharArray(...);
   *** numberFormatError(...);
   *** toByteOrNull(...);
   *** toByteOrNull(...);
   *** toIntOrNull(...);
   *** toIntOrNull(...);
   *** toLongOrNull(...);
   *** toLongOrNull(...);
   *** toShortOrNull(...);
   *** toShortOrNull(...);
   *** toBigDecimalOrNull(...);
   *** toBigDecimalOrNull(...);
   *** toBigIntegerOrNull(...);
   *** toBigIntegerOrNull(...);
   *** toDoubleOrNull(...);
   *** toFloatOrNull(...);
   *** append(...);
   *** append(...);
   *** appendln(...);
   *** appendln(...);
   *** clear(...);
   *** prependIndent(...);
   *** replaceIndent(...);
   *** replaceIndentByMargin(...);
   *** trimIndent(...);
   *** trimMargin(...);
   *** append(...);
   *** appendElement(...);
   *** appendRange(...);
}

-keep class kotlin.text.TypeAliasesKt
-keepclassmembers class kotlin.text.TypeAliasesKt {
}

-keep class kotlin.text.Typography
-keepclassmembers class kotlin.text.Typography {
}

-keep class kotlin.text.UStringsKt
-keepclassmembers class kotlin.text.UStringsKt {
   *** toString-JSWoG40(...);
   *** toString-LxnNnR4(...);
   *** toString-V7xB4Y4(...);
   *** toString-olVBNx4(...);
   *** toUByte(...);
   *** toUByte(...);
   *** toUByteOrNull(...);
   *** toUByteOrNull(...);
   *** toUInt(...);
   *** toUInt(...);
   *** toUIntOrNull(...);
   *** toUIntOrNull(...);
   *** toULong(...);
   *** toULong(...);
   *** toULongOrNull(...);
   *** toULongOrNull(...);
   *** toUShort(...);
   *** toUShort(...);
   *** toUShortOrNull(...);
   *** toUShortOrNull(...);
}

-keep class kotlin.system.ProcessKt
-keepclassmembers class kotlin.system.ProcessKt {
}

-keep class kotlin.system.TimingKt
-keepclassmembers class kotlin.system.TimingKt {
   *** measureNanoTime(...);
   *** measureTimeMillis(...);
}

-keep class kotlin.sequences.Sequence
-keepclassmembers class kotlin.sequences.Sequence {
}

-keep class kotlin.sequences.SequenceScope
-keepclassmembers class kotlin.sequences.SequenceScope {
   *** yield(...);
   *** yieldAll(...);
   *** yieldAll(...);
   *** yieldAll(...);
}

-keep class kotlin.sequences.SequenceScope
-keepclassmembers class kotlin.sequences.SequenceScope {
   *** yield(...);
   *** yieldAll(...);
}

-keep class kotlin.sequences.SequencesKt
-keepclassmembers class kotlin.sequences.SequencesKt {
   *** all(...);
   *** any(...);
   *** any(...);
   *** asIterable(...);
   *** associate(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateTo(...);
   *** associateWith(...);
   *** associateWithTo(...);
   *** averageOfByte(...);
   *** averageOfDouble(...);
   *** averageOfFloat(...);
   *** averageOfInt(...);
   *** averageOfLong(...);
   *** averageOfShort(...);
   *** chunked(...);
   *** chunked(...);
   *** contains(...);
   *** count(...);
   *** count(...);
   *** distinct(...);
   *** distinctBy(...);
   *** drop(...);
   *** dropWhile(...);
   *** elementAt(...);
   *** elementAtOrElse(...);
   *** elementAtOrNull(...);
   *** filter(...);
   *** filterIndexed(...);
   *** filterIndexedTo(...);
   *** filterNot(...);
   *** filterNotNull(...);
   *** filterNotNullTo(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMapIndexedIterable(...);
   *** flatMapIndexedSequence(...);
   *** flatMapIterable(...);
   *** flatMapIterableTo(...);
   *** flatMapTo(...);
   *** fold(...);
   *** foldIndexed(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupingBy(...);
   *** indexOf(...);
   *** indexOfFirst(...);
   *** indexOfLast(...);
   *** joinTo(...);
   *** joinToString(...);
   *** last(...);
   *** last(...);
   *** lastIndexOf(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** map(...);
   *** mapIndexed(...);
   *** mapIndexedNotNull(...);
   *** mapIndexedNotNullTo(...);
   *** mapIndexedTo(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** max(...);
   *** max(...);
   *** max(...);
   *** maxBy(...);
   *** maxByOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxWith(...);
   *** maxWithOrNull(...);
   *** min(...);
   *** min(...);
   *** min(...);
   *** minBy(...);
   *** minByOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minWith(...);
   *** minWithOrNull(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** none(...);
   *** none(...);
   *** onEach(...);
   *** onEachIndexed(...);
   *** partition(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** reduce(...);
   *** reduceIndexed(...);
   *** reduceIndexedOrNull(...);
   *** reduceOrNull(...);
   *** requireNoNulls(...);
   *** runningFold(...);
   *** runningFoldIndexed(...);
   *** runningReduce(...);
   *** runningReduceIndexed(...);
   *** scan(...);
   *** scanIndexed(...);
   *** scanReduce(...);
   *** scanReduceIndexed(...);
   *** single(...);
   *** single(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** sorted(...);
   *** sortedBy(...);
   *** sortedByDescending(...);
   *** sortedDescending(...);
   *** sortedWith(...);
   *** sumBy(...);
   *** sumByDouble(...);
   *** sumOfByte(...);
   *** sumOfDouble(...);
   *** sumOfFloat(...);
   *** sumOfInt(...);
   *** sumOfLong(...);
   *** sumOfShort(...);
   *** take(...);
   *** takeWhile(...);
   *** toCollection(...);
   *** toHashSet(...);
   *** toList(...);
   *** toMutableList(...);
   *** toMutableSet(...);
   *** toSet(...);
   *** windowed(...);
   *** windowed(...);
   *** withIndex(...);
   *** zip(...);
   *** zip(...);
   *** zipWithNext(...);
   *** zipWithNext(...);
   *** filterIsInstance(...);
   *** filterIsInstanceTo(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** asSequence(...);
   *** constrainOnce(...);
   *** emptySequence(...);
   *** flatMapIndexed(...);
   *** flatten(...);
   *** flattenSequenceOfIterable(...);
   *** generateSequence(...);
   *** generateSequence(...);
   *** generateSequence(...);
   *** ifEmpty(...);
   *** sequenceOf(...);
   *** shuffled(...);
   *** shuffled(...);
   *** unzip(...);
   *** iterator(...);
   *** sequence(...);
}

-keep class kotlin.sequences.USequencesKt
-keepclassmembers class kotlin.sequences.USequencesKt {
   *** sumOfUByte(...);
   *** sumOfUInt(...);
   *** sumOfULong(...);
   *** sumOfUShort(...);
}

-keep class kotlin.reflect.KAnnotatedElement
-keepclassmembers class kotlin.reflect.KAnnotatedElement {
}

-keep class kotlin.reflect.KCallable$DefaultImpls
-keepclassmembers class kotlin.reflect.KCallable$DefaultImpls {
}

-keep class kotlin.reflect.KCallable
-keepclassmembers class kotlin.reflect.KCallable {
}

-keep class kotlin.reflect.KClass$DefaultImpls
-keepclassmembers class kotlin.reflect.KClass$DefaultImpls {
}

-keep class kotlin.reflect.KClass
-keepclassmembers class kotlin.reflect.KClass {
}

-keep class kotlin.reflect.KClassifier
-keepclassmembers class kotlin.reflect.KClassifier {
}

-keep class kotlin.reflect.KDeclarationContainer
-keepclassmembers class kotlin.reflect.KDeclarationContainer {
}

-keep class kotlin.reflect.KFunction$DefaultImpls
-keepclassmembers class kotlin.reflect.KFunction$DefaultImpls {
}

-keep class kotlin.reflect.KFunction
-keepclassmembers class kotlin.reflect.KFunction {
}

-keep class kotlin.reflect.KMutableProperty$Setter
-keepclassmembers class kotlin.reflect.KMutableProperty$Setter {
}

-keep class kotlin.reflect.KMutableProperty
-keepclassmembers class kotlin.reflect.KMutableProperty {
}

-keep class kotlin.reflect.KMutableProperty0$Setter
-keepclassmembers class kotlin.reflect.KMutableProperty0$Setter {
}

-keep class kotlin.reflect.KMutableProperty0
-keepclassmembers class kotlin.reflect.KMutableProperty0 {
}

-keep class kotlin.reflect.KMutableProperty1$Setter
-keepclassmembers class kotlin.reflect.KMutableProperty1$Setter {
}

-keep class kotlin.reflect.KMutableProperty1
-keepclassmembers class kotlin.reflect.KMutableProperty1 {
}

-keep class kotlin.reflect.KMutableProperty2$Setter
-keepclassmembers class kotlin.reflect.KMutableProperty2$Setter {
}

-keep class kotlin.reflect.KMutableProperty2
-keepclassmembers class kotlin.reflect.KMutableProperty2 {
}

-keep class kotlin.reflect.KParameter$DefaultImpls
-keepclassmembers class kotlin.reflect.KParameter$DefaultImpls {
}

-keep class kotlin.reflect.KParameter$Kind
-keepclassmembers class kotlin.reflect.KParameter$Kind {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.reflect.KParameter
-keepclassmembers class kotlin.reflect.KParameter {
}

-keep class kotlin.reflect.KProperty$Accessor
-keepclassmembers class kotlin.reflect.KProperty$Accessor {
}

-keep class kotlin.reflect.KProperty$DefaultImpls
-keepclassmembers class kotlin.reflect.KProperty$DefaultImpls {
}

-keep class kotlin.reflect.KProperty$Getter
-keepclassmembers class kotlin.reflect.KProperty$Getter {
}

-keep class kotlin.reflect.KProperty
-keepclassmembers class kotlin.reflect.KProperty {
}

-keep class kotlin.reflect.KProperty0$Getter
-keepclassmembers class kotlin.reflect.KProperty0$Getter {
}

-keep class kotlin.reflect.KProperty0
-keepclassmembers class kotlin.reflect.KProperty0 {
}

-keep class kotlin.reflect.KProperty1$Getter
-keepclassmembers class kotlin.reflect.KProperty1$Getter {
}

-keep class kotlin.reflect.KProperty1
-keepclassmembers class kotlin.reflect.KProperty1 {
}

-keep class kotlin.reflect.KProperty2$Getter
-keepclassmembers class kotlin.reflect.KProperty2$Getter {
}

-keep class kotlin.reflect.KProperty2
-keepclassmembers class kotlin.reflect.KProperty2 {
}

-keep class kotlin.reflect.KType$DefaultImpls
-keepclassmembers class kotlin.reflect.KType$DefaultImpls {
}

-keep class kotlin.reflect.KType
-keepclassmembers class kotlin.reflect.KType {
}

-keep class kotlin.reflect.KTypeParameter
-keepclassmembers class kotlin.reflect.KTypeParameter {
}

-keep class kotlin.reflect.KClasses
-keepclassmembers class kotlin.reflect.KClasses {
   *** cast(...);
   *** safeCast(...);
}

-keep class kotlin.reflect.KClassesImplKt
-keepclassmembers class kotlin.reflect.KClassesImplKt {
   *** getQualifiedOrSimpleName(...);
}

-keep class kotlin.reflect.KTypeProjection$Companion
-keepclassmembers class kotlin.reflect.KTypeProjection$Companion {
   *** contravariant(...);
   *** covariant(...);
   *** invariant(...);
}

-keep class kotlin.reflect.KTypeProjection$WhenMappings
-keepclassmembers class kotlin.reflect.KTypeProjection$WhenMappings {
}

-keep class kotlin.reflect.KTypeProjection
-keepclassmembers class kotlin.reflect.KTypeProjection {
   <init>(...);
   *** getType(...);
   *** getVariance(...);
   *** component1(...);
   *** component2(...);
   *** contravariant(...);
   *** copy(...);
   *** covariant(...);
   *** invariant(...);
}

-keep class kotlin.reflect.KVariance
-keepclassmembers class kotlin.reflect.KVariance {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.reflect.KVisibility
-keepclassmembers class kotlin.reflect.KVisibility {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.reflect.TypeOfKt
-keepclassmembers class kotlin.reflect.TypeOfKt {
}

-keep class kotlin.reflect.TypesJVMKt$WhenMappings
-keepclassmembers class kotlin.reflect.TypesJVMKt$WhenMappings {
}

-keep class kotlin.reflect.TypesJVMKt
-keepclassmembers class kotlin.reflect.TypesJVMKt {
   *** getJavaType(...);
}

-keep class kotlin.random.PlatformRandomKt
-keepclassmembers class kotlin.random.PlatformRandomKt {
   *** asJavaRandom(...);
   *** asKotlinRandom(...);
}

-keep class kotlin.random.Random$Default
-keepclassmembers class kotlin.random.Random$Default {
   *** nextBits(...);
}

-keep class kotlin.random.Random
-keepclassmembers class kotlin.random.Random {
   <init>(...);
   *** nextBits(...);
   *** nextBoolean(...);
   *** nextBytes(...);
   *** nextBytes(...);
   *** nextBytes(...);
   *** nextDouble(...);
   *** nextDouble(...);
   *** nextDouble(...);
   *** nextFloat(...);
   *** nextInt(...);
   *** nextInt(...);
   *** nextInt(...);
   *** nextLong(...);
   *** nextLong(...);
   *** nextLong(...);
}

-keep class kotlin.random.Random
-keepclassmembers class kotlin.random.Random {
   *** nextBits(...);
}

-keep class kotlin.random.RandomKt
-keepclassmembers class kotlin.random.RandomKt {
   *** Random(...);
   *** Random(...);
   *** nextInt(...);
   *** nextLong(...);
   *** takeUpperBits(...);
}

-keep class kotlin.random.URandomKt
-keepclassmembers class kotlin.random.URandomKt {
   *** nextUBytes(...);
   *** nextUBytes-EVgfTAA(...);
   *** nextUBytes-Wvrt4B4(...);
   *** nextUInt(...);
   *** nextUInt(...);
   *** nextUInt-a8DCA5k(...);
   *** nextUInt-qCasIEU(...);
   *** nextULong(...);
   *** nextULong(...);
   *** nextULong-V1Xi4fY(...);
   *** nextULong-jmpaW-c(...);
}

-keep class kotlin.properties.Delegates
-keepclassmembers class kotlin.properties.Delegates {
   *** notNull(...);
   *** observable(...);
   *** vetoable(...);
}

-keep class kotlin.properties.PropertyDelegateProvider
-keepclassmembers class kotlin.properties.PropertyDelegateProvider {
}

-keep class kotlin.properties.ReadOnlyProperty
-keepclassmembers class kotlin.properties.ReadOnlyProperty {
}

-keep class kotlin.properties.ReadWriteProperty
-keepclassmembers class kotlin.properties.ReadWriteProperty {
}

-keep class kotlin.properties.ObservableProperty
-keepclassmembers class kotlin.properties.ObservableProperty {
   <init>(...);
   *** afterChange(...);
   *** beforeChange(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class kotlin.properties.ObservableProperty
-keepclassmembers class kotlin.properties.ObservableProperty {
}

-keep class kotlin.math.MathKt
-keepclassmembers class kotlin.math.MathKt {
   *** acosh(...);
   *** asinh(...);
   *** atanh(...);
   *** getSign(...);
   *** getSign(...);
   *** log(...);
   *** log(...);
   *** log2(...);
   *** log2(...);
   *** roundToInt(...);
   *** roundToInt(...);
   *** roundToLong(...);
   *** roundToLong(...);
   *** truncate(...);
   *** truncate(...);
}

-keep class kotlin.math.UMathKt
-keepclassmembers class kotlin.math.UMathKt {
}

-keep class kotlin.jvm.JvmDefault
-keepclassmembers class kotlin.jvm.JvmDefault {
}

-keep class kotlin.jvm.JvmDefaultWithoutCompatibility
-keepclassmembers class kotlin.jvm.JvmDefaultWithoutCompatibility {
}

-keep class kotlin.jvm.JvmField
-keepclassmembers class kotlin.jvm.JvmField {
}

-keep class kotlin.jvm.JvmMultifileClass
-keepclassmembers class kotlin.jvm.JvmMultifileClass {
}

-keep class kotlin.jvm.JvmName
-keepclassmembers class kotlin.jvm.JvmName {
}

-keep class kotlin.jvm.JvmOverloads
-keepclassmembers class kotlin.jvm.JvmOverloads {
}

-keep class kotlin.jvm.JvmStatic
-keepclassmembers class kotlin.jvm.JvmStatic {
}

-keep class kotlin.jvm.JvmSuppressWildcards
-keepclassmembers class kotlin.jvm.JvmSuppressWildcards {
}

-keep class kotlin.jvm.JvmSynthetic
-keepclassmembers class kotlin.jvm.JvmSynthetic {
}

-keep class kotlin.jvm.JvmWildcard
-keepclassmembers class kotlin.jvm.JvmWildcard {
}

-keep class kotlin.jvm.PurelyImplements
-keepclassmembers class kotlin.jvm.PurelyImplements {
}

-keep class kotlin.jvm.Strictfp
-keepclassmembers class kotlin.jvm.Strictfp {
}

-keep class kotlin.jvm.Synchronized
-keepclassmembers class kotlin.jvm.Synchronized {
}

-keep class kotlin.jvm.Throws
-keepclassmembers class kotlin.jvm.Throws {
}

-keep class kotlin.jvm.Transient
-keepclassmembers class kotlin.jvm.Transient {
}

-keep class kotlin.jvm.Volatile
-keepclassmembers class kotlin.jvm.Volatile {
}

-keep class kotlin.jvm.JvmClassMappingKt
-keepclassmembers class kotlin.jvm.JvmClassMappingKt {
   *** getAnnotationClass(...);
   *** getJavaClass(...);
   *** getJavaClass(...);
   *** getJavaObjectType(...);
   *** getJavaPrimitiveType(...);
   *** getKotlinClass(...);
   *** getRuntimeClassOfKClassInstance(...);
}

-keep class kotlin.jvm.KotlinReflectionNotSupportedError
-keepclassmembers class kotlin.jvm.KotlinReflectionNotSupportedError {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class kotlin.jvm.internal.AdaptedFunctionReference
-keepclassmembers class kotlin.jvm.internal.AdaptedFunctionReference {
   <init>(...);
   <init>(...);
   *** getArity(...);
   *** getOwner(...);
}

-keep class kotlin.jvm.internal.ArrayIteratorKt
-keepclassmembers class kotlin.jvm.internal.ArrayIteratorKt {
   *** iterator(...);
}

-keep class kotlin.jvm.internal.ArrayIteratorsKt
-keepclassmembers class kotlin.jvm.internal.ArrayIteratorsKt {
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
}

-keep class kotlin.jvm.internal.BooleanSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.BooleanSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.ByteSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.ByteSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.CallableReference
-keepclassmembers class kotlin.jvm.internal.CallableReference {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnnotations(...);
   *** getBoundReceiver(...);
   *** isAbstract(...);
   *** isFinal(...);
   *** isOpen(...);
   *** isSuspend(...);
   *** getName(...);
   *** getOwner(...);
   *** getParameters(...);
   *** getReflected(...);
   *** getReturnType(...);
   *** getSignature(...);
   *** getTypeParameters(...);
   *** getVisibility(...);
   *** call(...);
   *** callBy(...);
   *** compute(...);
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.CallableReference
-keepclassmembers class kotlin.jvm.internal.CallableReference {
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.CharSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.CharSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.ClassReference$Companion
-keepclassmembers class kotlin.jvm.internal.ClassReference$Companion {
   *** getClassQualifiedName(...);
   *** getClassSimpleName(...);
   *** isInstance(...);
}

-keep class kotlin.jvm.internal.ClassReference
-keepclassmembers class kotlin.jvm.internal.ClassReference {
   <init>(...);
   *** getAnnotations(...);
   *** getConstructors(...);
   *** isAbstract(...);
   *** isCompanion(...);
   *** isData(...);
   *** isFinal(...);
   *** isFun(...);
   *** isInner(...);
   *** isOpen(...);
   *** isSealed(...);
   *** getJClass(...);
   *** getMembers(...);
   *** getNestedClasses(...);
   *** getObjectInstance(...);
   *** getQualifiedName(...);
   *** getSealedSubclasses(...);
   *** getSimpleName(...);
   *** getSupertypes(...);
   *** getTypeParameters(...);
   *** getVisibility(...);
   *** isInstance(...);
}

-keep class kotlin.jvm.internal.CollectionToArray
-keepclassmembers class kotlin.jvm.internal.CollectionToArray {
   *** toArray(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.DoubleSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.DoubleSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.FloatSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.FloatSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.FunctionReference
-keepclassmembers class kotlin.jvm.internal.FunctionReference {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getArity(...);
   *** isExternal(...);
   *** isInfix(...);
   *** isInline(...);
   *** isOperator(...);
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.ClassBasedDeclarationContainer
-keepclassmembers class kotlin.jvm.internal.ClassBasedDeclarationContainer {
}

-keep class kotlin.jvm.internal.FunctionAdapter
-keepclassmembers class kotlin.jvm.internal.FunctionAdapter {
}

-keep class kotlin.jvm.internal.FunctionBase
-keepclassmembers class kotlin.jvm.internal.FunctionBase {
}

-keep class kotlin.jvm.internal.KTypeBase
-keepclassmembers class kotlin.jvm.internal.KTypeBase {
}

-keep class kotlin.jvm.internal.InlineMarker
-keepclassmembers class kotlin.jvm.internal.InlineMarker {
   <init>(...);
   *** afterInlineCall(...);
   *** beforeInlineCall(...);
   *** finallyEnd(...);
   *** finallyStart(...);
   *** mark(...);
   *** mark(...);
}

-keep class kotlin.jvm.internal.Intrinsics$Kotlin
-keepclassmembers class kotlin.jvm.internal.Intrinsics$Kotlin {
}

-keep class kotlin.jvm.internal.Intrinsics
-keepclassmembers class kotlin.jvm.internal.Intrinsics {
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** checkExpressionValueIsNotNull(...);
   *** checkFieldIsNotNull(...);
   *** checkFieldIsNotNull(...);
   *** checkHasClass(...);
   *** checkHasClass(...);
   *** checkNotNull(...);
   *** checkNotNull(...);
   *** checkNotNullExpressionValue(...);
   *** checkNotNullParameter(...);
   *** checkParameterIsNotNull(...);
   *** checkReturnedValueIsNotNull(...);
   *** checkReturnedValueIsNotNull(...);
   *** compare(...);
   *** compare(...);
   *** needClassReification(...);
   *** needClassReification(...);
   *** reifiedOperationMarker(...);
   *** reifiedOperationMarker(...);
   *** stringPlus(...);
   *** throwAssert(...);
   *** throwAssert(...);
   *** throwIllegalArgument(...);
   *** throwIllegalArgument(...);
   *** throwIllegalState(...);
   *** throwIllegalState(...);
   *** throwJavaNpe(...);
   *** throwJavaNpe(...);
   *** throwNpe(...);
   *** throwNpe(...);
   *** throwUndefinedForReified(...);
   *** throwUndefinedForReified(...);
   *** throwUninitializedProperty(...);
   *** throwUninitializedPropertyAccessException(...);
}

-keep class kotlin.jvm.internal.IntSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.IntSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.Lambda
-keepclassmembers class kotlin.jvm.internal.Lambda {
   <init>(...);
   *** getArity(...);
}

-keep class kotlin.jvm.internal.Lambda
-keepclassmembers class kotlin.jvm.internal.Lambda {
}

-keep class kotlin.jvm.internal.LocalVariableReference
-keepclassmembers class kotlin.jvm.internal.LocalVariableReference {
   <init>(...);
   *** get(...);
}

-keep class kotlin.jvm.internal.LocalVariableReferencesKt
-keepclassmembers class kotlin.jvm.internal.LocalVariableReferencesKt {
}

-keep class kotlin.jvm.internal.LongSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.LongSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.MagicApiIntrinsics
-keepclassmembers class kotlin.jvm.internal.MagicApiIntrinsics {
   <init>(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** voidMagicApiCall(...);
   *** voidMagicApiCall(...);
}

-keep class kotlin.jvm.internal.MutableLocalVariableReference
-keepclassmembers class kotlin.jvm.internal.MutableLocalVariableReference {
   <init>(...);
   *** get(...);
   *** set(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSetter(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference {
   *** getSetter(...);
   *** getGetter(...);
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference0
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference0 {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getGetter(...);
   *** getSetter(...);
   *** computeReflected(...);
   *** invoke(...);
   *** get(...);
   *** set(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference0
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference0 {
}

-keep class kotlin.jvm.internal.MutablePropertyReference1
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference1 {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** getSetter(...);
   *** computeReflected(...);
   *** getDelegate(...);
   *** invoke(...);
   *** get(...);
   *** set(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference1
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference1 {
}

-keep class kotlin.jvm.internal.MutablePropertyReference2
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference2 {
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** getSetter(...);
   *** computeReflected(...);
   *** getDelegate(...);
   *** invoke(...);
   *** get(...);
   *** set(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference2
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference2 {
}

-keep class kotlin.jvm.internal.PackageReference
-keepclassmembers class kotlin.jvm.internal.PackageReference {
   <init>(...);
   *** getJClass(...);
   *** getMembers(...);
}

-keep class kotlin.jvm.internal.PrimitiveSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.PrimitiveSpreadBuilder {
   <init>(...);
   *** getPosition(...);
   *** setPosition(...);
   *** addSpread(...);
   *** getSize(...);
   *** size(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.PrimitiveSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.PrimitiveSpreadBuilder {
   *** getSize(...);
}

-keep class kotlin.jvm.internal.PropertyReference
-keepclassmembers class kotlin.jvm.internal.PropertyReference {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** isConst(...);
   *** isLateinit(...);
}

-keep class kotlin.jvm.internal.PropertyReference
-keepclassmembers class kotlin.jvm.internal.PropertyReference {
   *** getGetter(...);
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.PropertyReference0
-keepclassmembers class kotlin.jvm.internal.PropertyReference0 {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getGetter(...);
   *** computeReflected(...);
   *** invoke(...);
   *** get(...);
}

-keep class kotlin.jvm.internal.PropertyReference0
-keepclassmembers class kotlin.jvm.internal.PropertyReference0 {
}

-keep class kotlin.jvm.internal.PropertyReference1
-keepclassmembers class kotlin.jvm.internal.PropertyReference1 {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** computeReflected(...);
   *** getDelegate(...);
   *** invoke(...);
   *** get(...);
}

-keep class kotlin.jvm.internal.PropertyReference1
-keepclassmembers class kotlin.jvm.internal.PropertyReference1 {
}

-keep class kotlin.jvm.internal.PropertyReference2
-keepclassmembers class kotlin.jvm.internal.PropertyReference2 {
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** computeReflected(...);
   *** getDelegate(...);
   *** invoke(...);
   *** get(...);
}

-keep class kotlin.jvm.internal.PropertyReference2
-keepclassmembers class kotlin.jvm.internal.PropertyReference2 {
}

-keep class kotlin.jvm.internal.Ref$BooleanRef
-keepclassmembers class kotlin.jvm.internal.Ref$BooleanRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$ByteRef
-keepclassmembers class kotlin.jvm.internal.Ref$ByteRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$CharRef
-keepclassmembers class kotlin.jvm.internal.Ref$CharRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$DoubleRef
-keepclassmembers class kotlin.jvm.internal.Ref$DoubleRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$FloatRef
-keepclassmembers class kotlin.jvm.internal.Ref$FloatRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$IntRef
-keepclassmembers class kotlin.jvm.internal.Ref$IntRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$LongRef
-keepclassmembers class kotlin.jvm.internal.Ref$LongRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$ObjectRef
-keepclassmembers class kotlin.jvm.internal.Ref$ObjectRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$ShortRef
-keepclassmembers class kotlin.jvm.internal.Ref$ShortRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref
-keepclassmembers class kotlin.jvm.internal.Ref {
}

-keep class kotlin.jvm.internal.Reflection
-keepclassmembers class kotlin.jvm.internal.Reflection {
   <init>(...);
   *** createKotlinClass(...);
   *** createKotlinClass(...);
   *** function(...);
   *** getOrCreateKotlinClass(...);
   *** getOrCreateKotlinClass(...);
   *** getOrCreateKotlinClasses(...);
   *** getOrCreateKotlinPackage(...);
   *** getOrCreateKotlinPackage(...);
   *** mutableProperty0(...);
   *** mutableProperty1(...);
   *** mutableProperty2(...);
   *** nullableTypeOf(...);
   *** nullableTypeOf(...);
   *** nullableTypeOf(...);
   *** nullableTypeOf(...);
   *** nullableTypeOf(...);
   *** property0(...);
   *** property1(...);
   *** property2(...);
   *** renderLambdaToString(...);
   *** renderLambdaToString(...);
   *** setUpperBounds(...);
   *** setUpperBounds(...);
   *** typeOf(...);
   *** typeOf(...);
   *** typeOf(...);
   *** typeOf(...);
   *** typeOf(...);
   *** typeParameter(...);
}

-keep class kotlin.jvm.internal.ReflectionFactory
-keepclassmembers class kotlin.jvm.internal.ReflectionFactory {
   <init>(...);
   *** createKotlinClass(...);
   *** createKotlinClass(...);
   *** function(...);
   *** getOrCreateKotlinClass(...);
   *** getOrCreateKotlinClass(...);
   *** getOrCreateKotlinPackage(...);
   *** mutableProperty0(...);
   *** mutableProperty1(...);
   *** mutableProperty2(...);
   *** property0(...);
   *** property1(...);
   *** property2(...);
   *** renderLambdaToString(...);
   *** renderLambdaToString(...);
   *** setUpperBounds(...);
   *** typeOf(...);
   *** typeParameter(...);
}

-keep class kotlin.jvm.internal.ShortSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.ShortSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.SpreadBuilder
-keepclassmembers class kotlin.jvm.internal.SpreadBuilder {
   <init>(...);
   *** add(...);
   *** addSpread(...);
   *** size(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.TypeIntrinsics
-keepclassmembers class kotlin.jvm.internal.TypeIntrinsics {
   <init>(...);
   *** asMutableCollection(...);
   *** asMutableCollection(...);
   *** asMutableIterable(...);
   *** asMutableIterable(...);
   *** asMutableIterator(...);
   *** asMutableIterator(...);
   *** asMutableList(...);
   *** asMutableList(...);
   *** asMutableListIterator(...);
   *** asMutableListIterator(...);
   *** asMutableMap(...);
   *** asMutableMap(...);
   *** asMutableMapEntry(...);
   *** asMutableMapEntry(...);
   *** asMutableSet(...);
   *** asMutableSet(...);
   *** beforeCheckcastToFunctionOfArity(...);
   *** beforeCheckcastToFunctionOfArity(...);
   *** castToCollection(...);
   *** castToIterable(...);
   *** castToIterator(...);
   *** castToList(...);
   *** castToListIterator(...);
   *** castToMap(...);
   *** castToMapEntry(...);
   *** castToSet(...);
   *** getFunctionArity(...);
   *** isFunctionOfArity(...);
   *** isMutableCollection(...);
   *** isMutableIterable(...);
   *** isMutableIterator(...);
   *** isMutableList(...);
   *** isMutableListIterator(...);
   *** isMutableMap(...);
   *** isMutableMapEntry(...);
   *** isMutableSet(...);
   *** throwCce(...);
   *** throwCce(...);
   *** throwCce(...);
}

-keep class kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings
-keepclassmembers class kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings {
}

-keep class kotlin.jvm.internal.TypeParameterReference$Companion
-keepclassmembers class kotlin.jvm.internal.TypeParameterReference$Companion {
   *** toString(...);
}

-keep class kotlin.jvm.internal.TypeParameterReference
-keepclassmembers class kotlin.jvm.internal.TypeParameterReference {
   <init>(...);
   *** isReified(...);
   *** getName(...);
   *** getUpperBounds(...);
   *** setUpperBounds(...);
   *** getVariance(...);
}

-keep class kotlin.jvm.internal.TypeReference$WhenMappings
-keepclassmembers class kotlin.jvm.internal.TypeReference$WhenMappings {
}

-keep class kotlin.jvm.internal.TypeReference
-keepclassmembers class kotlin.jvm.internal.TypeReference {
   <init>(...);
   *** getAnnotations(...);
   *** getArguments(...);
   *** getClassifier(...);
   *** isMarkedNullable(...);
}

-keep class kotlin.jvm.internal.unsafe.MonitorKt
-keepclassmembers class kotlin.jvm.internal.unsafe.MonitorKt {
}

-keep class kotlin.jvm.internal.markers.KMappedMarker
-keepclassmembers class kotlin.jvm.internal.markers.KMappedMarker {
}

-keep class kotlin.jvm.internal.markers.KMutableCollection
-keepclassmembers class kotlin.jvm.internal.markers.KMutableCollection {
}

-keep class kotlin.jvm.internal.markers.KMutableIterable
-keepclassmembers class kotlin.jvm.internal.markers.KMutableIterable {
}

-keep class kotlin.jvm.internal.markers.KMutableIterator
-keepclassmembers class kotlin.jvm.internal.markers.KMutableIterator {
}

-keep class kotlin.jvm.internal.markers.KMutableList
-keepclassmembers class kotlin.jvm.internal.markers.KMutableList {
}

-keep class kotlin.jvm.internal.markers.KMutableListIterator
-keepclassmembers class kotlin.jvm.internal.markers.KMutableListIterator {
}

-keep class kotlin.jvm.internal.markers.KMutableMap$Entry
-keepclassmembers class kotlin.jvm.internal.markers.KMutableMap$Entry {
}

-keep class kotlin.jvm.internal.markers.KMutableMap
-keepclassmembers class kotlin.jvm.internal.markers.KMutableMap {
}

-keep class kotlin.jvm.internal.markers.KMutableSet
-keepclassmembers class kotlin.jvm.internal.markers.KMutableSet {
}

-keep class kotlin.jvm.functions.Function0
-keepclassmembers class kotlin.jvm.functions.Function0 {
}

-keep class kotlin.jvm.functions.Function1
-keepclassmembers class kotlin.jvm.functions.Function1 {
}

-keep class kotlin.jvm.functions.Function10
-keepclassmembers class kotlin.jvm.functions.Function10 {
}

-keep class kotlin.jvm.functions.Function11
-keepclassmembers class kotlin.jvm.functions.Function11 {
}

-keep class kotlin.jvm.functions.Function12
-keepclassmembers class kotlin.jvm.functions.Function12 {
}

-keep class kotlin.jvm.functions.Function13
-keepclassmembers class kotlin.jvm.functions.Function13 {
}

-keep class kotlin.jvm.functions.Function14
-keepclassmembers class kotlin.jvm.functions.Function14 {
}

-keep class kotlin.jvm.functions.Function15
-keepclassmembers class kotlin.jvm.functions.Function15 {
}

-keep class kotlin.jvm.functions.Function16
-keepclassmembers class kotlin.jvm.functions.Function16 {
}

-keep class kotlin.jvm.functions.Function17
-keepclassmembers class kotlin.jvm.functions.Function17 {
}

-keep class kotlin.jvm.functions.Function18
-keepclassmembers class kotlin.jvm.functions.Function18 {
}

-keep class kotlin.jvm.functions.Function19
-keepclassmembers class kotlin.jvm.functions.Function19 {
}

-keep class kotlin.jvm.functions.Function2
-keepclassmembers class kotlin.jvm.functions.Function2 {
}

-keep class kotlin.jvm.functions.Function20
-keepclassmembers class kotlin.jvm.functions.Function20 {
}

-keep class kotlin.jvm.functions.Function21
-keepclassmembers class kotlin.jvm.functions.Function21 {
}

-keep class kotlin.jvm.functions.Function22
-keepclassmembers class kotlin.jvm.functions.Function22 {
}

-keep class kotlin.jvm.functions.Function3
-keepclassmembers class kotlin.jvm.functions.Function3 {
}

-keep class kotlin.jvm.functions.Function4
-keepclassmembers class kotlin.jvm.functions.Function4 {
}

-keep class kotlin.jvm.functions.Function5
-keepclassmembers class kotlin.jvm.functions.Function5 {
}

-keep class kotlin.jvm.functions.Function6
-keepclassmembers class kotlin.jvm.functions.Function6 {
}

-keep class kotlin.jvm.functions.Function7
-keepclassmembers class kotlin.jvm.functions.Function7 {
}

-keep class kotlin.jvm.functions.Function8
-keepclassmembers class kotlin.jvm.functions.Function8 {
}

-keep class kotlin.jvm.functions.Function9
-keepclassmembers class kotlin.jvm.functions.Function9 {
}

-keep class kotlin.jvm.functions.FunctionN
-keepclassmembers class kotlin.jvm.functions.FunctionN {
}

-keep class kotlin.js.ExperimentalJsExport
-keepclassmembers class kotlin.js.ExperimentalJsExport {
}

-keep class kotlin.io.AccessDeniedException
-keepclassmembers class kotlin.io.AccessDeniedException {
   <init>(...);
}

-keep class kotlin.io.ByteStreamsKt
-keepclassmembers class kotlin.io.ByteStreamsKt {
   *** copyTo(...);
   *** iterator(...);
   *** readBytes(...);
   *** readBytes(...);
}

-keep class kotlin.io.CloseableKt
-keepclassmembers class kotlin.io.CloseableKt {
   *** closeFinally(...);
}

-keep class kotlin.io.ConsoleKt
-keepclassmembers class kotlin.io.ConsoleKt {
   *** readLine(...);
}

-keep class kotlin.io.ConstantsKt
-keepclassmembers class kotlin.io.ConstantsKt {
}

-keep class kotlin.io.ExceptionsKt
-keepclassmembers class kotlin.io.ExceptionsKt {
}

-keep class kotlin.io.FileAlreadyExistsException
-keepclassmembers class kotlin.io.FileAlreadyExistsException {
   <init>(...);
}

-keep class kotlin.io.FilesKt
-keepclassmembers class kotlin.io.FilesKt {
   *** copyRecursively(...);
   *** copyTo(...);
   *** createTempDir(...);
   *** createTempFile(...);
   *** deleteRecursively(...);
   *** endsWith(...);
   *** endsWith(...);
   *** getExtension(...);
   *** getInvariantSeparatorsPath(...);
   *** getNameWithoutExtension(...);
   *** normalize(...);
   *** relativeTo(...);
   *** relativeToOrNull(...);
   *** relativeToOrSelf(...);
   *** resolve(...);
   *** resolve(...);
   *** resolveSibling(...);
   *** resolveSibling(...);
   *** startsWith(...);
   *** startsWith(...);
   *** toRelativeString(...);
   *** walk(...);
   *** walkBottomUp(...);
   *** walkTopDown(...);
   *** appendBytes(...);
   *** appendText(...);
   *** forEachBlock(...);
   *** forEachBlock(...);
   *** forEachLine(...);
   *** readBytes(...);
   *** readLines(...);
   *** readText(...);
   *** useLines(...);
   *** writeBytes(...);
   *** writeText(...);
   *** getRoot(...);
   *** getRootName(...);
   *** isRooted(...);
   *** subPath(...);
}

-keep class kotlin.io.FileSystemException
-keepclassmembers class kotlin.io.FileSystemException {
   <init>(...);
   *** getFile(...);
   *** getOther(...);
   *** getReason(...);
}

-keep class kotlin.io.FileTreeWalk
-keepclassmembers class kotlin.io.FileTreeWalk {
   *** iterator(...);
   *** maxDepth(...);
   *** onEnter(...);
   *** onFail(...);
   *** onLeave(...);
}

-keep class kotlin.io.FileWalkDirection
-keepclassmembers class kotlin.io.FileWalkDirection {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.io.NoSuchFileException
-keepclassmembers class kotlin.io.NoSuchFileException {
   <init>(...);
}

-keep class kotlin.io.OnErrorAction
-keepclassmembers class kotlin.io.OnErrorAction {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.io.SerializableKt
-keepclassmembers class kotlin.io.SerializableKt {
}

-keep class kotlin.io.TextStreamsKt
-keepclassmembers class kotlin.io.TextStreamsKt {
   *** copyTo(...);
   *** forEachLine(...);
   *** lineSequence(...);
   *** readBytes(...);
   *** readLines(...);
   *** readText(...);
   *** useLines(...);
}

-keep class kotlin.internal.PlatformImplementationsKt
-keepclassmembers class kotlin.internal.PlatformImplementationsKt {
}

-keep class kotlin.internal.ProgressionUtilKt
-keepclassmembers class kotlin.internal.ProgressionUtilKt {
}

-keep class kotlin.internal.UProgressionUtilKt
-keepclassmembers class kotlin.internal.UProgressionUtilKt {
}

-keep class kotlin.experimental.BitwiseOperationsKt
-keepclassmembers class kotlin.experimental.BitwiseOperationsKt {
}

-keep class kotlin.experimental.ExperimentalTypeInference
-keepclassmembers class kotlin.experimental.ExperimentalTypeInference {
}

-keep class kotlin.coroutines.AbstractCoroutineContextElement
-keepclassmembers class kotlin.coroutines.AbstractCoroutineContextElement {
   <init>(...);
   *** getKey(...);
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlin.coroutines.AbstractCoroutineContextElement
-keepclassmembers class kotlin.coroutines.AbstractCoroutineContextElement {
}

-keep class kotlin.coroutines.ContinuationKt
-keepclassmembers class kotlin.coroutines.ContinuationKt {
   *** createCoroutine(...);
   *** createCoroutine(...);
   *** startCoroutine(...);
   *** startCoroutine(...);
}

-keep class kotlin.coroutines.CoroutineContextImplKt
-keepclassmembers class kotlin.coroutines.CoroutineContextImplKt {
   *** getPolymorphicElement(...);
   *** minusPolymorphicKey(...);
}

-keep class kotlin.coroutines.EmptyCoroutineContext
-keepclassmembers class kotlin.coroutines.EmptyCoroutineContext {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlin.coroutines.Continuation
-keepclassmembers class kotlin.coroutines.Continuation {
}

-keep class kotlin.coroutines.ContinuationInterceptor$DefaultImpls
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor$DefaultImpls {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
   *** releaseInterceptedContinuation(...);
}

-keep class kotlin.coroutines.ContinuationInterceptor$Key
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor$Key {
}

-keep class kotlin.coroutines.ContinuationInterceptor
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor {
}

-keep class kotlin.coroutines.ContinuationInterceptor
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor {
}

-keep class kotlin.coroutines.ContinuationInterceptor
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor {
}

-keep class kotlin.coroutines.CoroutineContext$DefaultImpls
-keepclassmembers class kotlin.coroutines.CoroutineContext$DefaultImpls {
   *** plus(...);
}

-keep class kotlin.coroutines.CoroutineContext$Element$DefaultImpls
-keepclassmembers class kotlin.coroutines.CoroutineContext$Element$DefaultImpls {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlin.coroutines.CoroutineContext$Element
-keepclassmembers class kotlin.coroutines.CoroutineContext$Element {
}

-keep class kotlin.coroutines.CoroutineContext$Key
-keepclassmembers class kotlin.coroutines.CoroutineContext$Key {
}

-keep class kotlin.coroutines.CoroutineContext
-keepclassmembers class kotlin.coroutines.CoroutineContext {
}

-keep class kotlin.coroutines.RestrictsSuspension
-keepclassmembers class kotlin.coroutines.RestrictsSuspension {
}

-keep class kotlin.coroutines.jvm.internal.Boxing
-keepclassmembers class kotlin.coroutines.jvm.internal.Boxing {
}

-keep class kotlin.coroutines.jvm.internal.DebugMetadataKt
-keepclassmembers class kotlin.coroutines.jvm.internal.DebugMetadataKt {
}

-keep class kotlin.coroutines.jvm.internal.DebugProbesKt
-keepclassmembers class kotlin.coroutines.jvm.internal.DebugProbesKt {
}

-keep class kotlin.coroutines.jvm.internal.CoroutineStackFrame
-keepclassmembers class kotlin.coroutines.jvm.internal.CoroutineStackFrame {
}

-keep class kotlin.coroutines.jvm.internal.RunSuspendKt
-keepclassmembers class kotlin.coroutines.jvm.internal.RunSuspendKt {
}

-keep class kotlin.coroutines.intrinsics.IntrinsicsKt
-keepclassmembers class kotlin.coroutines.intrinsics.IntrinsicsKt {
   *** getCOROUTINE_SUSPENDED(...);
   *** createCoroutineUnintercepted(...);
   *** createCoroutineUnintercepted(...);
   *** intercepted(...);
}

-keep class kotlin.coroutines.cancellation.CancellationExceptionKt
-keepclassmembers class kotlin.coroutines.cancellation.CancellationExceptionKt {
}

-keep class kotlin.contracts.ContractBuilderKt
-keepclassmembers class kotlin.contracts.ContractBuilderKt {
}

-keep class kotlin.contracts.CallsInPlace
-keepclassmembers class kotlin.contracts.CallsInPlace {
}

-keep class kotlin.contracts.ConditionalEffect
-keepclassmembers class kotlin.contracts.ConditionalEffect {
}

-keep class kotlin.contracts.ContractBuilder$DefaultImpls
-keepclassmembers class kotlin.contracts.ContractBuilder$DefaultImpls {
}

-keep class kotlin.contracts.ContractBuilder
-keepclassmembers class kotlin.contracts.ContractBuilder {
}

-keep class kotlin.contracts.Effect
-keepclassmembers class kotlin.contracts.Effect {
}

-keep class kotlin.contracts.ExperimentalContracts
-keepclassmembers class kotlin.contracts.ExperimentalContracts {
}

-keep class kotlin.contracts.InvocationKind
-keepclassmembers class kotlin.contracts.InvocationKind {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.contracts.Returns
-keepclassmembers class kotlin.contracts.Returns {
}

-keep class kotlin.contracts.ReturnsNotNull
-keepclassmembers class kotlin.contracts.ReturnsNotNull {
}

-keep class kotlin.contracts.SimpleEffect
-keepclassmembers class kotlin.contracts.SimpleEffect {
}

-keep class kotlin.concurrent.LocksKt
-keepclassmembers class kotlin.concurrent.LocksKt {
}

-keep class kotlin.concurrent.ThreadsKt
-keepclassmembers class kotlin.concurrent.ThreadsKt {
   *** thread(...);
}

-keep class kotlin.concurrent.TimersKt
-keepclassmembers class kotlin.concurrent.TimersKt {
}

-keep class kotlin.comparisons.ComparisonsKt
-keepclassmembers class kotlin.comparisons.ComparisonsKt {
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** compareBy(...);
   *** compareValues(...);
   *** compareValuesBy(...);
   *** naturalOrder(...);
   *** nullsFirst(...);
   *** nullsLast(...);
   *** reverseOrder(...);
   *** reversed(...);
   *** then(...);
   *** thenDescending(...);
}

-keep class kotlin.comparisons.UComparisonsKt
-keepclassmembers class kotlin.comparisons.UComparisonsKt {
   *** maxOf-5PvTz6A(...);
   *** maxOf-J1ME1BU(...);
   *** maxOf-Kr8caGY(...);
   *** maxOf-Md2H83M(...);
   *** maxOf-R03FKyM(...);
   *** maxOf-Wr6uiD8(...);
   *** maxOf-eb3DHEI(...);
   *** maxOf-t1qELG4(...);
   *** minOf-5PvTz6A(...);
   *** minOf-J1ME1BU(...);
   *** minOf-Kr8caGY(...);
   *** minOf-Md2H83M(...);
   *** minOf-R03FKyM(...);
   *** minOf-Wr6uiD8(...);
   *** minOf-eb3DHEI(...);
   *** minOf-t1qELG4(...);
}

-keep class kotlin.annotation.AnnotationRetention
-keepclassmembers class kotlin.annotation.AnnotationRetention {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.annotation.AnnotationTarget
-keepclassmembers class kotlin.annotation.AnnotationTarget {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.annotation.MustBeDocumented
-keepclassmembers class kotlin.annotation.MustBeDocumented {
}

-keep class kotlin.annotation.Repeatable
-keepclassmembers class kotlin.annotation.Repeatable {
}

-keep class kotlin.annotation.Retention
-keepclassmembers class kotlin.annotation.Retention {
}

-keep class kotlin.annotation.Target
-keepclassmembers class kotlin.annotation.Target {
}

-keep class kotlin.ranges.ULongRange$Companion
-keepclassmembers class kotlin.ranges.ULongRange$Companion {
   *** getEMPTY(...);
}

-keep class kotlin.ranges.ULongRange
-keepclassmembers class kotlin.ranges.ULongRange {
   *** getEndInclusive-s-VKNKU(...);
   *** getStart-s-VKNKU(...);
   *** contains-VKZWuLQ(...);
}

-keep class kotlin.ranges.UIntRange$Companion
-keepclassmembers class kotlin.ranges.UIntRange$Companion {
   *** getEMPTY(...);
}

-keep class kotlin.ranges.UIntRange
-keepclassmembers class kotlin.ranges.UIntRange {
   *** getEndInclusive-pVg5ArA(...);
   *** getStart-pVg5ArA(...);
   *** contains-WZ4Q5Ns(...);
}

-keep class kotlin.ranges.CharProgression$Companion
-keepclassmembers class kotlin.ranges.CharProgression$Companion {
   *** fromClosedRange(...);
}

-keep class kotlin.ranges.CharProgression
-keepclassmembers class kotlin.ranges.CharProgression {
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.CharRange$Companion
-keepclassmembers class kotlin.ranges.CharRange$Companion {
   *** getEMPTY(...);
}

-keep class kotlin.ranges.CharRange
-keepclassmembers class kotlin.ranges.CharRange {
   <init>(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** contains(...);
   *** getEndInclusive(...);
   *** getStart(...);
}

-keep class kotlin.ranges.ClosedFloatingPointRange$DefaultImpls
-keepclassmembers class kotlin.ranges.ClosedFloatingPointRange$DefaultImpls {
   *** contains(...);
   *** isEmpty(...);
}

-keep class kotlin.ranges.ClosedFloatingPointRange
-keepclassmembers class kotlin.ranges.ClosedFloatingPointRange {
}

-keep class kotlin.ranges.ClosedRange$DefaultImpls
-keepclassmembers class kotlin.ranges.ClosedRange$DefaultImpls {
   *** contains(...);
   *** isEmpty(...);
}

-keep class kotlin.ranges.ClosedRange
-keepclassmembers class kotlin.ranges.ClosedRange {
}

-keep class kotlin.ranges.IntProgression$Companion
-keepclassmembers class kotlin.ranges.IntProgression$Companion {
   *** fromClosedRange(...);
}

-keep class kotlin.ranges.IntProgression
-keepclassmembers class kotlin.ranges.IntProgression {
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.IntRange$Companion
-keepclassmembers class kotlin.ranges.IntRange$Companion {
   *** getEMPTY(...);
}

-keep class kotlin.ranges.IntRange
-keepclassmembers class kotlin.ranges.IntRange {
   <init>(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** contains(...);
   *** getEndInclusive(...);
   *** getStart(...);
}

-keep class kotlin.ranges.LongProgression$Companion
-keepclassmembers class kotlin.ranges.LongProgression$Companion {
   *** fromClosedRange(...);
}

-keep class kotlin.ranges.LongProgression
-keepclassmembers class kotlin.ranges.LongProgression {
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.LongRange$Companion
-keepclassmembers class kotlin.ranges.LongRange$Companion {
   *** getEMPTY(...);
}

-keep class kotlin.ranges.LongRange
-keepclassmembers class kotlin.ranges.LongRange {
   <init>(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** contains(...);
   *** getEndInclusive(...);
   *** getStart(...);
}

-keep class kotlin.ranges.RangesKt
-keepclassmembers class kotlin.ranges.RangesKt {
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** doubleRangeContains(...);
   *** doubleRangeContains(...);
   *** doubleRangeContains(...);
   *** doubleRangeContains(...);
   *** doubleRangeContains(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** floatRangeContains(...);
   *** floatRangeContains(...);
   *** floatRangeContains(...);
   *** floatRangeContains(...);
   *** floatRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** step(...);
   *** step(...);
   *** step(...);
   *** toByteExactOrNull(...);
   *** toByteExactOrNull(...);
   *** toByteExactOrNull(...);
   *** toByteExactOrNull(...);
   *** toByteExactOrNull(...);
   *** toIntExactOrNull(...);
   *** toIntExactOrNull(...);
   *** toIntExactOrNull(...);
   *** toLongExactOrNull(...);
   *** toLongExactOrNull(...);
   *** toShortExactOrNull(...);
   *** toShortExactOrNull(...);
   *** toShortExactOrNull(...);
   *** toShortExactOrNull(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** checkStepIsPositive(...);
   *** rangeTo(...);
   *** rangeTo(...);
   *** rangeTo(...);
}

-keep class kotlin.ranges.UIntProgression$Companion
-keepclassmembers class kotlin.ranges.UIntProgression$Companion {
   *** fromClosedRange-Nkh28Cs(...);
}

-keep class kotlin.ranges.UIntProgression
-keepclassmembers class kotlin.ranges.UIntProgression {
   *** getFirst-pVg5ArA(...);
   *** isEmpty(...);
   *** getLast-pVg5ArA(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.ULongProgression$Companion
-keepclassmembers class kotlin.ranges.ULongProgression$Companion {
   *** fromClosedRange-7ftBX0g(...);
}

-keep class kotlin.ranges.ULongProgression
-keepclassmembers class kotlin.ranges.ULongProgression {
   *** getFirst-s-VKNKU(...);
   *** isEmpty(...);
   *** getLast-s-VKNKU(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.URangesKt
-keepclassmembers class kotlin.ranges.URangesKt {
   *** coerceAtLeast-5PvTz6A(...);
   *** coerceAtLeast-J1ME1BU(...);
   *** coerceAtLeast-Kr8caGY(...);
   *** coerceAtLeast-eb3DHEI(...);
   *** coerceAtMost-5PvTz6A(...);
   *** coerceAtMost-J1ME1BU(...);
   *** coerceAtMost-Kr8caGY(...);
   *** coerceAtMost-eb3DHEI(...);
   *** coerceIn-JPwROB0(...);
   *** coerceIn-VKSA0NQ(...);
   *** coerceIn-WZ9TVnA(...);
   *** coerceIn-b33U2AM(...);
   *** coerceIn-sambcqE(...);
   *** coerceIn-wuiCnnA(...);
   *** contains-68kG9v0(...);
   *** contains-Gab390E(...);
   *** contains-ULb-yJY(...);
   *** contains-ZsK3CEQ(...);
   *** contains-fz5IDCE(...);
   *** contains-uhHAxoY(...);
   *** downTo-5PvTz6A(...);
   *** downTo-J1ME1BU(...);
   *** downTo-Kr8caGY(...);
   *** downTo-eb3DHEI(...);
   *** random(...);
   *** random(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** reversed(...);
   *** reversed(...);
   *** step(...);
   *** step(...);
   *** until-5PvTz6A(...);
   *** until-J1ME1BU(...);
   *** until-Kr8caGY(...);
   *** until-eb3DHEI(...);
}

-keep class kotlin.collections.AbstractSet
-keepclassmembers class kotlin.collections.AbstractSet {
   *** getSize(...);
}

-keep class kotlin.collections.AbstractList
-keepclassmembers class kotlin.collections.AbstractList {
   *** get(...);
   *** getSize(...);
}

-keep class kotlin.collections.AbstractCollection
-keepclassmembers class kotlin.collections.AbstractCollection {
   <init>(...);
   *** isEmpty(...);
   *** add(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** containsAll(...);
   *** getSize(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** size(...);
   *** toArray(...);
   *** toArray(...);
}

-keep class kotlin.collections.AbstractCollection
-keepclassmembers class kotlin.collections.AbstractCollection {
   *** getSize(...);
   *** iterator(...);
}

-keep class kotlin.collections.AbstractIterator$WhenMappings
-keepclassmembers class kotlin.collections.AbstractIterator$WhenMappings {
}

-keep class kotlin.collections.AbstractIterator
-keepclassmembers class kotlin.collections.AbstractIterator {
   <init>(...);
   *** hasNext(...);
   *** computeNext(...);
   *** done(...);
   *** next(...);
   *** remove(...);
   *** setNext(...);
}

-keep class kotlin.collections.AbstractIterator
-keepclassmembers class kotlin.collections.AbstractIterator {
   *** computeNext(...);
}

-keep class kotlin.collections.AbstractList
-keepclassmembers class kotlin.collections.AbstractList {
   <init>(...);
   *** add(...);
   *** addAll(...);
   *** get(...);
   *** indexOf(...);
   *** iterator(...);
   *** lastIndexOf(...);
   *** listIterator(...);
   *** listIterator(...);
   *** remove(...);
   *** set(...);
   *** subList(...);
}

-keep class kotlin.collections.AbstractMap
-keepclassmembers class kotlin.collections.AbstractMap {
   <init>(...);
   *** getEntries(...);
   *** isEmpty(...);
   *** getKeys(...);
   *** clear(...);
   *** containsKey(...);
   *** containsValue(...);
   *** entrySet(...);
   *** get(...);
   *** keySet(...);
   *** put(...);
   *** putAll(...);
   *** remove(...);
   *** size(...);
   *** values(...);
}

-keep class kotlin.collections.AbstractMap
-keepclassmembers class kotlin.collections.AbstractMap {
   *** getEntries(...);
}

-keep class kotlin.collections.AbstractMutableCollection
-keepclassmembers class kotlin.collections.AbstractMutableCollection {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** size(...);
}

-keep class kotlin.collections.AbstractMutableCollection
-keepclassmembers class kotlin.collections.AbstractMutableCollection {
   *** add(...);
   *** getSize(...);
   *** iterator(...);
}

-keep class kotlin.collections.AbstractMutableList
-keepclassmembers class kotlin.collections.AbstractMutableList {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** remove(...);
   *** removeAt(...);
   *** set(...);
   *** size(...);
}

-keep class kotlin.collections.AbstractMutableList
-keepclassmembers class kotlin.collections.AbstractMutableList {
   *** add(...);
   *** getSize(...);
   *** removeAt(...);
   *** set(...);
   *** get(...);
}

-keep class kotlin.collections.AbstractMutableMap
-keepclassmembers class kotlin.collections.AbstractMutableMap {
   <init>(...);
   *** getEntries(...);
   *** getKeys(...);
   *** entrySet(...);
   *** getSize(...);
   *** getValues(...);
   *** keySet(...);
   *** put(...);
   *** size(...);
   *** values(...);
}

-keep class kotlin.collections.AbstractMutableMap
-keepclassmembers class kotlin.collections.AbstractMutableMap {
   *** getEntries(...);
   *** put(...);
}

-keep class kotlin.collections.AbstractMutableSet
-keepclassmembers class kotlin.collections.AbstractMutableSet {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** size(...);
}

-keep class kotlin.collections.AbstractMutableSet
-keepclassmembers class kotlin.collections.AbstractMutableSet {
   *** add(...);
   *** getSize(...);
   *** iterator(...);
}

-keep class kotlin.collections.AbstractSet
-keepclassmembers class kotlin.collections.AbstractSet {
   <init>(...);
   *** iterator(...);
}

-keep class kotlin.collections.ArrayDeque
-keepclassmembers class kotlin.collections.ArrayDeque {
   <init>(...);
   <init>(...);
   <init>(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** addAll(...);
   *** addFirst(...);
   *** addLast(...);
   *** first(...);
   *** firstOrNull(...);
   *** get(...);
   *** getSize(...);
   *** last(...);
   *** lastOrNull(...);
   *** removeAll(...);
   *** removeAt(...);
   *** removeFirst(...);
   *** removeFirstOrNull(...);
   *** removeLast(...);
   *** removeLastOrNull(...);
   *** retainAll(...);
   *** set(...);
}

-keep class kotlin.collections.ArraysKt
-keepclassmembers class kotlin.collections.ArraysKt {
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateWith(...);
   *** associateWithTo(...);
   *** average(...);
   *** average(...);
   *** average(...);
   *** average(...);
   *** average(...);
   *** average(...);
   *** averageOfByte(...);
   *** averageOfDouble(...);
   *** averageOfFloat(...);
   *** averageOfInt(...);
   *** averageOfLong(...);
   *** averageOfShort(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNotNull(...);
   *** filterNotNullTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMapSequence(...);
   *** flatMapSequenceTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupingBy(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexedNotNull(...);
   *** mapIndexedNotNullTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** max(...);
   *** max(...);
   *** max(...);
   *** max(...);
   *** max(...);
   *** max(...);
   *** max(...);
   *** max(...);
   *** max(...);
   *** max(...);
   *** maxBy(...);
   *** maxBy(...);
   *** maxBy(...);
   *** maxBy(...);
   *** maxBy(...);
   *** maxBy(...);
   *** maxBy(...);
   *** maxBy(...);
   *** maxBy(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxWith(...);
   *** maxWith(...);
   *** maxWith(...);
   *** maxWith(...);
   *** maxWith(...);
   *** maxWith(...);
   *** maxWith(...);
   *** maxWith(...);
   *** maxWith(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** min(...);
   *** min(...);
   *** min(...);
   *** min(...);
   *** min(...);
   *** min(...);
   *** min(...);
   *** min(...);
   *** min(...);
   *** min(...);
   *** minBy(...);
   *** minBy(...);
   *** minBy(...);
   *** minBy(...);
   *** minBy(...);
   *** minBy(...);
   *** minBy(...);
   *** minBy(...);
   *** minBy(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minWith(...);
   *** minWith(...);
   *** minWith(...);
   *** minWith(...);
   *** minWith(...);
   *** minWith(...);
   *** minWith(...);
   *** minWith(...);
   *** minWith(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** requireNoNulls(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** runningFold(...);
   *** runningFoldIndexed(...);
   *** runningReduce(...);
   *** runningReduceIndexed(...);
   *** scan(...);
   *** scanIndexed(...);
   *** scanReduce(...);
   *** scanReduceIndexed(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sortBy(...);
   *** sortByDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayWith(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** sum(...);
   *** sum(...);
   *** sum(...);
   *** sum(...);
   *** sum(...);
   *** sum(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumOfByte(...);
   *** sumOfDouble(...);
   *** sumOfFloat(...);
   *** sumOfInt(...);
   *** sumOfLong(...);
   *** sumOfShort(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** toBooleanArray(...);
   *** toByteArray(...);
   *** toCharArray(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toDoubleArray(...);
   *** toFloatArray(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toIntArray(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toLongArray(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toShortArray(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** filterIsInstance(...);
   *** filterIsInstanceTo(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sortWith(...);
   *** sortWith(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** contentDeepEquals(...);
   *** contentDeepToString(...);
   *** flatten(...);
   *** unzip(...);
   *** arrayOfNulls(...);
   *** contentDeepHashCode(...);
   *** copyOfRangeToIndexCheck(...);
}

-keep class kotlin.collections.BooleanIterator
-keepclassmembers class kotlin.collections.BooleanIterator {
   <init>(...);
   *** next(...);
   *** nextBoolean(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.BooleanIterator
-keepclassmembers class kotlin.collections.BooleanIterator {
   *** nextBoolean(...);
   *** hasNext(...);
}

-keep class kotlin.collections.ByteIterator
-keepclassmembers class kotlin.collections.ByteIterator {
   <init>(...);
   *** next(...);
   *** nextByte(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.ByteIterator
-keepclassmembers class kotlin.collections.ByteIterator {
   *** nextByte(...);
   *** hasNext(...);
}

-keep class kotlin.collections.CharIterator
-keepclassmembers class kotlin.collections.CharIterator {
   <init>(...);
   *** next(...);
   *** nextChar(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.CharIterator
-keepclassmembers class kotlin.collections.CharIterator {
   *** nextChar(...);
   *** hasNext(...);
}

-keep class kotlin.collections.CollectionsKt
-keepclassmembers class kotlin.collections.CollectionsKt {
   *** all(...);
   *** any(...);
   *** any(...);
   *** asSequence(...);
   *** associate(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateTo(...);
   *** associateWith(...);
   *** associateWithTo(...);
   *** averageOfByte(...);
   *** averageOfDouble(...);
   *** averageOfFloat(...);
   *** averageOfInt(...);
   *** averageOfLong(...);
   *** averageOfShort(...);
   *** chunked(...);
   *** chunked(...);
   *** contains(...);
   *** count(...);
   *** count(...);
   *** distinct(...);
   *** distinctBy(...);
   *** drop(...);
   *** dropLast(...);
   *** dropLastWhile(...);
   *** dropWhile(...);
   *** elementAt(...);
   *** elementAtOrElse(...);
   *** elementAtOrNull(...);
   *** filter(...);
   *** filterIndexed(...);
   *** filterIndexedTo(...);
   *** filterNot(...);
   *** filterNotNull(...);
   *** filterNotNullTo(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMapSequence(...);
   *** flatMapSequenceTo(...);
   *** flatMapTo(...);
   *** fold(...);
   *** foldIndexed(...);
   *** foldRight(...);
   *** foldRightIndexed(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** getOrNull(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupingBy(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** intersect(...);
   *** joinTo(...);
   *** joinToString(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** map(...);
   *** mapIndexed(...);
   *** mapIndexedNotNull(...);
   *** mapIndexedNotNullTo(...);
   *** mapIndexedTo(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** max(...);
   *** max(...);
   *** max(...);
   *** maxBy(...);
   *** maxByOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxWith(...);
   *** maxWithOrNull(...);
   *** min(...);
   *** min(...);
   *** min(...);
   *** minBy(...);
   *** minByOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minWith(...);
   *** minWithOrNull(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** none(...);
   *** none(...);
   *** onEach(...);
   *** onEachIndexed(...);
   *** partition(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** random(...);
   *** randomOrNull(...);
   *** reduce(...);
   *** reduceIndexed(...);
   *** reduceIndexedOrNull(...);
   *** reduceOrNull(...);
   *** reduceRight(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightOrNull(...);
   *** requireNoNulls(...);
   *** requireNoNulls(...);
   *** reversed(...);
   *** runningFold(...);
   *** runningFoldIndexed(...);
   *** runningReduce(...);
   *** runningReduceIndexed(...);
   *** scan(...);
   *** scanIndexed(...);
   *** scanReduce(...);
   *** scanReduceIndexed(...);
   *** shuffle(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** slice(...);
   *** slice(...);
   *** sortBy(...);
   *** sortByDescending(...);
   *** sortDescending(...);
   *** sorted(...);
   *** sortedBy(...);
   *** sortedByDescending(...);
   *** sortedDescending(...);
   *** sortedWith(...);
   *** subtract(...);
   *** sumBy(...);
   *** sumByDouble(...);
   *** sumOfByte(...);
   *** sumOfDouble(...);
   *** sumOfFloat(...);
   *** sumOfInt(...);
   *** sumOfLong(...);
   *** sumOfShort(...);
   *** take(...);
   *** takeLast(...);
   *** takeLastWhile(...);
   *** takeWhile(...);
   *** toBooleanArray(...);
   *** toByteArray(...);
   *** toCharArray(...);
   *** toCollection(...);
   *** toDoubleArray(...);
   *** toFloatArray(...);
   *** toHashSet(...);
   *** toIntArray(...);
   *** toList(...);
   *** toLongArray(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableSet(...);
   *** toSet(...);
   *** toShortArray(...);
   *** union(...);
   *** windowed(...);
   *** windowed(...);
   *** withIndex(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zipWithNext(...);
   *** zipWithNext(...);
   *** filterIsInstance(...);
   *** filterIsInstanceTo(...);
   *** reverse(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** asReversed(...);
   *** asReversedMutable(...);
   *** addAll(...);
   *** addAll(...);
   *** addAll(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeFirst(...);
   *** removeFirstOrNull(...);
   *** removeLast(...);
   *** removeLastOrNull(...);
   *** retainAll(...);
   *** retainAll(...);
   *** retainAll(...);
   *** retainAll(...);
   *** retainAll(...);
   *** sort(...);
   *** sortWith(...);
   *** forEach(...);
   *** withIndex(...);
   *** iterator(...);
   *** collectionSizeOrDefault(...);
   *** collectionSizeOrNull(...);
   *** convertToSetForSetOperation(...);
   *** convertToSetForSetOperationWith(...);
   *** flatten(...);
   *** unzip(...);
   *** arrayListOf(...);
   *** asCollection(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearchBy(...);
   *** emptyList(...);
   *** getIndices(...);
   *** getLastIndex(...);
   *** listOf(...);
   *** listOfNotNull(...);
   *** listOfNotNull(...);
   *** mutableListOf(...);
   *** optimizeReadOnlyList(...);
   *** shuffled(...);
   *** throwCountOverflow(...);
   *** throwIndexOverflow(...);
   *** build(...);
   *** copyToArrayOfAny(...);
   *** createListBuilder(...);
   *** createListBuilder(...);
   *** listOf(...);
   *** shuffled(...);
   *** shuffled(...);
}

-keep class kotlin.collections.DoubleIterator
-keepclassmembers class kotlin.collections.DoubleIterator {
   <init>(...);
   *** next(...);
   *** nextDouble(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.DoubleIterator
-keepclassmembers class kotlin.collections.DoubleIterator {
   *** nextDouble(...);
   *** hasNext(...);
}

-keep class kotlin.collections.FloatIterator
-keepclassmembers class kotlin.collections.FloatIterator {
   <init>(...);
   *** next(...);
   *** nextFloat(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.FloatIterator
-keepclassmembers class kotlin.collections.FloatIterator {
   *** nextFloat(...);
   *** hasNext(...);
}

-keep class kotlin.collections.GroupingKt
-keepclassmembers class kotlin.collections.GroupingKt {
   *** aggregate(...);
   *** aggregateTo(...);
   *** eachCountTo(...);
   *** fold(...);
   *** fold(...);
   *** foldTo(...);
   *** foldTo(...);
   *** reduce(...);
   *** reduceTo(...);
   *** eachCount(...);
}

-keep class kotlin.collections.Grouping
-keepclassmembers class kotlin.collections.Grouping {
}

-keep class kotlin.collections.IndexedValue
-keepclassmembers class kotlin.collections.IndexedValue {
   <init>(...);
   *** getIndex(...);
   *** getValue(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class kotlin.collections.IntIterator
-keepclassmembers class kotlin.collections.IntIterator {
   <init>(...);
   *** next(...);
   *** nextInt(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.IntIterator
-keepclassmembers class kotlin.collections.IntIterator {
   *** nextInt(...);
   *** hasNext(...);
}

-keep class kotlin.collections.LongIterator
-keepclassmembers class kotlin.collections.LongIterator {
   <init>(...);
   *** next(...);
   *** nextLong(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.LongIterator
-keepclassmembers class kotlin.collections.LongIterator {
   *** nextLong(...);
   *** hasNext(...);
}

-keep class kotlin.collections.MapAccessorsKt
-keepclassmembers class kotlin.collections.MapAccessorsKt {
}

-keep class kotlin.collections.MapsKt
-keepclassmembers class kotlin.collections.MapsKt {
   *** all(...);
   *** any(...);
   *** any(...);
   *** asSequence(...);
   *** count(...);
   *** flatMap(...);
   *** flatMapSequence(...);
   *** flatMapSequenceTo(...);
   *** flatMapTo(...);
   *** forEach(...);
   *** map(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** minBy(...);
   *** minWith(...);
   *** none(...);
   *** none(...);
   *** onEach(...);
   *** onEachIndexed(...);
   *** toList(...);
   *** emptyMap(...);
   *** filter(...);
   *** filterKeys(...);
   *** filterNot(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** filterValues(...);
   *** getOrElseNullable(...);
   *** getOrPut(...);
   *** getValue(...);
   *** hashMapOf(...);
   *** linkedMapOf(...);
   *** mapKeys(...);
   *** mapKeysTo(...);
   *** mapOf(...);
   *** mapValues(...);
   *** mapValuesTo(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** mutableMapOf(...);
   *** optimizeReadOnlyMap(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** putAll(...);
   *** putAll(...);
   *** putAll(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMutableMap(...);
   *** build(...);
   *** createMapBuilder(...);
   *** createMapBuilder(...);
   *** getOrPut(...);
   *** mapCapacity(...);
   *** mapOf(...);
   *** sortedMapOf(...);
   *** sortedMapOf(...);
   *** toSingletonMap(...);
   *** toSortedMap(...);
   *** toSortedMap(...);
   *** getOrImplicitDefaultNullable(...);
   *** withDefault(...);
   *** withDefaultMutable(...);
}

-keep class kotlin.collections.SetsKt
-keepclassmembers class kotlin.collections.SetsKt {
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** emptySet(...);
   *** hashSetOf(...);
   *** linkedSetOf(...);
   *** mutableSetOf(...);
   *** optimizeReadOnlySet(...);
   *** setOf(...);
   *** setOfNotNull(...);
   *** setOfNotNull(...);
   *** build(...);
   *** createSetBuilder(...);
   *** createSetBuilder(...);
   *** setOf(...);
   *** sortedSetOf(...);
   *** sortedSetOf(...);
}

-keep class kotlin.collections.ShortIterator
-keepclassmembers class kotlin.collections.ShortIterator {
   <init>(...);
   *** next(...);
   *** nextShort(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.ShortIterator
-keepclassmembers class kotlin.collections.ShortIterator {
   *** nextShort(...);
   *** hasNext(...);
}

-keep class kotlin.collections.SlidingWindowKt
-keepclassmembers class kotlin.collections.SlidingWindowKt {
   *** windowedSequence(...);
}

-keep class kotlin.collections.TypeAliasesKt
-keepclassmembers class kotlin.collections.TypeAliasesKt {
}

-keep class kotlin.collections.UArraySortingKt
-keepclassmembers class kotlin.collections.UArraySortingKt {
}

-keep class kotlin.collections.UByteIterator
-keepclassmembers class kotlin.collections.UByteIterator {
   <init>(...);
   *** next-w2LRezQ(...);
   *** nextUByte-w2LRezQ(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.UByteIterator
-keepclassmembers class kotlin.collections.UByteIterator {
   *** nextUByte-w2LRezQ(...);
   *** hasNext(...);
}

-keep class kotlin.collections.UCollectionsKt
-keepclassmembers class kotlin.collections.UCollectionsKt {
   *** sumOfUByte(...);
   *** sumOfUInt(...);
   *** sumOfULong(...);
   *** sumOfUShort(...);
   *** toUByteArray(...);
   *** toUIntArray(...);
   *** toULongArray(...);
   *** toUShortArray(...);
}

-keep class kotlin.collections.UIntIterator
-keepclassmembers class kotlin.collections.UIntIterator {
   <init>(...);
   *** next-pVg5ArA(...);
   *** nextUInt-pVg5ArA(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.UIntIterator
-keepclassmembers class kotlin.collections.UIntIterator {
   *** nextUInt-pVg5ArA(...);
   *** hasNext(...);
}

-keep class kotlin.collections.ULongIterator
-keepclassmembers class kotlin.collections.ULongIterator {
   <init>(...);
   *** next-s-VKNKU(...);
   *** nextULong-s-VKNKU(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.ULongIterator
-keepclassmembers class kotlin.collections.ULongIterator {
   *** nextULong-s-VKNKU(...);
   *** hasNext(...);
}

-keep class kotlin.collections.UShortIterator
-keepclassmembers class kotlin.collections.UShortIterator {
   <init>(...);
   *** next-Mh2AYeg(...);
   *** nextUShort-Mh2AYeg(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.UShortIterator
-keepclassmembers class kotlin.collections.UShortIterator {
   *** nextUShort-Mh2AYeg(...);
   *** hasNext(...);
}

-keep class kotlin.collections.unsigned.UArraysKt
-keepclassmembers class kotlin.collections.unsigned.UArraysKt {
   *** contentEquals-FGO6Aew(...);
   *** contentEquals-KJPZfPQ(...);
   *** contentEquals-kV0jMPg(...);
   *** contentEquals-lec5QzE(...);
   *** contentHashCode-2csIQuQ(...);
   *** contentHashCode-XUkPCBk(...);
   *** contentHashCode-d-6D3K8(...);
   *** contentHashCode-uLth9ew(...);
   *** contentToString-2csIQuQ(...);
   *** contentToString-XUkPCBk(...);
   *** contentToString-d-6D3K8(...);
   *** contentToString-uLth9ew(...);
   *** drop-PpDY95g(...);
   *** drop-nggk6HY(...);
   *** drop-qFRl0hI(...);
   *** drop-r7IrZao(...);
   *** dropLast-PpDY95g(...);
   *** dropLast-nggk6HY(...);
   *** dropLast-qFRl0hI(...);
   *** dropLast-r7IrZao(...);
   *** fill-2fe2U9s(...);
   *** fill-EtDCXyQ(...);
   *** fill-K6DWlUc(...);
   *** fill-WpHrYlw(...);
   *** firstOrNull--ajY-9A(...);
   *** firstOrNull-GBYM_sE(...);
   *** firstOrNull-QwZRm1k(...);
   *** firstOrNull-rL5Bavg(...);
   *** getIndices--ajY-9A(...);
   *** getIndices-GBYM_sE(...);
   *** getIndices-QwZRm1k(...);
   *** getIndices-rL5Bavg(...);
   *** getLastIndex--ajY-9A(...);
   *** getLastIndex-GBYM_sE(...);
   *** getLastIndex-QwZRm1k(...);
   *** getLastIndex-rL5Bavg(...);
   *** getOrNull-PpDY95g(...);
   *** getOrNull-nggk6HY(...);
   *** getOrNull-qFRl0hI(...);
   *** getOrNull-r7IrZao(...);
   *** lastOrNull--ajY-9A(...);
   *** lastOrNull-GBYM_sE(...);
   *** lastOrNull-QwZRm1k(...);
   *** lastOrNull-rL5Bavg(...);
   *** max--ajY-9A(...);
   *** max-GBYM_sE(...);
   *** max-QwZRm1k(...);
   *** max-rL5Bavg(...);
   *** maxOrNull--ajY-9A(...);
   *** maxOrNull-GBYM_sE(...);
   *** maxOrNull-QwZRm1k(...);
   *** maxOrNull-rL5Bavg(...);
   *** maxWith-XMRcp5o(...);
   *** maxWith-YmdZ_VM(...);
   *** maxWith-eOHTfZs(...);
   *** maxWith-zrEWJaI(...);
   *** maxWithOrNull-XMRcp5o(...);
   *** maxWithOrNull-YmdZ_VM(...);
   *** maxWithOrNull-eOHTfZs(...);
   *** maxWithOrNull-zrEWJaI(...);
   *** min--ajY-9A(...);
   *** min-GBYM_sE(...);
   *** min-QwZRm1k(...);
   *** min-rL5Bavg(...);
   *** minOrNull--ajY-9A(...);
   *** minOrNull-GBYM_sE(...);
   *** minOrNull-QwZRm1k(...);
   *** minOrNull-rL5Bavg(...);
   *** minWith-XMRcp5o(...);
   *** minWith-YmdZ_VM(...);
   *** minWith-eOHTfZs(...);
   *** minWith-zrEWJaI(...);
   *** minWithOrNull-XMRcp5o(...);
   *** minWithOrNull-YmdZ_VM(...);
   *** minWithOrNull-eOHTfZs(...);
   *** minWithOrNull-zrEWJaI(...);
   *** plus-CFIt9YE(...);
   *** plus-kzHmqpY(...);
   *** plus-ojwP5H8(...);
   *** plus-xo_DsdI(...);
   *** random-2D5oskM(...);
   *** random-JzugnMA(...);
   *** random-oSF2wD8(...);
   *** random-s5X_as8(...);
   *** randomOrNull-2D5oskM(...);
   *** randomOrNull-JzugnMA(...);
   *** randomOrNull-oSF2wD8(...);
   *** randomOrNull-s5X_as8(...);
   *** reversed--ajY-9A(...);
   *** reversed-GBYM_sE(...);
   *** reversed-QwZRm1k(...);
   *** reversed-rL5Bavg(...);
   *** shuffle--ajY-9A(...);
   *** shuffle-2D5oskM(...);
   *** shuffle-GBYM_sE(...);
   *** shuffle-JzugnMA(...);
   *** shuffle-QwZRm1k(...);
   *** shuffle-oSF2wD8(...);
   *** shuffle-rL5Bavg(...);
   *** shuffle-s5X_as8(...);
   *** singleOrNull--ajY-9A(...);
   *** singleOrNull-GBYM_sE(...);
   *** singleOrNull-QwZRm1k(...);
   *** singleOrNull-rL5Bavg(...);
   *** slice-F7u83W8(...);
   *** slice-HwE9HBo(...);
   *** slice-JGPC0-M(...);
   *** slice-JQknh5Q(...);
   *** slice-Q6IL4kU(...);
   *** slice-ZRhS8yI(...);
   *** slice-c0bezYM(...);
   *** slice-tAntMlw(...);
   *** sliceArray-CFIt9YE(...);
   *** sliceArray-Q6IL4kU(...);
   *** sliceArray-ZRhS8yI(...);
   *** sliceArray-c0bezYM(...);
   *** sliceArray-kzHmqpY(...);
   *** sliceArray-ojwP5H8(...);
   *** sliceArray-tAntMlw(...);
   *** sliceArray-xo_DsdI(...);
   *** sort--ajY-9A(...);
   *** sort--nroSd4(...);
   *** sort-4UcCI2c(...);
   *** sort-Aa5vz7o(...);
   *** sort-GBYM_sE(...);
   *** sort-QwZRm1k(...);
   *** sort-oBK06Vg(...);
   *** sort-rL5Bavg(...);
   *** sortDescending--ajY-9A(...);
   *** sortDescending--nroSd4(...);
   *** sortDescending-4UcCI2c(...);
   *** sortDescending-Aa5vz7o(...);
   *** sortDescending-GBYM_sE(...);
   *** sortDescending-QwZRm1k(...);
   *** sortDescending-oBK06Vg(...);
   *** sortDescending-rL5Bavg(...);
   *** sorted--ajY-9A(...);
   *** sorted-GBYM_sE(...);
   *** sorted-QwZRm1k(...);
   *** sorted-rL5Bavg(...);
   *** sortedArray--ajY-9A(...);
   *** sortedArray-GBYM_sE(...);
   *** sortedArray-QwZRm1k(...);
   *** sortedArray-rL5Bavg(...);
   *** sortedArrayDescending--ajY-9A(...);
   *** sortedArrayDescending-GBYM_sE(...);
   *** sortedArrayDescending-QwZRm1k(...);
   *** sortedArrayDescending-rL5Bavg(...);
   *** sortedDescending--ajY-9A(...);
   *** sortedDescending-GBYM_sE(...);
   *** sortedDescending-QwZRm1k(...);
   *** sortedDescending-rL5Bavg(...);
   *** sumOfUByte(...);
   *** sumOfUInt(...);
   *** sumOfULong(...);
   *** sumOfUShort(...);
   *** take-PpDY95g(...);
   *** take-nggk6HY(...);
   *** take-qFRl0hI(...);
   *** take-r7IrZao(...);
   *** takeLast-PpDY95g(...);
   *** takeLast-nggk6HY(...);
   *** takeLast-qFRl0hI(...);
   *** takeLast-r7IrZao(...);
   *** toTypedArray--ajY-9A(...);
   *** toTypedArray-GBYM_sE(...);
   *** toTypedArray-QwZRm1k(...);
   *** toTypedArray-rL5Bavg(...);
   *** toUByteArray(...);
   *** toUIntArray(...);
   *** toULongArray(...);
   *** toUShortArray(...);
   *** withIndex--ajY-9A(...);
   *** withIndex-GBYM_sE(...);
   *** withIndex-QwZRm1k(...);
   *** withIndex-rL5Bavg(...);
   *** zip-C-E_24M(...);
   *** zip-F7u83W8(...);
   *** zip-HwE9HBo(...);
   *** zip-JGPC0-M(...);
   *** zip-JQknh5Q(...);
   *** zip-ctEhBpI(...);
   *** zip-f7H3mmw(...);
   *** zip-kdPth3s(...);
   *** zip-mazbYpA(...);
   *** zip-nl983wc(...);
   *** zip-uaTIQ5s(...);
   *** zip-us8wMrg(...);
   *** asList--ajY-9A(...);
   *** asList-GBYM_sE(...);
   *** asList-QwZRm1k(...);
   *** asList-rL5Bavg(...);
   *** binarySearch-2fe2U9s(...);
   *** binarySearch-EtDCXyQ(...);
   *** binarySearch-K6DWlUc(...);
   *** binarySearch-WpHrYlw(...);
}

-keep class kotlin.collections.builders.ListBuilderKt
-keepclassmembers class kotlin.collections.builders.ListBuilderKt {
   *** copyOfUninitializedElements(...);
   *** resetAt(...);
   *** resetRange(...);
}

